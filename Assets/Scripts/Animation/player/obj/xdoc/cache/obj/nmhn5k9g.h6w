id: cs.temp.dll
language: CSharp
name:
  Default: cs.temp.dll
qualifiedName:
  Default: cs.temp.dll
type: Assembly
modifiers: {}
items:
- id: Global
  language: CSharp
  name:
    CSharp: Global
    VB: ''
  nameWithType:
    CSharp: Global
    VB: ''
  qualifiedName:
    CSharp: Global
    VB: ''
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Global.CameraControl_45
    commentId: T:Global.CameraControl_45
    language: CSharp
    name:
      CSharp: CameraControl_45
      VB: CameraControl_45
    nameWithType:
      CSharp: CameraControl_45
      VB: CameraControl_45
    qualifiedName:
      CSharp: CameraControl_45
      VB: CameraControl_45
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: CameraControl_45
      path: ''
      startLine: 5
    syntax:
      content:
        CSharp: 'public class CameraControl_45 : MonoBehaviour'
        VB: >-
          Public Class CameraControl_45

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.CameraControl_45.maxSpeed
      commentId: F:Global.CameraControl_45.maxSpeed
      language: CSharp
      name:
        CSharp: maxSpeed
        VB: maxSpeed
      nameWithType:
        CSharp: CameraControl_45.maxSpeed
        VB: CameraControl_45.maxSpeed
      qualifiedName:
        CSharp: CameraControl_45.maxSpeed
        VB: CameraControl_45.maxSpeed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: maxSpeed
        path: ''
        startLine: 9
      syntax:
        content:
          CSharp: public float maxSpeed
          VB: Public maxSpeed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CameraControl_45.isStartFreedom
      commentId: F:Global.CameraControl_45.isStartFreedom
      language: CSharp
      name:
        CSharp: isStartFreedom
        VB: isStartFreedom
      nameWithType:
        CSharp: CameraControl_45.isStartFreedom
        VB: CameraControl_45.isStartFreedom
      qualifiedName:
        CSharp: CameraControl_45.isStartFreedom
        VB: CameraControl_45.isStartFreedom
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: isStartFreedom
        path: ''
        startLine: 10
      syntax:
        content:
          CSharp: public bool isStartFreedom
          VB: Public isStartFreedom As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CameraControl_45.TEX
      commentId: F:Global.CameraControl_45.TEX
      language: CSharp
      name:
        CSharp: TEX
        VB: TEX
      nameWithType:
        CSharp: CameraControl_45.TEX
        VB: CameraControl_45.TEX
      qualifiedName:
        CSharp: CameraControl_45.TEX
        VB: CameraControl_45.TEX
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: TEX
        path: ''
        startLine: 14
      syntax:
        content:
          CSharp: public Texture2D TEX
          VB: Public TEX As Texture2D
        return:
          type: Global.Texture2D
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.GameConstant
    commentId: T:Global.GameConstant
    language: CSharp
    name:
      CSharp: GameConstant
      VB: GameConstant
    nameWithType:
      CSharp: GameConstant
      VB: GameConstant
    qualifiedName:
      CSharp: GameConstant
      VB: GameConstant
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: GameConstant
      path: ''
      startLine: 96
    syntax:
      content:
        CSharp: public static class GameConstant
        VB: Public Module GameConstant
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Global.GameConstant.kMAX_SPEED
      commentId: F:Global.GameConstant.kMAX_SPEED
      language: CSharp
      name:
        CSharp: kMAX_SPEED
        VB: kMAX_SPEED
      nameWithType:
        CSharp: GameConstant.kMAX_SPEED
        VB: GameConstant.kMAX_SPEED
      qualifiedName:
        CSharp: GameConstant.kMAX_SPEED
        VB: GameConstant.kMAX_SPEED
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: kMAX_SPEED
        path: ''
        startLine: 98
      syntax:
        content:
          CSharp: public const float kMAX_SPEED = 100F
          VB: Public Const kMAX_SPEED As Single = 100F
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Global.InputMaster
    commentId: T:Global.InputMaster
    language: CSharp
    name:
      CSharp: InputMaster
      VB: InputMaster
    nameWithType:
      CSharp: InputMaster
      VB: InputMaster
    qualifiedName:
      CSharp: InputMaster
      VB: InputMaster
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: InputMaster
      path: ''
      startLine: 117
    syntax:
      content:
        CSharp: 'public class InputMaster : IInputActionCollection2'
        VB: >-
          Public Class InputMaster

              Inherits IInputActionCollection2
    inheritance:
    - System.Object
    implements:
    - Global.IDisposable
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.InputMaster.asset
      commentId: P:Global.InputMaster.asset
      language: CSharp
      name:
        CSharp: asset
        VB: asset
      nameWithType:
        CSharp: InputMaster.asset
        VB: InputMaster.asset
      qualifiedName:
        CSharp: InputMaster.asset
        VB: InputMaster.asset
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: asset
        path: ''
        startLine: 119
      syntax:
        content:
          CSharp: public InputActionAsset asset { get; }
          VB: Public ReadOnly Property asset As InputActionAsset
        parameters: []
        return:
          type: Global.InputActionAsset
      overload: Global.InputMaster.asset*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.InputMaster.#ctor
      commentId: M:Global.InputMaster.#ctor
      language: CSharp
      name:
        CSharp: InputMaster()
        VB: InputMaster()
      nameWithType:
        CSharp: InputMaster.InputMaster()
        VB: InputMaster.InputMaster()
      qualifiedName:
        CSharp: InputMaster.InputMaster()
        VB: InputMaster.InputMaster()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: .ctor
        path: ''
        startLine: 120
      syntax:
        content:
          CSharp: public InputMaster()
          VB: Public Sub New
      overload: Global.InputMaster.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.InputMaster.Dispose
      commentId: M:Global.InputMaster.Dispose
      language: CSharp
      name:
        CSharp: Dispose()
        VB: Dispose()
      nameWithType:
        CSharp: InputMaster.Dispose()
        VB: InputMaster.Dispose()
      qualifiedName:
        CSharp: InputMaster.Dispose()
        VB: InputMaster.Dispose()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Dispose
        path: ''
        startLine: 1042
      syntax:
        content:
          CSharp: public void Dispose()
          VB: Public Sub Dispose
      overload: Global.InputMaster.Dispose*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.InputMaster.bindingMask
      commentId: P:Global.InputMaster.bindingMask
      language: CSharp
      name:
        CSharp: bindingMask
        VB: bindingMask
      nameWithType:
        CSharp: InputMaster.bindingMask
        VB: InputMaster.bindingMask
      qualifiedName:
        CSharp: InputMaster.bindingMask
        VB: InputMaster.bindingMask
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: bindingMask
        path: ''
        startLine: 1047
      syntax:
        content:
          CSharp: public InputBinding? bindingMask { get; set; }
          VB: Public Property bindingMask As InputBinding?
        parameters: []
        return:
          type: System.Nullable{InputBinding}
      overload: Global.InputMaster.bindingMask*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.InputMaster.devices
      commentId: P:Global.InputMaster.devices
      language: CSharp
      name:
        CSharp: devices
        VB: devices
      nameWithType:
        CSharp: InputMaster.devices
        VB: InputMaster.devices
      qualifiedName:
        CSharp: InputMaster.devices
        VB: InputMaster.devices
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: devices
        path: ''
        startLine: 1053
      syntax:
        content:
          CSharp: public ReadOnlyArray<InputDevice>? devices { get; set; }
          VB: Public Property devices As ReadOnlyArray(Of InputDevice)?
        parameters: []
        return:
          type: System.Nullable{ReadOnlyArray{InputDevice}}
      overload: Global.InputMaster.devices*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.InputMaster.controlSchemes
      commentId: P:Global.InputMaster.controlSchemes
      language: CSharp
      name:
        CSharp: controlSchemes
        VB: controlSchemes
      nameWithType:
        CSharp: InputMaster.controlSchemes
        VB: InputMaster.controlSchemes
      qualifiedName:
        CSharp: InputMaster.controlSchemes
        VB: InputMaster.controlSchemes
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: controlSchemes
        path: ''
        startLine: 1059
      syntax:
        content:
          CSharp: public ReadOnlyArray<InputControlScheme> controlSchemes { get; }
          VB: Public ReadOnly Property controlSchemes As ReadOnlyArray(Of InputControlScheme)
        parameters: []
        return:
          type: Global.ReadOnlyArray{InputControlScheme}
      overload: Global.InputMaster.controlSchemes*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.InputMaster.Contains(InputAction)
      commentId: M:Global.InputMaster.Contains(InputAction)
      language: CSharp
      name:
        CSharp: Contains(InputAction)
        VB: Contains(InputAction)
      nameWithType:
        CSharp: InputMaster.Contains(InputAction)
        VB: InputMaster.Contains(InputAction)
      qualifiedName:
        CSharp: InputMaster.Contains(InputAction)
        VB: InputMaster.Contains(InputAction)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Contains
        path: ''
        startLine: 1061
      syntax:
        content:
          CSharp: public bool Contains(InputAction action)
          VB: Public Function Contains(action As InputAction) As Boolean
        parameters:
        - id: action
          type: Global.InputAction
        return:
          type: System.Boolean
      overload: Global.InputMaster.Contains*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.InputMaster.GetEnumerator
      commentId: M:Global.InputMaster.GetEnumerator
      language: CSharp
      name:
        CSharp: GetEnumerator()
        VB: GetEnumerator()
      nameWithType:
        CSharp: InputMaster.GetEnumerator()
        VB: InputMaster.GetEnumerator()
      qualifiedName:
        CSharp: InputMaster.GetEnumerator()
        VB: InputMaster.GetEnumerator()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetEnumerator
        path: ''
        startLine: 1066
      syntax:
        content:
          CSharp: public IEnumerator<InputAction> GetEnumerator()
          VB: Public Function GetEnumerator As IEnumerator(Of InputAction)
        return:
          type: System.Collections.Generic.IEnumerator{InputAction}
      overload: Global.InputMaster.GetEnumerator*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.InputMaster.Enable
      commentId: M:Global.InputMaster.Enable
      language: CSharp
      name:
        CSharp: Enable()
        VB: Enable()
      nameWithType:
        CSharp: InputMaster.Enable()
        VB: InputMaster.Enable()
      qualifiedName:
        CSharp: InputMaster.Enable()
        VB: InputMaster.Enable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Enable
        path: ''
        startLine: 1076
      syntax:
        content:
          CSharp: public void Enable()
          VB: Public Sub Enable
      overload: Global.InputMaster.Enable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.InputMaster.Disable
      commentId: M:Global.InputMaster.Disable
      language: CSharp
      name:
        CSharp: Disable()
        VB: Disable()
      nameWithType:
        CSharp: InputMaster.Disable()
        VB: InputMaster.Disable()
      qualifiedName:
        CSharp: InputMaster.Disable()
        VB: InputMaster.Disable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Disable
        path: ''
        startLine: 1081
      syntax:
        content:
          CSharp: public void Disable()
          VB: Public Sub Disable
      overload: Global.InputMaster.Disable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.InputMaster.bindings
      commentId: P:Global.InputMaster.bindings
      language: CSharp
      name:
        CSharp: bindings
        VB: bindings
      nameWithType:
        CSharp: InputMaster.bindings
        VB: InputMaster.bindings
      qualifiedName:
        CSharp: InputMaster.bindings
        VB: InputMaster.bindings
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: bindings
        path: ''
        startLine: 1085
      syntax:
        content:
          CSharp: public IEnumerable<InputBinding> bindings { get; }
          VB: Public ReadOnly Property bindings As IEnumerable(Of InputBinding)
        parameters: []
        return:
          type: System.Collections.Generic.IEnumerable{InputBinding}
      overload: Global.InputMaster.bindings*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.InputMaster.FindAction(System.String,System.Boolean)
      commentId: M:Global.InputMaster.FindAction(System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: FindAction(String, Boolean)
        VB: FindAction(String, Boolean)
      nameWithType:
        CSharp: InputMaster.FindAction(String, Boolean)
        VB: InputMaster.FindAction(String, Boolean)
      qualifiedName:
        CSharp: InputMaster.FindAction(System.String, System.Boolean)
        VB: InputMaster.FindAction(System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: FindAction
        path: ''
        startLine: 1087
      syntax:
        content:
          CSharp: public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
          VB: Public Function FindAction(actionNameOrId As String, throwIfNotFound As Boolean = False) As InputAction
        parameters:
        - id: actionNameOrId
          type: System.String
        - id: throwIfNotFound
          type: System.Boolean
        return:
          type: Global.InputAction
      overload: Global.InputMaster.FindAction*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.InputMaster.FindBinding(InputBinding,InputAction@)
      commentId: M:Global.InputMaster.FindBinding(InputBinding,InputAction@)
      language: CSharp
      name:
        CSharp: FindBinding(InputBinding, out InputAction)
        VB: FindBinding(InputBinding, ByRef InputAction)
      nameWithType:
        CSharp: InputMaster.FindBinding(InputBinding, out InputAction)
        VB: InputMaster.FindBinding(InputBinding, ByRef InputAction)
      qualifiedName:
        CSharp: InputMaster.FindBinding(InputBinding, out InputAction)
        VB: InputMaster.FindBinding(InputBinding, ByRef InputAction)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: FindBinding
        path: ''
        startLine: 1091
      syntax:
        content:
          CSharp: public int FindBinding(InputBinding bindingMask, out InputAction action)
          VB: Public Function FindBinding(bindingMask As InputBinding, ByRef action As InputAction) As Integer
        parameters:
        - id: bindingMask
          type: Global.InputBinding
        - id: action
          type: Global.InputAction
        return:
          type: System.Int32
      overload: Global.InputMaster.FindBinding*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.InputMaster.Player
      commentId: P:Global.InputMaster.Player
      language: CSharp
      name:
        CSharp: Player
        VB: Player
      nameWithType:
        CSharp: InputMaster.Player
        VB: InputMaster.Player
      qualifiedName:
        CSharp: InputMaster.Player
        VB: InputMaster.Player
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Player
        path: ''
        startLine: 1167
      syntax:
        content:
          CSharp: public InputMaster.PlayerActions Player { get; }
          VB: Public ReadOnly Property Player As InputMaster.PlayerActions
        parameters: []
        return:
          type: Global.InputMaster.PlayerActions
      overload: Global.InputMaster.Player*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.InputMaster.UI
      commentId: P:Global.InputMaster.UI
      language: CSharp
      name:
        CSharp: UI
        VB: UI
      nameWithType:
        CSharp: InputMaster.UI
        VB: InputMaster.UI
      qualifiedName:
        CSharp: InputMaster.UI
        VB: InputMaster.UI
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UI
        path: ''
        startLine: 1272
      syntax:
        content:
          CSharp: public InputMaster.UIActions UI { get; }
          VB: Public ReadOnly Property UI As InputMaster.UIActions
        parameters: []
        return:
          type: Global.InputMaster.UIActions
      overload: Global.InputMaster.UI*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.InputMaster.KeyboardMouseScheme
      commentId: P:Global.InputMaster.KeyboardMouseScheme
      language: CSharp
      name:
        CSharp: KeyboardMouseScheme
        VB: KeyboardMouseScheme
      nameWithType:
        CSharp: InputMaster.KeyboardMouseScheme
        VB: InputMaster.KeyboardMouseScheme
      qualifiedName:
        CSharp: InputMaster.KeyboardMouseScheme
        VB: InputMaster.KeyboardMouseScheme
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: KeyboardMouseScheme
        path: ''
        startLine: 1274
      syntax:
        content:
          CSharp: public InputControlScheme KeyboardMouseScheme { get; }
          VB: Public ReadOnly Property KeyboardMouseScheme As InputControlScheme
        parameters: []
        return:
          type: Global.InputControlScheme
      overload: Global.InputMaster.KeyboardMouseScheme*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.InputMaster.GamepadScheme
      commentId: P:Global.InputMaster.GamepadScheme
      language: CSharp
      name:
        CSharp: GamepadScheme
        VB: GamepadScheme
      nameWithType:
        CSharp: InputMaster.GamepadScheme
        VB: InputMaster.GamepadScheme
      qualifiedName:
        CSharp: InputMaster.GamepadScheme
        VB: InputMaster.GamepadScheme
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GamepadScheme
        path: ''
        startLine: 1283
      syntax:
        content:
          CSharp: public InputControlScheme GamepadScheme { get; }
          VB: Public ReadOnly Property GamepadScheme As InputControlScheme
        parameters: []
        return:
          type: Global.InputControlScheme
      overload: Global.InputMaster.GamepadScheme*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.InputMaster.TouchScheme
      commentId: P:Global.InputMaster.TouchScheme
      language: CSharp
      name:
        CSharp: TouchScheme
        VB: TouchScheme
      nameWithType:
        CSharp: InputMaster.TouchScheme
        VB: InputMaster.TouchScheme
      qualifiedName:
        CSharp: InputMaster.TouchScheme
        VB: InputMaster.TouchScheme
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: TouchScheme
        path: ''
        startLine: 1292
      syntax:
        content:
          CSharp: public InputControlScheme TouchScheme { get; }
          VB: Public ReadOnly Property TouchScheme As InputControlScheme
        parameters: []
        return:
          type: Global.InputControlScheme
      overload: Global.InputMaster.TouchScheme*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.InputMaster.JoystickScheme
      commentId: P:Global.InputMaster.JoystickScheme
      language: CSharp
      name:
        CSharp: JoystickScheme
        VB: JoystickScheme
      nameWithType:
        CSharp: InputMaster.JoystickScheme
        VB: InputMaster.JoystickScheme
      qualifiedName:
        CSharp: InputMaster.JoystickScheme
        VB: InputMaster.JoystickScheme
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: JoystickScheme
        path: ''
        startLine: 1301
      syntax:
        content:
          CSharp: public InputControlScheme JoystickScheme { get; }
          VB: Public ReadOnly Property JoystickScheme As InputControlScheme
        parameters: []
        return:
          type: Global.InputControlScheme
      overload: Global.InputMaster.JoystickScheme*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.InputMaster.XRScheme
      commentId: P:Global.InputMaster.XRScheme
      language: CSharp
      name:
        CSharp: XRScheme
        VB: XRScheme
      nameWithType:
        CSharp: InputMaster.XRScheme
        VB: InputMaster.XRScheme
      qualifiedName:
        CSharp: InputMaster.XRScheme
        VB: InputMaster.XRScheme
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: XRScheme
        path: ''
        startLine: 1310
      syntax:
        content:
          CSharp: public InputControlScheme XRScheme { get; }
          VB: Public ReadOnly Property XRScheme As InputControlScheme
        parameters: []
        return:
          type: Global.InputControlScheme
      overload: Global.InputMaster.XRScheme*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Global.InputMaster.PlayerActions
    commentId: T:Global.InputMaster.PlayerActions
    language: CSharp
    name:
      CSharp: InputMaster.PlayerActions
      VB: InputMaster.PlayerActions
    nameWithType:
      CSharp: InputMaster.PlayerActions
      VB: InputMaster.PlayerActions
    qualifiedName:
      CSharp: InputMaster.PlayerActions
      VB: InputMaster.PlayerActions
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PlayerActions
      path: ''
      startLine: 1105
    syntax:
      content:
        CSharp: public struct PlayerActions
        VB: Public Structure PlayerActions
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Global.InputMaster.PlayerActions.#ctor(InputMaster)
      commentId: M:Global.InputMaster.PlayerActions.#ctor(InputMaster)
      language: CSharp
      name:
        CSharp: PlayerActions(InputMaster)
        VB: PlayerActions(InputMaster)
      nameWithType:
        CSharp: InputMaster.PlayerActions.PlayerActions(InputMaster)
        VB: InputMaster.PlayerActions.PlayerActions(InputMaster)
      qualifiedName:
        CSharp: InputMaster.PlayerActions.PlayerActions(InputMaster)
        VB: InputMaster.PlayerActions.PlayerActions(InputMaster)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: .ctor
        path: ''
        startLine: 1108
      syntax:
        content:
          CSharp: public PlayerActions(InputMaster wrapper)
          VB: Public Sub New(wrapper As InputMaster)
        parameters:
        - id: wrapper
          type: Global.InputMaster
      overload: Global.InputMaster.PlayerActions.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.InputMaster.PlayerActions.Move
      commentId: P:Global.InputMaster.PlayerActions.Move
      language: CSharp
      name:
        CSharp: Move
        VB: Move
      nameWithType:
        CSharp: InputMaster.PlayerActions.Move
        VB: InputMaster.PlayerActions.Move
      qualifiedName:
        CSharp: InputMaster.PlayerActions.Move
        VB: InputMaster.PlayerActions.Move
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Move
        path: ''
        startLine: 1109
      syntax:
        content:
          CSharp: public readonly InputAction Move { get; }
          VB: Public ReadOnly Property Move As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.InputMaster.PlayerActions.Move*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.InputMaster.PlayerActions.Look
      commentId: P:Global.InputMaster.PlayerActions.Look
      language: CSharp
      name:
        CSharp: Look
        VB: Look
      nameWithType:
        CSharp: InputMaster.PlayerActions.Look
        VB: InputMaster.PlayerActions.Look
      qualifiedName:
        CSharp: InputMaster.PlayerActions.Look
        VB: InputMaster.PlayerActions.Look
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Look
        path: ''
        startLine: 1110
      syntax:
        content:
          CSharp: public readonly InputAction Look { get; }
          VB: Public ReadOnly Property Look As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.InputMaster.PlayerActions.Look*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.InputMaster.PlayerActions.Fire
      commentId: P:Global.InputMaster.PlayerActions.Fire
      language: CSharp
      name:
        CSharp: Fire
        VB: Fire
      nameWithType:
        CSharp: InputMaster.PlayerActions.Fire
        VB: InputMaster.PlayerActions.Fire
      qualifiedName:
        CSharp: InputMaster.PlayerActions.Fire
        VB: InputMaster.PlayerActions.Fire
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Fire
        path: ''
        startLine: 1111
      syntax:
        content:
          CSharp: public readonly InputAction Fire { get; }
          VB: Public ReadOnly Property Fire As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.InputMaster.PlayerActions.Fire*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.InputMaster.PlayerActions.Sprint
      commentId: P:Global.InputMaster.PlayerActions.Sprint
      language: CSharp
      name:
        CSharp: Sprint
        VB: Sprint
      nameWithType:
        CSharp: InputMaster.PlayerActions.Sprint
        VB: InputMaster.PlayerActions.Sprint
      qualifiedName:
        CSharp: InputMaster.PlayerActions.Sprint
        VB: InputMaster.PlayerActions.Sprint
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Sprint
        path: ''
        startLine: 1112
      syntax:
        content:
          CSharp: public readonly InputAction Sprint { get; }
          VB: Public ReadOnly Property Sprint As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.InputMaster.PlayerActions.Sprint*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.InputMaster.PlayerActions.Crouch
      commentId: P:Global.InputMaster.PlayerActions.Crouch
      language: CSharp
      name:
        CSharp: Crouch
        VB: Crouch
      nameWithType:
        CSharp: InputMaster.PlayerActions.Crouch
        VB: InputMaster.PlayerActions.Crouch
      qualifiedName:
        CSharp: InputMaster.PlayerActions.Crouch
        VB: InputMaster.PlayerActions.Crouch
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Crouch
        path: ''
        startLine: 1113
      syntax:
        content:
          CSharp: public readonly InputAction Crouch { get; }
          VB: Public ReadOnly Property Crouch As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.InputMaster.PlayerActions.Crouch*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.InputMaster.PlayerActions.Aim
      commentId: P:Global.InputMaster.PlayerActions.Aim
      language: CSharp
      name:
        CSharp: Aim
        VB: Aim
      nameWithType:
        CSharp: InputMaster.PlayerActions.Aim
        VB: InputMaster.PlayerActions.Aim
      qualifiedName:
        CSharp: InputMaster.PlayerActions.Aim
        VB: InputMaster.PlayerActions.Aim
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Aim
        path: ''
        startLine: 1114
      syntax:
        content:
          CSharp: public readonly InputAction Aim { get; }
          VB: Public ReadOnly Property Aim As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.InputMaster.PlayerActions.Aim*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.InputMaster.PlayerActions.Get
      commentId: M:Global.InputMaster.PlayerActions.Get
      language: CSharp
      name:
        CSharp: Get()
        VB: Get()
      nameWithType:
        CSharp: InputMaster.PlayerActions.Get()
        VB: InputMaster.PlayerActions.Get()
      qualifiedName:
        CSharp: InputMaster.PlayerActions.Get()
        VB: InputMaster.PlayerActions.Get()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Get
        path: ''
        startLine: 1115
      syntax:
        content:
          CSharp: public InputActionMap Get()
          VB: Public Function Get As InputActionMap
        return:
          type: Global.InputActionMap
      overload: Global.InputMaster.PlayerActions.Get*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.InputMaster.PlayerActions.Enable
      commentId: M:Global.InputMaster.PlayerActions.Enable
      language: CSharp
      name:
        CSharp: Enable()
        VB: Enable()
      nameWithType:
        CSharp: InputMaster.PlayerActions.Enable()
        VB: InputMaster.PlayerActions.Enable()
      qualifiedName:
        CSharp: InputMaster.PlayerActions.Enable()
        VB: InputMaster.PlayerActions.Enable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Enable
        path: ''
        startLine: 1116
      syntax:
        content:
          CSharp: public void Enable()
          VB: Public Sub Enable
      overload: Global.InputMaster.PlayerActions.Enable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.InputMaster.PlayerActions.Disable
      commentId: M:Global.InputMaster.PlayerActions.Disable
      language: CSharp
      name:
        CSharp: Disable()
        VB: Disable()
      nameWithType:
        CSharp: InputMaster.PlayerActions.Disable()
        VB: InputMaster.PlayerActions.Disable()
      qualifiedName:
        CSharp: InputMaster.PlayerActions.Disable()
        VB: InputMaster.PlayerActions.Disable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Disable
        path: ''
        startLine: 1117
      syntax:
        content:
          CSharp: public void Disable()
          VB: Public Sub Disable
      overload: Global.InputMaster.PlayerActions.Disable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.InputMaster.PlayerActions.enabled
      commentId: P:Global.InputMaster.PlayerActions.enabled
      language: CSharp
      name:
        CSharp: enabled
        VB: enabled
      nameWithType:
        CSharp: InputMaster.PlayerActions.enabled
        VB: InputMaster.PlayerActions.enabled
      qualifiedName:
        CSharp: InputMaster.PlayerActions.enabled
        VB: InputMaster.PlayerActions.enabled
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: enabled
        path: ''
        startLine: 1118
      syntax:
        content:
          CSharp: public readonly bool enabled { get; }
          VB: Public ReadOnly Property enabled As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Global.InputMaster.PlayerActions.enabled*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.InputMaster.PlayerActions.op_Implicit(InputMaster.PlayerActions)~InputActionMap
      commentId: M:Global.InputMaster.PlayerActions.op_Implicit(InputMaster.PlayerActions)~InputActionMap
      language: CSharp
      name:
        CSharp: Implicit(InputMaster.PlayerActions to InputActionMap)
        VB: Widening(InputMaster.PlayerActions to InputActionMap)
      nameWithType:
        CSharp: InputMaster.PlayerActions.Implicit(InputMaster.PlayerActions to InputActionMap)
        VB: InputMaster.PlayerActions.Widening(InputMaster.PlayerActions to InputActionMap)
      qualifiedName:
        CSharp: InputMaster.PlayerActions.Implicit(InputMaster.PlayerActions to InputActionMap)
        VB: InputMaster.PlayerActions.Widening(InputMaster.PlayerActions to InputActionMap)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: op_Implicit
        path: ''
        startLine: 1119
      syntax:
        content:
          CSharp: public static implicit operator InputActionMap(InputMaster.PlayerActions set)
          VB: Public Shared Widening Operator CType(set As InputMaster.PlayerActions) As InputActionMap
        parameters:
        - id: set
          type: Global.InputMaster.PlayerActions
        return:
          type: Global.InputActionMap
      overload: Global.InputMaster.PlayerActions.op_Implicit*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.InputMaster.PlayerActions.SetCallbacks(InputMaster.IPlayerActions)
      commentId: M:Global.InputMaster.PlayerActions.SetCallbacks(InputMaster.IPlayerActions)
      language: CSharp
      name:
        CSharp: SetCallbacks(InputMaster.IPlayerActions)
        VB: SetCallbacks(InputMaster.IPlayerActions)
      nameWithType:
        CSharp: InputMaster.PlayerActions.SetCallbacks(InputMaster.IPlayerActions)
        VB: InputMaster.PlayerActions.SetCallbacks(InputMaster.IPlayerActions)
      qualifiedName:
        CSharp: InputMaster.PlayerActions.SetCallbacks(InputMaster.IPlayerActions)
        VB: InputMaster.PlayerActions.SetCallbacks(InputMaster.IPlayerActions)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetCallbacks
        path: ''
        startLine: 1120
      syntax:
        content:
          CSharp: public void SetCallbacks(InputMaster.IPlayerActions instance)
          VB: Public Sub SetCallbacks(instance As InputMaster.IPlayerActions)
        parameters:
        - id: instance
          type: Global.InputMaster.IPlayerActions
      overload: Global.InputMaster.PlayerActions.SetCallbacks*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.InputMaster.UIActions
    commentId: T:Global.InputMaster.UIActions
    language: CSharp
    name:
      CSharp: InputMaster.UIActions
      VB: InputMaster.UIActions
    nameWithType:
      CSharp: InputMaster.UIActions
      VB: InputMaster.UIActions
    qualifiedName:
      CSharp: InputMaster.UIActions
      VB: InputMaster.UIActions
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: UIActions
      path: ''
      startLine: 1182
    syntax:
      content:
        CSharp: public struct UIActions
        VB: Public Structure UIActions
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Global.InputMaster.UIActions.#ctor(InputMaster)
      commentId: M:Global.InputMaster.UIActions.#ctor(InputMaster)
      language: CSharp
      name:
        CSharp: UIActions(InputMaster)
        VB: UIActions(InputMaster)
      nameWithType:
        CSharp: InputMaster.UIActions.UIActions(InputMaster)
        VB: InputMaster.UIActions.UIActions(InputMaster)
      qualifiedName:
        CSharp: InputMaster.UIActions.UIActions(InputMaster)
        VB: InputMaster.UIActions.UIActions(InputMaster)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: .ctor
        path: ''
        startLine: 1185
      syntax:
        content:
          CSharp: public UIActions(InputMaster wrapper)
          VB: Public Sub New(wrapper As InputMaster)
        parameters:
        - id: wrapper
          type: Global.InputMaster
      overload: Global.InputMaster.UIActions.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.InputMaster.UIActions.Navigate
      commentId: P:Global.InputMaster.UIActions.Navigate
      language: CSharp
      name:
        CSharp: Navigate
        VB: Navigate
      nameWithType:
        CSharp: InputMaster.UIActions.Navigate
        VB: InputMaster.UIActions.Navigate
      qualifiedName:
        CSharp: InputMaster.UIActions.Navigate
        VB: InputMaster.UIActions.Navigate
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Navigate
        path: ''
        startLine: 1186
      syntax:
        content:
          CSharp: public readonly InputAction Navigate { get; }
          VB: Public ReadOnly Property Navigate As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.InputMaster.UIActions.Navigate*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.InputMaster.UIActions.Submit
      commentId: P:Global.InputMaster.UIActions.Submit
      language: CSharp
      name:
        CSharp: Submit
        VB: Submit
      nameWithType:
        CSharp: InputMaster.UIActions.Submit
        VB: InputMaster.UIActions.Submit
      qualifiedName:
        CSharp: InputMaster.UIActions.Submit
        VB: InputMaster.UIActions.Submit
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Submit
        path: ''
        startLine: 1187
      syntax:
        content:
          CSharp: public readonly InputAction Submit { get; }
          VB: Public ReadOnly Property Submit As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.InputMaster.UIActions.Submit*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.InputMaster.UIActions.Cancel
      commentId: P:Global.InputMaster.UIActions.Cancel
      language: CSharp
      name:
        CSharp: Cancel
        VB: Cancel
      nameWithType:
        CSharp: InputMaster.UIActions.Cancel
        VB: InputMaster.UIActions.Cancel
      qualifiedName:
        CSharp: InputMaster.UIActions.Cancel
        VB: InputMaster.UIActions.Cancel
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Cancel
        path: ''
        startLine: 1188
      syntax:
        content:
          CSharp: public readonly InputAction Cancel { get; }
          VB: Public ReadOnly Property Cancel As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.InputMaster.UIActions.Cancel*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.InputMaster.UIActions.Point
      commentId: P:Global.InputMaster.UIActions.Point
      language: CSharp
      name:
        CSharp: Point
        VB: Point
      nameWithType:
        CSharp: InputMaster.UIActions.Point
        VB: InputMaster.UIActions.Point
      qualifiedName:
        CSharp: InputMaster.UIActions.Point
        VB: InputMaster.UIActions.Point
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Point
        path: ''
        startLine: 1189
      syntax:
        content:
          CSharp: public readonly InputAction Point { get; }
          VB: Public ReadOnly Property Point As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.InputMaster.UIActions.Point*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.InputMaster.UIActions.Click
      commentId: P:Global.InputMaster.UIActions.Click
      language: CSharp
      name:
        CSharp: Click
        VB: Click
      nameWithType:
        CSharp: InputMaster.UIActions.Click
        VB: InputMaster.UIActions.Click
      qualifiedName:
        CSharp: InputMaster.UIActions.Click
        VB: InputMaster.UIActions.Click
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Click
        path: ''
        startLine: 1190
      syntax:
        content:
          CSharp: public readonly InputAction Click { get; }
          VB: Public ReadOnly Property Click As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.InputMaster.UIActions.Click*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.InputMaster.UIActions.ScrollWheel
      commentId: P:Global.InputMaster.UIActions.ScrollWheel
      language: CSharp
      name:
        CSharp: ScrollWheel
        VB: ScrollWheel
      nameWithType:
        CSharp: InputMaster.UIActions.ScrollWheel
        VB: InputMaster.UIActions.ScrollWheel
      qualifiedName:
        CSharp: InputMaster.UIActions.ScrollWheel
        VB: InputMaster.UIActions.ScrollWheel
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ScrollWheel
        path: ''
        startLine: 1191
      syntax:
        content:
          CSharp: public readonly InputAction ScrollWheel { get; }
          VB: Public ReadOnly Property ScrollWheel As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.InputMaster.UIActions.ScrollWheel*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.InputMaster.UIActions.MiddleClick
      commentId: P:Global.InputMaster.UIActions.MiddleClick
      language: CSharp
      name:
        CSharp: MiddleClick
        VB: MiddleClick
      nameWithType:
        CSharp: InputMaster.UIActions.MiddleClick
        VB: InputMaster.UIActions.MiddleClick
      qualifiedName:
        CSharp: InputMaster.UIActions.MiddleClick
        VB: InputMaster.UIActions.MiddleClick
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: MiddleClick
        path: ''
        startLine: 1192
      syntax:
        content:
          CSharp: public readonly InputAction MiddleClick { get; }
          VB: Public ReadOnly Property MiddleClick As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.InputMaster.UIActions.MiddleClick*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.InputMaster.UIActions.RightClick
      commentId: P:Global.InputMaster.UIActions.RightClick
      language: CSharp
      name:
        CSharp: RightClick
        VB: RightClick
      nameWithType:
        CSharp: InputMaster.UIActions.RightClick
        VB: InputMaster.UIActions.RightClick
      qualifiedName:
        CSharp: InputMaster.UIActions.RightClick
        VB: InputMaster.UIActions.RightClick
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: RightClick
        path: ''
        startLine: 1193
      syntax:
        content:
          CSharp: public readonly InputAction RightClick { get; }
          VB: Public ReadOnly Property RightClick As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.InputMaster.UIActions.RightClick*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.InputMaster.UIActions.TrackedDevicePosition
      commentId: P:Global.InputMaster.UIActions.TrackedDevicePosition
      language: CSharp
      name:
        CSharp: TrackedDevicePosition
        VB: TrackedDevicePosition
      nameWithType:
        CSharp: InputMaster.UIActions.TrackedDevicePosition
        VB: InputMaster.UIActions.TrackedDevicePosition
      qualifiedName:
        CSharp: InputMaster.UIActions.TrackedDevicePosition
        VB: InputMaster.UIActions.TrackedDevicePosition
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: TrackedDevicePosition
        path: ''
        startLine: 1194
      syntax:
        content:
          CSharp: public readonly InputAction TrackedDevicePosition { get; }
          VB: Public ReadOnly Property TrackedDevicePosition As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.InputMaster.UIActions.TrackedDevicePosition*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.InputMaster.UIActions.TrackedDeviceOrientation
      commentId: P:Global.InputMaster.UIActions.TrackedDeviceOrientation
      language: CSharp
      name:
        CSharp: TrackedDeviceOrientation
        VB: TrackedDeviceOrientation
      nameWithType:
        CSharp: InputMaster.UIActions.TrackedDeviceOrientation
        VB: InputMaster.UIActions.TrackedDeviceOrientation
      qualifiedName:
        CSharp: InputMaster.UIActions.TrackedDeviceOrientation
        VB: InputMaster.UIActions.TrackedDeviceOrientation
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: TrackedDeviceOrientation
        path: ''
        startLine: 1195
      syntax:
        content:
          CSharp: public readonly InputAction TrackedDeviceOrientation { get; }
          VB: Public ReadOnly Property TrackedDeviceOrientation As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.InputMaster.UIActions.TrackedDeviceOrientation*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.InputMaster.UIActions.Get
      commentId: M:Global.InputMaster.UIActions.Get
      language: CSharp
      name:
        CSharp: Get()
        VB: Get()
      nameWithType:
        CSharp: InputMaster.UIActions.Get()
        VB: InputMaster.UIActions.Get()
      qualifiedName:
        CSharp: InputMaster.UIActions.Get()
        VB: InputMaster.UIActions.Get()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Get
        path: ''
        startLine: 1196
      syntax:
        content:
          CSharp: public InputActionMap Get()
          VB: Public Function Get As InputActionMap
        return:
          type: Global.InputActionMap
      overload: Global.InputMaster.UIActions.Get*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.InputMaster.UIActions.Enable
      commentId: M:Global.InputMaster.UIActions.Enable
      language: CSharp
      name:
        CSharp: Enable()
        VB: Enable()
      nameWithType:
        CSharp: InputMaster.UIActions.Enable()
        VB: InputMaster.UIActions.Enable()
      qualifiedName:
        CSharp: InputMaster.UIActions.Enable()
        VB: InputMaster.UIActions.Enable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Enable
        path: ''
        startLine: 1197
      syntax:
        content:
          CSharp: public void Enable()
          VB: Public Sub Enable
      overload: Global.InputMaster.UIActions.Enable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.InputMaster.UIActions.Disable
      commentId: M:Global.InputMaster.UIActions.Disable
      language: CSharp
      name:
        CSharp: Disable()
        VB: Disable()
      nameWithType:
        CSharp: InputMaster.UIActions.Disable()
        VB: InputMaster.UIActions.Disable()
      qualifiedName:
        CSharp: InputMaster.UIActions.Disable()
        VB: InputMaster.UIActions.Disable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Disable
        path: ''
        startLine: 1198
      syntax:
        content:
          CSharp: public void Disable()
          VB: Public Sub Disable
      overload: Global.InputMaster.UIActions.Disable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.InputMaster.UIActions.enabled
      commentId: P:Global.InputMaster.UIActions.enabled
      language: CSharp
      name:
        CSharp: enabled
        VB: enabled
      nameWithType:
        CSharp: InputMaster.UIActions.enabled
        VB: InputMaster.UIActions.enabled
      qualifiedName:
        CSharp: InputMaster.UIActions.enabled
        VB: InputMaster.UIActions.enabled
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: enabled
        path: ''
        startLine: 1199
      syntax:
        content:
          CSharp: public readonly bool enabled { get; }
          VB: Public ReadOnly Property enabled As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Global.InputMaster.UIActions.enabled*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.InputMaster.UIActions.op_Implicit(InputMaster.UIActions)~InputActionMap
      commentId: M:Global.InputMaster.UIActions.op_Implicit(InputMaster.UIActions)~InputActionMap
      language: CSharp
      name:
        CSharp: Implicit(InputMaster.UIActions to InputActionMap)
        VB: Widening(InputMaster.UIActions to InputActionMap)
      nameWithType:
        CSharp: InputMaster.UIActions.Implicit(InputMaster.UIActions to InputActionMap)
        VB: InputMaster.UIActions.Widening(InputMaster.UIActions to InputActionMap)
      qualifiedName:
        CSharp: InputMaster.UIActions.Implicit(InputMaster.UIActions to InputActionMap)
        VB: InputMaster.UIActions.Widening(InputMaster.UIActions to InputActionMap)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: op_Implicit
        path: ''
        startLine: 1200
      syntax:
        content:
          CSharp: public static implicit operator InputActionMap(InputMaster.UIActions set)
          VB: Public Shared Widening Operator CType(set As InputMaster.UIActions) As InputActionMap
        parameters:
        - id: set
          type: Global.InputMaster.UIActions
        return:
          type: Global.InputActionMap
      overload: Global.InputMaster.UIActions.op_Implicit*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.InputMaster.UIActions.SetCallbacks(InputMaster.IUIActions)
      commentId: M:Global.InputMaster.UIActions.SetCallbacks(InputMaster.IUIActions)
      language: CSharp
      name:
        CSharp: SetCallbacks(InputMaster.IUIActions)
        VB: SetCallbacks(InputMaster.IUIActions)
      nameWithType:
        CSharp: InputMaster.UIActions.SetCallbacks(InputMaster.IUIActions)
        VB: InputMaster.UIActions.SetCallbacks(InputMaster.IUIActions)
      qualifiedName:
        CSharp: InputMaster.UIActions.SetCallbacks(InputMaster.IUIActions)
        VB: InputMaster.UIActions.SetCallbacks(InputMaster.IUIActions)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetCallbacks
        path: ''
        startLine: 1201
      syntax:
        content:
          CSharp: public void SetCallbacks(InputMaster.IUIActions instance)
          VB: Public Sub SetCallbacks(instance As InputMaster.IUIActions)
        parameters:
        - id: instance
          type: Global.InputMaster.IUIActions
      overload: Global.InputMaster.UIActions.SetCallbacks*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.InputMaster.IPlayerActions
    commentId: T:Global.InputMaster.IPlayerActions
    language: CSharp
    name:
      CSharp: InputMaster.IPlayerActions
      VB: InputMaster.IPlayerActions
    nameWithType:
      CSharp: InputMaster.IPlayerActions
      VB: InputMaster.IPlayerActions
    qualifiedName:
      CSharp: InputMaster.IPlayerActions
      VB: InputMaster.IPlayerActions
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: IPlayerActions
      path: ''
      startLine: 1318
    syntax:
      content:
        CSharp: public interface IPlayerActions
        VB: Public Interface IPlayerActions
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Global.InputMaster.IPlayerActions.OnMove(InputAction.CallbackContext)
      commentId: M:Global.InputMaster.IPlayerActions.OnMove(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnMove(InputAction.CallbackContext)
        VB: OnMove(InputAction.CallbackContext)
      nameWithType:
        CSharp: InputMaster.IPlayerActions.OnMove(InputAction.CallbackContext)
        VB: InputMaster.IPlayerActions.OnMove(InputAction.CallbackContext)
      qualifiedName:
        CSharp: InputMaster.IPlayerActions.OnMove(InputAction.CallbackContext)
        VB: InputMaster.IPlayerActions.OnMove(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnMove
        path: ''
        startLine: 1320
      syntax:
        content:
          CSharp: void OnMove(InputAction.CallbackContext context)
          VB: Sub OnMove(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.InputMaster.IPlayerActions.OnMove*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.InputMaster.IPlayerActions.OnLook(InputAction.CallbackContext)
      commentId: M:Global.InputMaster.IPlayerActions.OnLook(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnLook(InputAction.CallbackContext)
        VB: OnLook(InputAction.CallbackContext)
      nameWithType:
        CSharp: InputMaster.IPlayerActions.OnLook(InputAction.CallbackContext)
        VB: InputMaster.IPlayerActions.OnLook(InputAction.CallbackContext)
      qualifiedName:
        CSharp: InputMaster.IPlayerActions.OnLook(InputAction.CallbackContext)
        VB: InputMaster.IPlayerActions.OnLook(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnLook
        path: ''
        startLine: 1321
      syntax:
        content:
          CSharp: void OnLook(InputAction.CallbackContext context)
          VB: Sub OnLook(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.InputMaster.IPlayerActions.OnLook*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.InputMaster.IPlayerActions.OnFire(InputAction.CallbackContext)
      commentId: M:Global.InputMaster.IPlayerActions.OnFire(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnFire(InputAction.CallbackContext)
        VB: OnFire(InputAction.CallbackContext)
      nameWithType:
        CSharp: InputMaster.IPlayerActions.OnFire(InputAction.CallbackContext)
        VB: InputMaster.IPlayerActions.OnFire(InputAction.CallbackContext)
      qualifiedName:
        CSharp: InputMaster.IPlayerActions.OnFire(InputAction.CallbackContext)
        VB: InputMaster.IPlayerActions.OnFire(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnFire
        path: ''
        startLine: 1322
      syntax:
        content:
          CSharp: void OnFire(InputAction.CallbackContext context)
          VB: Sub OnFire(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.InputMaster.IPlayerActions.OnFire*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.InputMaster.IPlayerActions.OnSprint(InputAction.CallbackContext)
      commentId: M:Global.InputMaster.IPlayerActions.OnSprint(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnSprint(InputAction.CallbackContext)
        VB: OnSprint(InputAction.CallbackContext)
      nameWithType:
        CSharp: InputMaster.IPlayerActions.OnSprint(InputAction.CallbackContext)
        VB: InputMaster.IPlayerActions.OnSprint(InputAction.CallbackContext)
      qualifiedName:
        CSharp: InputMaster.IPlayerActions.OnSprint(InputAction.CallbackContext)
        VB: InputMaster.IPlayerActions.OnSprint(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnSprint
        path: ''
        startLine: 1323
      syntax:
        content:
          CSharp: void OnSprint(InputAction.CallbackContext context)
          VB: Sub OnSprint(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.InputMaster.IPlayerActions.OnSprint*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.InputMaster.IPlayerActions.OnCrouch(InputAction.CallbackContext)
      commentId: M:Global.InputMaster.IPlayerActions.OnCrouch(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnCrouch(InputAction.CallbackContext)
        VB: OnCrouch(InputAction.CallbackContext)
      nameWithType:
        CSharp: InputMaster.IPlayerActions.OnCrouch(InputAction.CallbackContext)
        VB: InputMaster.IPlayerActions.OnCrouch(InputAction.CallbackContext)
      qualifiedName:
        CSharp: InputMaster.IPlayerActions.OnCrouch(InputAction.CallbackContext)
        VB: InputMaster.IPlayerActions.OnCrouch(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnCrouch
        path: ''
        startLine: 1324
      syntax:
        content:
          CSharp: void OnCrouch(InputAction.CallbackContext context)
          VB: Sub OnCrouch(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.InputMaster.IPlayerActions.OnCrouch*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.InputMaster.IPlayerActions.OnAim(InputAction.CallbackContext)
      commentId: M:Global.InputMaster.IPlayerActions.OnAim(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnAim(InputAction.CallbackContext)
        VB: OnAim(InputAction.CallbackContext)
      nameWithType:
        CSharp: InputMaster.IPlayerActions.OnAim(InputAction.CallbackContext)
        VB: InputMaster.IPlayerActions.OnAim(InputAction.CallbackContext)
      qualifiedName:
        CSharp: InputMaster.IPlayerActions.OnAim(InputAction.CallbackContext)
        VB: InputMaster.IPlayerActions.OnAim(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnAim
        path: ''
        startLine: 1325
      syntax:
        content:
          CSharp: void OnAim(InputAction.CallbackContext context)
          VB: Sub OnAim(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.InputMaster.IPlayerActions.OnAim*
      modifiers:
        CSharp: []
        VB: []
  - id: Global.InputMaster.IUIActions
    commentId: T:Global.InputMaster.IUIActions
    language: CSharp
    name:
      CSharp: InputMaster.IUIActions
      VB: InputMaster.IUIActions
    nameWithType:
      CSharp: InputMaster.IUIActions
      VB: InputMaster.IUIActions
    qualifiedName:
      CSharp: InputMaster.IUIActions
      VB: InputMaster.IUIActions
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: IUIActions
      path: ''
      startLine: 1327
    syntax:
      content:
        CSharp: public interface IUIActions
        VB: Public Interface IUIActions
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Global.InputMaster.IUIActions.OnNavigate(InputAction.CallbackContext)
      commentId: M:Global.InputMaster.IUIActions.OnNavigate(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnNavigate(InputAction.CallbackContext)
        VB: OnNavigate(InputAction.CallbackContext)
      nameWithType:
        CSharp: InputMaster.IUIActions.OnNavigate(InputAction.CallbackContext)
        VB: InputMaster.IUIActions.OnNavigate(InputAction.CallbackContext)
      qualifiedName:
        CSharp: InputMaster.IUIActions.OnNavigate(InputAction.CallbackContext)
        VB: InputMaster.IUIActions.OnNavigate(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnNavigate
        path: ''
        startLine: 1329
      syntax:
        content:
          CSharp: void OnNavigate(InputAction.CallbackContext context)
          VB: Sub OnNavigate(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.InputMaster.IUIActions.OnNavigate*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.InputMaster.IUIActions.OnSubmit(InputAction.CallbackContext)
      commentId: M:Global.InputMaster.IUIActions.OnSubmit(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnSubmit(InputAction.CallbackContext)
        VB: OnSubmit(InputAction.CallbackContext)
      nameWithType:
        CSharp: InputMaster.IUIActions.OnSubmit(InputAction.CallbackContext)
        VB: InputMaster.IUIActions.OnSubmit(InputAction.CallbackContext)
      qualifiedName:
        CSharp: InputMaster.IUIActions.OnSubmit(InputAction.CallbackContext)
        VB: InputMaster.IUIActions.OnSubmit(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnSubmit
        path: ''
        startLine: 1330
      syntax:
        content:
          CSharp: void OnSubmit(InputAction.CallbackContext context)
          VB: Sub OnSubmit(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.InputMaster.IUIActions.OnSubmit*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.InputMaster.IUIActions.OnCancel(InputAction.CallbackContext)
      commentId: M:Global.InputMaster.IUIActions.OnCancel(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnCancel(InputAction.CallbackContext)
        VB: OnCancel(InputAction.CallbackContext)
      nameWithType:
        CSharp: InputMaster.IUIActions.OnCancel(InputAction.CallbackContext)
        VB: InputMaster.IUIActions.OnCancel(InputAction.CallbackContext)
      qualifiedName:
        CSharp: InputMaster.IUIActions.OnCancel(InputAction.CallbackContext)
        VB: InputMaster.IUIActions.OnCancel(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnCancel
        path: ''
        startLine: 1331
      syntax:
        content:
          CSharp: void OnCancel(InputAction.CallbackContext context)
          VB: Sub OnCancel(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.InputMaster.IUIActions.OnCancel*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.InputMaster.IUIActions.OnPoint(InputAction.CallbackContext)
      commentId: M:Global.InputMaster.IUIActions.OnPoint(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnPoint(InputAction.CallbackContext)
        VB: OnPoint(InputAction.CallbackContext)
      nameWithType:
        CSharp: InputMaster.IUIActions.OnPoint(InputAction.CallbackContext)
        VB: InputMaster.IUIActions.OnPoint(InputAction.CallbackContext)
      qualifiedName:
        CSharp: InputMaster.IUIActions.OnPoint(InputAction.CallbackContext)
        VB: InputMaster.IUIActions.OnPoint(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnPoint
        path: ''
        startLine: 1332
      syntax:
        content:
          CSharp: void OnPoint(InputAction.CallbackContext context)
          VB: Sub OnPoint(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.InputMaster.IUIActions.OnPoint*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.InputMaster.IUIActions.OnClick(InputAction.CallbackContext)
      commentId: M:Global.InputMaster.IUIActions.OnClick(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnClick(InputAction.CallbackContext)
        VB: OnClick(InputAction.CallbackContext)
      nameWithType:
        CSharp: InputMaster.IUIActions.OnClick(InputAction.CallbackContext)
        VB: InputMaster.IUIActions.OnClick(InputAction.CallbackContext)
      qualifiedName:
        CSharp: InputMaster.IUIActions.OnClick(InputAction.CallbackContext)
        VB: InputMaster.IUIActions.OnClick(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnClick
        path: ''
        startLine: 1333
      syntax:
        content:
          CSharp: void OnClick(InputAction.CallbackContext context)
          VB: Sub OnClick(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.InputMaster.IUIActions.OnClick*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.InputMaster.IUIActions.OnScrollWheel(InputAction.CallbackContext)
      commentId: M:Global.InputMaster.IUIActions.OnScrollWheel(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnScrollWheel(InputAction.CallbackContext)
        VB: OnScrollWheel(InputAction.CallbackContext)
      nameWithType:
        CSharp: InputMaster.IUIActions.OnScrollWheel(InputAction.CallbackContext)
        VB: InputMaster.IUIActions.OnScrollWheel(InputAction.CallbackContext)
      qualifiedName:
        CSharp: InputMaster.IUIActions.OnScrollWheel(InputAction.CallbackContext)
        VB: InputMaster.IUIActions.OnScrollWheel(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnScrollWheel
        path: ''
        startLine: 1334
      syntax:
        content:
          CSharp: void OnScrollWheel(InputAction.CallbackContext context)
          VB: Sub OnScrollWheel(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.InputMaster.IUIActions.OnScrollWheel*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.InputMaster.IUIActions.OnMiddleClick(InputAction.CallbackContext)
      commentId: M:Global.InputMaster.IUIActions.OnMiddleClick(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnMiddleClick(InputAction.CallbackContext)
        VB: OnMiddleClick(InputAction.CallbackContext)
      nameWithType:
        CSharp: InputMaster.IUIActions.OnMiddleClick(InputAction.CallbackContext)
        VB: InputMaster.IUIActions.OnMiddleClick(InputAction.CallbackContext)
      qualifiedName:
        CSharp: InputMaster.IUIActions.OnMiddleClick(InputAction.CallbackContext)
        VB: InputMaster.IUIActions.OnMiddleClick(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnMiddleClick
        path: ''
        startLine: 1335
      syntax:
        content:
          CSharp: void OnMiddleClick(InputAction.CallbackContext context)
          VB: Sub OnMiddleClick(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.InputMaster.IUIActions.OnMiddleClick*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.InputMaster.IUIActions.OnRightClick(InputAction.CallbackContext)
      commentId: M:Global.InputMaster.IUIActions.OnRightClick(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnRightClick(InputAction.CallbackContext)
        VB: OnRightClick(InputAction.CallbackContext)
      nameWithType:
        CSharp: InputMaster.IUIActions.OnRightClick(InputAction.CallbackContext)
        VB: InputMaster.IUIActions.OnRightClick(InputAction.CallbackContext)
      qualifiedName:
        CSharp: InputMaster.IUIActions.OnRightClick(InputAction.CallbackContext)
        VB: InputMaster.IUIActions.OnRightClick(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnRightClick
        path: ''
        startLine: 1336
      syntax:
        content:
          CSharp: void OnRightClick(InputAction.CallbackContext context)
          VB: Sub OnRightClick(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.InputMaster.IUIActions.OnRightClick*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.InputMaster.IUIActions.OnTrackedDevicePosition(InputAction.CallbackContext)
      commentId: M:Global.InputMaster.IUIActions.OnTrackedDevicePosition(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnTrackedDevicePosition(InputAction.CallbackContext)
        VB: OnTrackedDevicePosition(InputAction.CallbackContext)
      nameWithType:
        CSharp: InputMaster.IUIActions.OnTrackedDevicePosition(InputAction.CallbackContext)
        VB: InputMaster.IUIActions.OnTrackedDevicePosition(InputAction.CallbackContext)
      qualifiedName:
        CSharp: InputMaster.IUIActions.OnTrackedDevicePosition(InputAction.CallbackContext)
        VB: InputMaster.IUIActions.OnTrackedDevicePosition(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnTrackedDevicePosition
        path: ''
        startLine: 1337
      syntax:
        content:
          CSharp: void OnTrackedDevicePosition(InputAction.CallbackContext context)
          VB: Sub OnTrackedDevicePosition(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.InputMaster.IUIActions.OnTrackedDevicePosition*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.InputMaster.IUIActions.OnTrackedDeviceOrientation(InputAction.CallbackContext)
      commentId: M:Global.InputMaster.IUIActions.OnTrackedDeviceOrientation(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnTrackedDeviceOrientation(InputAction.CallbackContext)
        VB: OnTrackedDeviceOrientation(InputAction.CallbackContext)
      nameWithType:
        CSharp: InputMaster.IUIActions.OnTrackedDeviceOrientation(InputAction.CallbackContext)
        VB: InputMaster.IUIActions.OnTrackedDeviceOrientation(InputAction.CallbackContext)
      qualifiedName:
        CSharp: InputMaster.IUIActions.OnTrackedDeviceOrientation(InputAction.CallbackContext)
        VB: InputMaster.IUIActions.OnTrackedDeviceOrientation(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnTrackedDeviceOrientation
        path: ''
        startLine: 1338
      syntax:
        content:
          CSharp: void OnTrackedDeviceOrientation(InputAction.CallbackContext context)
          VB: Sub OnTrackedDeviceOrientation(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.InputMaster.IUIActions.OnTrackedDeviceOrientation*
      modifiers:
        CSharp: []
        VB: []
  - id: Global.MainCamControl
    commentId: T:Global.MainCamControl
    language: CSharp
    name:
      CSharp: MainCamControl
      VB: MainCamControl
    nameWithType:
      CSharp: MainCamControl
      VB: MainCamControl
    qualifiedName:
      CSharp: MainCamControl
      VB: MainCamControl
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: MainCamControl
      path: ''
      startLine: 1348
    syntax:
      content:
        CSharp: 'public class MainCamControl : MonoBehaviour'
        VB: >-
          Public Class MainCamControl

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.MainCamControl.playerModle
      commentId: F:Global.MainCamControl.playerModle
      language: CSharp
      name:
        CSharp: playerModle
        VB: playerModle
      nameWithType:
        CSharp: MainCamControl.playerModle
        VB: MainCamControl.playerModle
      qualifiedName:
        CSharp: MainCamControl.playerModle
        VB: MainCamControl.playerModle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: playerModle
        path: ''
        startLine: 1350
      syntax:
        content:
          CSharp: public Transform playerModle
          VB: Public playerModle As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MainCamControl.player
      commentId: F:Global.MainCamControl.player
      language: CSharp
      name:
        CSharp: player
        VB: player
      nameWithType:
        CSharp: MainCamControl.player
        VB: MainCamControl.player
      qualifiedName:
        CSharp: MainCamControl.player
        VB: MainCamControl.player
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: player
        path: ''
        startLine: 1351
      syntax:
        content:
          CSharp: public Transform player
          VB: Public player As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MainCamControl.AimDistance
      commentId: F:Global.MainCamControl.AimDistance
      language: CSharp
      name:
        CSharp: AimDistance
        VB: AimDistance
      nameWithType:
        CSharp: MainCamControl.AimDistance
        VB: MainCamControl.AimDistance
      qualifiedName:
        CSharp: MainCamControl.AimDistance
        VB: MainCamControl.AimDistance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: AimDistance
        path: ''
        startLine: 1352
      syntax:
        content:
          CSharp: public float AimDistance
          VB: Public AimDistance As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MainCamControl.property
      commentId: F:Global.MainCamControl.property
      language: CSharp
      name:
        CSharp: property
        VB: property
      nameWithType:
        CSharp: MainCamControl.property
        VB: MainCamControl.property
      qualifiedName:
        CSharp: MainCamControl.property
        VB: MainCamControl.property
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: property
        path: ''
        startLine: 1353
      syntax:
        content:
          CSharp: public CamProperty property
          VB: Public property As CamProperty
        return:
          type: Global.CamProperty
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MainCamControl.tagProperty
      commentId: F:Global.MainCamControl.tagProperty
      language: CSharp
      name:
        CSharp: tagProperty
        VB: tagProperty
      nameWithType:
        CSharp: MainCamControl.tagProperty
        VB: MainCamControl.tagProperty
      qualifiedName:
        CSharp: MainCamControl.tagProperty
        VB: MainCamControl.tagProperty
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: tagProperty
        path: ''
        startLine: 1354
      syntax:
        content:
          CSharp: public TagProperty tagProperty
          VB: Public tagProperty As TagProperty
        return:
          type: Global.TagProperty
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MainCamControl.isCamRotate
      commentId: F:Global.MainCamControl.isCamRotate
      language: CSharp
      name:
        CSharp: isCamRotate
        VB: isCamRotate
      nameWithType:
        CSharp: MainCamControl.isCamRotate
        VB: MainCamControl.isCamRotate
      qualifiedName:
        CSharp: MainCamControl.isCamRotate
        VB: MainCamControl.isCamRotate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: isCamRotate
        path: ''
        startLine: 1363
      syntax:
        content:
          CSharp: public bool isCamRotate
          VB: Public isCamRotate As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MainCamControl.getEvent(InputData)
      commentId: M:Global.MainCamControl.getEvent(InputData)
      language: CSharp
      name:
        CSharp: getEvent(InputData)
        VB: getEvent(InputData)
      nameWithType:
        CSharp: MainCamControl.getEvent(InputData)
        VB: MainCamControl.getEvent(InputData)
      qualifiedName:
        CSharp: MainCamControl.getEvent(InputData)
        VB: MainCamControl.getEvent(InputData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: getEvent
        path: ''
        startLine: 1397
      syntax:
        content:
          CSharp: public void getEvent(InputData dat)
          VB: Public Sub getEvent(dat As InputData)
        parameters:
        - id: dat
          type: Global.InputData
      overload: Global.MainCamControl.getEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MainCamControl.LookAtHitPoint
      commentId: M:Global.MainCamControl.LookAtHitPoint
      language: CSharp
      name:
        CSharp: LookAtHitPoint()
        VB: LookAtHitPoint()
      nameWithType:
        CSharp: MainCamControl.LookAtHitPoint()
        VB: MainCamControl.LookAtHitPoint()
      qualifiedName:
        CSharp: MainCamControl.LookAtHitPoint()
        VB: MainCamControl.LookAtHitPoint()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: LookAtHitPoint
        path: ''
        startLine: 1482
      syntax:
        content:
          CSharp: public void LookAtHitPoint()
          VB: Public Sub LookAtHitPoint
      overload: Global.MainCamControl.LookAtHitPoint*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MainCamControl.getHit
      commentId: M:Global.MainCamControl.getHit
      language: CSharp
      name:
        CSharp: getHit()
        VB: getHit()
      nameWithType:
        CSharp: MainCamControl.getHit()
        VB: MainCamControl.getHit()
      qualifiedName:
        CSharp: MainCamControl.getHit()
        VB: MainCamControl.getHit()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: getHit
        path: ''
        startLine: 1489
      syntax:
        content:
          CSharp: public bool getHit()
          VB: Public Function getHit As Boolean
        return:
          type: System.Boolean
      overload: Global.MainCamControl.getHit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MainCamControl.getClickHit(Vector3)
      commentId: M:Global.MainCamControl.getClickHit(Vector3)
      language: CSharp
      name:
        CSharp: getClickHit(Vector3)
        VB: getClickHit(Vector3)
      nameWithType:
        CSharp: MainCamControl.getClickHit(Vector3)
        VB: MainCamControl.getClickHit(Vector3)
      qualifiedName:
        CSharp: MainCamControl.getClickHit(Vector3)
        VB: MainCamControl.getClickHit(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: getClickHit
        path: ''
        startLine: 1495
      syntax:
        content:
          CSharp: public RaycastHit getClickHit(Vector3 point)
          VB: Public Function getClickHit(point As Vector3) As RaycastHit
        parameters:
        - id: point
          type: Global.Vector3
        return:
          type: Global.RaycastHit
      overload: Global.MainCamControl.getClickHit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MainCamControl.getdoubleHit(Vector3)
      commentId: M:Global.MainCamControl.getdoubleHit(Vector3)
      language: CSharp
      name:
        CSharp: getdoubleHit(Vector3)
        VB: getdoubleHit(Vector3)
      nameWithType:
        CSharp: MainCamControl.getdoubleHit(Vector3)
        VB: MainCamControl.getdoubleHit(Vector3)
      qualifiedName:
        CSharp: MainCamControl.getdoubleHit(Vector3)
        VB: MainCamControl.getdoubleHit(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: getdoubleHit
        path: ''
        startLine: 1502
      syntax:
        content:
          CSharp: public RaycastHit getdoubleHit(Vector3 point)
          VB: Public Function getdoubleHit(point As Vector3) As RaycastHit
        parameters:
        - id: point
          type: Global.Vector3
        return:
          type: Global.RaycastHit
      overload: Global.MainCamControl.getdoubleHit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MainCamControl.TagRotate
      commentId: M:Global.MainCamControl.TagRotate
      language: CSharp
      name:
        CSharp: TagRotate()
        VB: TagRotate()
      nameWithType:
        CSharp: MainCamControl.TagRotate()
        VB: MainCamControl.TagRotate()
      qualifiedName:
        CSharp: MainCamControl.TagRotate()
        VB: MainCamControl.TagRotate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: TagRotate
        path: ''
        startLine: 1515
      syntax:
        content:
          CSharp: public void TagRotate()
          VB: Public Sub TagRotate
      overload: Global.MainCamControl.TagRotate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MainCamControl.playerMove
      commentId: M:Global.MainCamControl.playerMove
      language: CSharp
      name:
        CSharp: playerMove()
        VB: playerMove()
      nameWithType:
        CSharp: MainCamControl.playerMove()
        VB: MainCamControl.playerMove()
      qualifiedName:
        CSharp: MainCamControl.playerMove()
        VB: MainCamControl.playerMove()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: playerMove
        path: ''
        startLine: 1530
      syntax:
        content:
          CSharp: public void playerMove()
          VB: Public Sub playerMove
      overload: Global.MainCamControl.playerMove*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MainCamControl.tagMove
      commentId: M:Global.MainCamControl.tagMove
      language: CSharp
      name:
        CSharp: tagMove()
        VB: tagMove()
      nameWithType:
        CSharp: MainCamControl.tagMove()
        VB: MainCamControl.tagMove()
      qualifiedName:
        CSharp: MainCamControl.tagMove()
        VB: MainCamControl.tagMove()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: tagMove
        path: ''
        startLine: 1559
      syntax:
        content:
          CSharp: public void tagMove()
          VB: Public Sub tagMove
      overload: Global.MainCamControl.tagMove*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MainCamControl.tagReset
      commentId: M:Global.MainCamControl.tagReset
      language: CSharp
      name:
        CSharp: tagReset()
        VB: tagReset()
      nameWithType:
        CSharp: MainCamControl.tagReset()
        VB: MainCamControl.tagReset()
      qualifiedName:
        CSharp: MainCamControl.tagReset()
        VB: MainCamControl.tagReset()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: tagReset
        path: ''
        startLine: 1572
      syntax:
        content:
          CSharp: public void tagReset()
          VB: Public Sub tagReset
      overload: Global.MainCamControl.tagReset*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MainCamControl.CamReset
      commentId: M:Global.MainCamControl.CamReset
      language: CSharp
      name:
        CSharp: CamReset()
        VB: CamReset()
      nameWithType:
        CSharp: MainCamControl.CamReset()
        VB: MainCamControl.CamReset()
      qualifiedName:
        CSharp: MainCamControl.CamReset()
        VB: MainCamControl.CamReset()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CamReset
        path: ''
        startLine: 1576
      syntax:
        content:
          CSharp: public void CamReset()
          VB: Public Sub CamReset
      overload: Global.MainCamControl.CamReset*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MainCamControl.ViewHight
      commentId: M:Global.MainCamControl.ViewHight
      language: CSharp
      name:
        CSharp: ViewHight()
        VB: ViewHight()
      nameWithType:
        CSharp: MainCamControl.ViewHight()
        VB: MainCamControl.ViewHight()
      qualifiedName:
        CSharp: MainCamControl.ViewHight()
        VB: MainCamControl.ViewHight()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ViewHight
        path: ''
        startLine: 1580
      syntax:
        content:
          CSharp: public void ViewHight()
          VB: Public Sub ViewHight
      overload: Global.MainCamControl.ViewHight*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.TagProperty
    commentId: T:Global.TagProperty
    language: CSharp
    name:
      CSharp: TagProperty
      VB: TagProperty
    nameWithType:
      CSharp: TagProperty
      VB: TagProperty
    qualifiedName:
      CSharp: TagProperty
      VB: TagProperty
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: TagProperty
      path: ''
      startLine: 1587
    syntax:
      content:
        CSharp: public class TagProperty
        VB: Public Class TagProperty
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.TagProperty._tag
      commentId: F:Global.TagProperty._tag
      language: CSharp
      name:
        CSharp: _tag
        VB: _tag
      nameWithType:
        CSharp: TagProperty._tag
        VB: TagProperty._tag
      qualifiedName:
        CSharp: TagProperty._tag
        VB: TagProperty._tag
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: _tag
        path: ''
        startLine: 1590
      syntax:
        content:
          CSharp: public Transform _tag
          VB: Public _tag As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TagProperty.CenterPercen
      commentId: F:Global.TagProperty.CenterPercen
      language: CSharp
      name:
        CSharp: CenterPercen
        VB: CenterPercen
      nameWithType:
        CSharp: TagProperty.CenterPercen
        VB: TagProperty.CenterPercen
      qualifiedName:
        CSharp: TagProperty.CenterPercen
        VB: TagProperty.CenterPercen
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CenterPercen
        path: ''
        startLine: 1591
      syntax:
        content:
          CSharp: public float CenterPercen
          VB: Public CenterPercen As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TagProperty.MaxAngle
      commentId: F:Global.TagProperty.MaxAngle
      language: CSharp
      name:
        CSharp: MaxAngle
        VB: MaxAngle
      nameWithType:
        CSharp: TagProperty.MaxAngle
        VB: TagProperty.MaxAngle
      qualifiedName:
        CSharp: TagProperty.MaxAngle
        VB: TagProperty.MaxAngle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: MaxAngle
        path: ''
        startLine: 1592
      syntax:
        content:
          CSharp: public float MaxAngle
          VB: Public MaxAngle As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TagProperty.MinAngle
      commentId: F:Global.TagProperty.MinAngle
      language: CSharp
      name:
        CSharp: MinAngle
        VB: MinAngle
      nameWithType:
        CSharp: TagProperty.MinAngle
        VB: TagProperty.MinAngle
      qualifiedName:
        CSharp: TagProperty.MinAngle
        VB: TagProperty.MinAngle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: MinAngle
        path: ''
        startLine: 1593
      syntax:
        content:
          CSharp: public float MinAngle
          VB: Public MinAngle As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TagProperty.Mscale
      commentId: F:Global.TagProperty.Mscale
      language: CSharp
      name:
        CSharp: Mscale
        VB: Mscale
      nameWithType:
        CSharp: TagProperty.Mscale
        VB: TagProperty.Mscale
      qualifiedName:
        CSharp: TagProperty.Mscale
        VB: TagProperty.Mscale
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Mscale
        path: ''
        startLine: 1594
      syntax:
        content:
          CSharp: public float Mscale
          VB: Public Mscale As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.CamState
    commentId: T:Global.CamState
    language: CSharp
    name:
      CSharp: CamState
      VB: CamState
    nameWithType:
      CSharp: CamState
      VB: CamState
    qualifiedName:
      CSharp: CamState
      VB: CamState
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: CamState
      path: ''
      startLine: 1596
    syntax:
      content:
        CSharp: public class CamState
        VB: Public Class CamState
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.CamState.postion
      commentId: F:Global.CamState.postion
      language: CSharp
      name:
        CSharp: postion
        VB: postion
      nameWithType:
        CSharp: CamState.postion
        VB: CamState.postion
      qualifiedName:
        CSharp: CamState.postion
        VB: CamState.postion
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: postion
        path: ''
        startLine: 1599
      syntax:
        content:
          CSharp: public Vector3 postion
          VB: Public postion As Vector3
        return:
          type: Global.Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CamState.quaternion
      commentId: F:Global.CamState.quaternion
      language: CSharp
      name:
        CSharp: quaternion
        VB: quaternion
      nameWithType:
        CSharp: CamState.quaternion
        VB: CamState.quaternion
      qualifiedName:
        CSharp: CamState.quaternion
        VB: CamState.quaternion
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: quaternion
        path: ''
        startLine: 1600
      syntax:
        content:
          CSharp: public Quaternion quaternion
          VB: Public quaternion As Quaternion
        return:
          type: Global.Quaternion
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CamState.eulerAngle
      commentId: F:Global.CamState.eulerAngle
      language: CSharp
      name:
        CSharp: eulerAngle
        VB: eulerAngle
      nameWithType:
        CSharp: CamState.eulerAngle
        VB: CamState.eulerAngle
      qualifiedName:
        CSharp: CamState.eulerAngle
        VB: CamState.eulerAngle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: eulerAngle
        path: ''
        startLine: 1601
      syntax:
        content:
          CSharp: public Vector3 eulerAngle
          VB: Public eulerAngle As Vector3
        return:
          type: Global.Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CamState.tag_Postion
      commentId: F:Global.CamState.tag_Postion
      language: CSharp
      name:
        CSharp: tag_Postion
        VB: tag_Postion
      nameWithType:
        CSharp: CamState.tag_Postion
        VB: CamState.tag_Postion
      qualifiedName:
        CSharp: CamState.tag_Postion
        VB: CamState.tag_Postion
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: tag_Postion
        path: ''
        startLine: 1602
      syntax:
        content:
          CSharp: public Vector3 tag_Postion
          VB: Public tag_Postion As Vector3
        return:
          type: Global.Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.CamProperty
    commentId: T:Global.CamProperty
    language: CSharp
    name:
      CSharp: CamProperty
      VB: CamProperty
    nameWithType:
      CSharp: CamProperty
      VB: CamProperty
    qualifiedName:
      CSharp: CamProperty
      VB: CamProperty
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: CamProperty
      path: ''
      startLine: 1604
    syntax:
      content:
        CSharp: public class CamProperty
        VB: Public Class CamProperty
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.CamProperty.moveSpeed
      commentId: F:Global.CamProperty.moveSpeed
      language: CSharp
      name:
        CSharp: moveSpeed
        VB: moveSpeed
      nameWithType:
        CSharp: CamProperty.moveSpeed
        VB: CamProperty.moveSpeed
      qualifiedName:
        CSharp: CamProperty.moveSpeed
        VB: CamProperty.moveSpeed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: moveSpeed
        path: ''
        startLine: 1607
      syntax:
        content:
          CSharp: public float moveSpeed
          VB: Public moveSpeed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CamProperty.rotateSpeed
      commentId: F:Global.CamProperty.rotateSpeed
      language: CSharp
      name:
        CSharp: rotateSpeed
        VB: rotateSpeed
      nameWithType:
        CSharp: CamProperty.rotateSpeed
        VB: CamProperty.rotateSpeed
      qualifiedName:
        CSharp: CamProperty.rotateSpeed
        VB: CamProperty.rotateSpeed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: rotateSpeed
        path: ''
        startLine: 1608
      syntax:
        content:
          CSharp: public float rotateSpeed
          VB: Public rotateSpeed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CamProperty.distanceFromPlayer
      commentId: F:Global.CamProperty.distanceFromPlayer
      language: CSharp
      name:
        CSharp: distanceFromPlayer
        VB: distanceFromPlayer
      nameWithType:
        CSharp: CamProperty.distanceFromPlayer
        VB: CamProperty.distanceFromPlayer
      qualifiedName:
        CSharp: CamProperty.distanceFromPlayer
        VB: CamProperty.distanceFromPlayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: distanceFromPlayer
        path: ''
        startLine: 1609
      syntax:
        content:
          CSharp: public float distanceFromPlayer
          VB: Public distanceFromPlayer As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.hitCillderType
    commentId: T:Global.hitCillderType
    language: CSharp
    name:
      CSharp: hitCillderType
      VB: hitCillderType
    nameWithType:
      CSharp: hitCillderType
      VB: hitCillderType
    qualifiedName:
      CSharp: hitCillderType
      VB: hitCillderType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: hitCillderType
      path: ''
      startLine: 1611
    syntax:
      content:
        CSharp: public enum hitCillderType
        VB: Public Enum hitCillderType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Global.hitCillderType.ground
      commentId: F:Global.hitCillderType.ground
      language: CSharp
      name:
        CSharp: ground
        VB: ground
      nameWithType:
        CSharp: hitCillderType.ground
        VB: hitCillderType.ground
      qualifiedName:
        CSharp: hitCillderType.ground
        VB: hitCillderType.ground
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ground
        path: ''
        startLine: 1613
      syntax:
        content:
          CSharp: ground = 0
          VB: ground = 0
        return:
          type: Global.hitCillderType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.hitCillderType.item
      commentId: F:Global.hitCillderType.item
      language: CSharp
      name:
        CSharp: item
        VB: item
      nameWithType:
        CSharp: hitCillderType.item
        VB: hitCillderType.item
      qualifiedName:
        CSharp: hitCillderType.item
        VB: hitCillderType.item
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: item
        path: ''
        startLine: 1614
      syntax:
        content:
          CSharp: item = 1
          VB: item = 1
        return:
          type: Global.hitCillderType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.hitCillderType.enemy
      commentId: F:Global.hitCillderType.enemy
      language: CSharp
      name:
        CSharp: enemy
        VB: enemy
      nameWithType:
        CSharp: hitCillderType.enemy
        VB: hitCillderType.enemy
      qualifiedName:
        CSharp: hitCillderType.enemy
        VB: hitCillderType.enemy
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: enemy
        path: ''
        startLine: 1615
      syntax:
        content:
          CSharp: enemy = 2
          VB: enemy = 2
        return:
          type: Global.hitCillderType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.hitCillderType.UI3d
      commentId: F:Global.hitCillderType.UI3d
      language: CSharp
      name:
        CSharp: UI3d
        VB: UI3d
      nameWithType:
        CSharp: hitCillderType.UI3d
        VB: hitCillderType.UI3d
      qualifiedName:
        CSharp: hitCillderType.UI3d
        VB: hitCillderType.UI3d
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UI3d
        path: ''
        startLine: 1616
      syntax:
        content:
          CSharp: UI3d = 3
          VB: UI3d = 3
        return:
          type: Global.hitCillderType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Global.PlayerAnimatorController
    commentId: T:Global.PlayerAnimatorController
    language: CSharp
    name:
      CSharp: PlayerAnimatorController
      VB: PlayerAnimatorController
    nameWithType:
      CSharp: PlayerAnimatorController
      VB: PlayerAnimatorController
    qualifiedName:
      CSharp: PlayerAnimatorController
      VB: PlayerAnimatorController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PlayerAnimatorController
      path: ''
      startLine: 1623
    syntax:
      content:
        CSharp: public class PlayerAnimatorController
        VB: Public Class PlayerAnimatorController
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.PlayerAnimatorController.moveSpeed
      commentId: F:Global.PlayerAnimatorController.moveSpeed
      language: CSharp
      name:
        CSharp: moveSpeed
        VB: moveSpeed
      nameWithType:
        CSharp: PlayerAnimatorController.moveSpeed
        VB: PlayerAnimatorController.moveSpeed
      qualifiedName:
        CSharp: PlayerAnimatorController.moveSpeed
        VB: PlayerAnimatorController.moveSpeed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: moveSpeed
        path: ''
        startLine: 1638
      syntax:
        content:
          CSharp: public float moveSpeed
          VB: Public moveSpeed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerAnimatorController.#ctor(Animator)
      commentId: M:Global.PlayerAnimatorController.#ctor(Animator)
      language: CSharp
      name:
        CSharp: PlayerAnimatorController(Animator)
        VB: PlayerAnimatorController(Animator)
      nameWithType:
        CSharp: PlayerAnimatorController.PlayerAnimatorController(Animator)
        VB: PlayerAnimatorController.PlayerAnimatorController(Animator)
      qualifiedName:
        CSharp: PlayerAnimatorController.PlayerAnimatorController(Animator)
        VB: PlayerAnimatorController.PlayerAnimatorController(Animator)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: .ctor
        path: ''
        startLine: 1640
      syntax:
        content:
          CSharp: public PlayerAnimatorController(Animator animatorController)
          VB: Public Sub New(animatorController As Animator)
        parameters:
        - id: animatorController
          type: Global.Animator
      overload: Global.PlayerAnimatorController.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerAnimatorController.SetLowerBodyState(PlayerAnimatorController.LowerBodyState)
      commentId: M:Global.PlayerAnimatorController.SetLowerBodyState(PlayerAnimatorController.LowerBodyState)
      language: CSharp
      name:
        CSharp: SetLowerBodyState(PlayerAnimatorController.LowerBodyState)
        VB: SetLowerBodyState(PlayerAnimatorController.LowerBodyState)
      nameWithType:
        CSharp: PlayerAnimatorController.SetLowerBodyState(PlayerAnimatorController.LowerBodyState)
        VB: PlayerAnimatorController.SetLowerBodyState(PlayerAnimatorController.LowerBodyState)
      qualifiedName:
        CSharp: PlayerAnimatorController.SetLowerBodyState(PlayerAnimatorController.LowerBodyState)
        VB: PlayerAnimatorController.SetLowerBodyState(PlayerAnimatorController.LowerBodyState)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetLowerBodyState
        path: ''
        startLine: 1645
      syntax:
        content:
          CSharp: public void SetLowerBodyState(PlayerAnimatorController.LowerBodyState state)
          VB: Public Sub SetLowerBodyState(state As PlayerAnimatorController.LowerBodyState)
        parameters:
        - id: state
          type: Global.PlayerAnimatorController.LowerBodyState
      overload: Global.PlayerAnimatorController.SetLowerBodyState*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerAnimatorController.InvertStandMode
      commentId: M:Global.PlayerAnimatorController.InvertStandMode
      language: CSharp
      name:
        CSharp: InvertStandMode()
        VB: InvertStandMode()
      nameWithType:
        CSharp: PlayerAnimatorController.InvertStandMode()
        VB: PlayerAnimatorController.InvertStandMode()
      qualifiedName:
        CSharp: PlayerAnimatorController.InvertStandMode()
        VB: PlayerAnimatorController.InvertStandMode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: InvertStandMode
        path: ''
        startLine: 1653
      syntax:
        content:
          CSharp: public void InvertStandMode()
          VB: Public Sub InvertStandMode
      overload: Global.PlayerAnimatorController.InvertStandMode*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.PlayerAnimatorController.LowerBodyState
    commentId: T:Global.PlayerAnimatorController.LowerBodyState
    language: CSharp
    name:
      CSharp: PlayerAnimatorController.LowerBodyState
      VB: PlayerAnimatorController.LowerBodyState
    nameWithType:
      CSharp: PlayerAnimatorController.LowerBodyState
      VB: PlayerAnimatorController.LowerBodyState
    qualifiedName:
      CSharp: PlayerAnimatorController.LowerBodyState
      VB: PlayerAnimatorController.LowerBodyState
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: LowerBodyState
      path: ''
      startLine: 1628
    syntax:
      content:
        CSharp: public enum LowerBodyState
        VB: Public Enum LowerBodyState
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Global.PlayerAnimatorController.LowerBodyState.STAND
      commentId: F:Global.PlayerAnimatorController.LowerBodyState.STAND
      language: CSharp
      name:
        CSharp: STAND
        VB: STAND
      nameWithType:
        CSharp: PlayerAnimatorController.LowerBodyState.STAND
        VB: PlayerAnimatorController.LowerBodyState.STAND
      qualifiedName:
        CSharp: PlayerAnimatorController.LowerBodyState.STAND
        VB: PlayerAnimatorController.LowerBodyState.STAND
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: STAND
        path: ''
        startLine: 1629
      syntax:
        content:
          CSharp: STAND = 0
          VB: STAND = 0
        return:
          type: Global.PlayerAnimatorController.LowerBodyState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.PlayerAnimatorController.LowerBodyState.WALK
      commentId: F:Global.PlayerAnimatorController.LowerBodyState.WALK
      language: CSharp
      name:
        CSharp: WALK
        VB: WALK
      nameWithType:
        CSharp: PlayerAnimatorController.LowerBodyState.WALK
        VB: PlayerAnimatorController.LowerBodyState.WALK
      qualifiedName:
        CSharp: PlayerAnimatorController.LowerBodyState.WALK
        VB: PlayerAnimatorController.LowerBodyState.WALK
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: WALK
        path: ''
        startLine: 1630
      syntax:
        content:
          CSharp: WALK = 1
          VB: WALK = 1
        return:
          type: Global.PlayerAnimatorController.LowerBodyState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.PlayerAnimatorController.LowerBodyState.RUN
      commentId: F:Global.PlayerAnimatorController.LowerBodyState.RUN
      language: CSharp
      name:
        CSharp: RUN
        VB: RUN
      nameWithType:
        CSharp: PlayerAnimatorController.LowerBodyState.RUN
        VB: PlayerAnimatorController.LowerBodyState.RUN
      qualifiedName:
        CSharp: PlayerAnimatorController.LowerBodyState.RUN
        VB: PlayerAnimatorController.LowerBodyState.RUN
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: RUN
        path: ''
        startLine: 1631
      syntax:
        content:
          CSharp: RUN = 2
          VB: RUN = 2
        return:
          type: Global.PlayerAnimatorController.LowerBodyState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Global.PlayerCameraController
    commentId: T:Global.PlayerCameraController
    language: CSharp
    name:
      CSharp: PlayerCameraController
      VB: PlayerCameraController
    nameWithType:
      CSharp: PlayerCameraController
      VB: PlayerCameraController
    qualifiedName:
      CSharp: PlayerCameraController
      VB: PlayerCameraController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PlayerCameraController
      path: ''
      startLine: 1668
    syntax:
      content:
        CSharp: 'public class PlayerCameraController : MonoBehaviour'
        VB: >-
          Public Class PlayerCameraController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.PlayerCameraController.followTarget
      commentId: F:Global.PlayerCameraController.followTarget
      language: CSharp
      name:
        CSharp: followTarget
        VB: followTarget
      nameWithType:
        CSharp: PlayerCameraController.followTarget
        VB: PlayerCameraController.followTarget
      qualifiedName:
        CSharp: PlayerCameraController.followTarget
        VB: PlayerCameraController.followTarget
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: followTarget
        path: ''
        startLine: 1671
      syntax:
        content:
          CSharp: public Transform followTarget
          VB: Public followTarget As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerCameraController.rotate
      commentId: F:Global.PlayerCameraController.rotate
      language: CSharp
      name:
        CSharp: rotate
        VB: rotate
      nameWithType:
        CSharp: PlayerCameraController.rotate
        VB: PlayerCameraController.rotate
      qualifiedName:
        CSharp: PlayerCameraController.rotate
        VB: PlayerCameraController.rotate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: rotate
        path: ''
        startLine: 1674
      syntax:
        content:
          CSharp: public Vector2 rotate
          VB: Public rotate As Vector2
        return:
          type: Global.Vector2
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerCameraController.rotateSpeed
      commentId: F:Global.PlayerCameraController.rotateSpeed
      language: CSharp
      name:
        CSharp: rotateSpeed
        VB: rotateSpeed
      nameWithType:
        CSharp: PlayerCameraController.rotateSpeed
        VB: PlayerCameraController.rotateSpeed
      qualifiedName:
        CSharp: PlayerCameraController.rotateSpeed
        VB: PlayerCameraController.rotateSpeed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: rotateSpeed
        path: ''
        startLine: 1677
      syntax:
        content:
          CSharp: public float rotateSpeed
          VB: Public rotateSpeed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerCameraController.moveSpeed
      commentId: F:Global.PlayerCameraController.moveSpeed
      language: CSharp
      name:
        CSharp: moveSpeed
        VB: moveSpeed
      nameWithType:
        CSharp: PlayerCameraController.moveSpeed
        VB: PlayerCameraController.moveSpeed
      qualifiedName:
        CSharp: PlayerCameraController.moveSpeed
        VB: PlayerCameraController.moveSpeed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: moveSpeed
        path: ''
        startLine: 1680
      syntax:
        content:
          CSharp: public float moveSpeed
          VB: Public moveSpeed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerCameraController.maxY
      commentId: F:Global.PlayerCameraController.maxY
      language: CSharp
      name:
        CSharp: maxY
        VB: maxY
      nameWithType:
        CSharp: PlayerCameraController.maxY
        VB: PlayerCameraController.maxY
      qualifiedName:
        CSharp: PlayerCameraController.maxY
        VB: PlayerCameraController.maxY
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: maxY
        path: ''
        startLine: 1683
      syntax:
        content:
          CSharp: public float maxY
          VB: Public maxY As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerCameraController.minY
      commentId: F:Global.PlayerCameraController.minY
      language: CSharp
      name:
        CSharp: minY
        VB: minY
      nameWithType:
        CSharp: PlayerCameraController.minY
        VB: PlayerCameraController.minY
      qualifiedName:
        CSharp: PlayerCameraController.minY
        VB: PlayerCameraController.minY
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: minY
        path: ''
        startLine: 1686
      syntax:
        content:
          CSharp: public float minY
          VB: Public minY As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerCameraController.viewSize
      commentId: F:Global.PlayerCameraController.viewSize
      language: CSharp
      name:
        CSharp: viewSize
        VB: viewSize
      nameWithType:
        CSharp: PlayerCameraController.viewSize
        VB: PlayerCameraController.viewSize
      qualifiedName:
        CSharp: PlayerCameraController.viewSize
        VB: PlayerCameraController.viewSize
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: viewSize
        path: ''
        startLine: 1689
      syntax:
        content:
          CSharp: public float viewSize
          VB: Public viewSize As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerCameraController.defaultAngle
      commentId: F:Global.PlayerCameraController.defaultAngle
      language: CSharp
      name:
        CSharp: defaultAngle
        VB: defaultAngle
      nameWithType:
        CSharp: PlayerCameraController.defaultAngle
        VB: PlayerCameraController.defaultAngle
      qualifiedName:
        CSharp: PlayerCameraController.defaultAngle
        VB: PlayerCameraController.defaultAngle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: defaultAngle
        path: ''
        startLine: 1692
      syntax:
        content:
          CSharp: public float defaultAngle
          VB: Public defaultAngle As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerCameraController.radius
      commentId: F:Global.PlayerCameraController.radius
      language: CSharp
      name:
        CSharp: radius
        VB: radius
      nameWithType:
        CSharp: PlayerCameraController.radius
        VB: PlayerCameraController.radius
      qualifiedName:
        CSharp: PlayerCameraController.radius
        VB: PlayerCameraController.radius
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: radius
        path: ''
        startLine: 1695
      syntax:
        content:
          CSharp: public float radius
          VB: Public radius As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerCameraController.height
      commentId: F:Global.PlayerCameraController.height
      language: CSharp
      name:
        CSharp: height
        VB: height
      nameWithType:
        CSharp: PlayerCameraController.height
        VB: PlayerCameraController.height
      qualifiedName:
        CSharp: PlayerCameraController.height
        VB: PlayerCameraController.height
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: height
        path: ''
        startLine: 1698
      syntax:
        content:
          CSharp: public float height
          VB: Public height As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerCameraController.visiable
      commentId: F:Global.PlayerCameraController.visiable
      language: CSharp
      name:
        CSharp: visiable
        VB: visiable
      nameWithType:
        CSharp: PlayerCameraController.visiable
        VB: PlayerCameraController.visiable
      qualifiedName:
        CSharp: PlayerCameraController.visiable
        VB: PlayerCameraController.visiable
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: visiable
        path: ''
        startLine: 1701
      syntax:
        content:
          CSharp: public bool visiable
          VB: Public visiable As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerCameraController.lockMode
      commentId: F:Global.PlayerCameraController.lockMode
      language: CSharp
      name:
        CSharp: lockMode
        VB: lockMode
      nameWithType:
        CSharp: PlayerCameraController.lockMode
        VB: PlayerCameraController.lockMode
      qualifiedName:
        CSharp: PlayerCameraController.lockMode
        VB: PlayerCameraController.lockMode
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: lockMode
        path: ''
        startLine: 1703
      syntax:
        content:
          CSharp: public CursorLockMode lockMode
          VB: Public lockMode As CursorLockMode
        return:
          type: Global.CursorLockMode
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerCameraController.CalcAbsolutePoint(System.Single,System.Single)
      commentId: M:Global.PlayerCameraController.CalcAbsolutePoint(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: CalcAbsolutePoint(Single, Single)
        VB: CalcAbsolutePoint(Single, Single)
      nameWithType:
        CSharp: PlayerCameraController.CalcAbsolutePoint(Single, Single)
        VB: PlayerCameraController.CalcAbsolutePoint(Single, Single)
      qualifiedName:
        CSharp: PlayerCameraController.CalcAbsolutePoint(System.Single, System.Single)
        VB: PlayerCameraController.CalcAbsolutePoint(System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CalcAbsolutePoint
        path: ''
        startLine: 1783
      syntax:
        content:
          CSharp: public static Vector2 CalcAbsolutePoint(float angle, float dist)
          VB: Public Shared Function CalcAbsolutePoint(angle As Single, dist As Single) As Vector2
        parameters:
        - id: angle
          type: System.Single
        - id: dist
          type: System.Single
        return:
          type: Global.Vector2
      overload: Global.PlayerCameraController.CalcAbsolutePoint*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Global.PlayerMoveController
    commentId: T:Global.PlayerMoveController
    language: CSharp
    name:
      CSharp: PlayerMoveController
      VB: PlayerMoveController
    nameWithType:
      CSharp: PlayerMoveController
      VB: PlayerMoveController
    qualifiedName:
      CSharp: PlayerMoveController
      VB: PlayerMoveController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PlayerMoveController
      path: ''
      startLine: 1800
    syntax:
      content:
        CSharp: 'public class PlayerMoveController : MonoBehaviour'
        VB: >-
          Public Class PlayerMoveController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.PlayerMoveController.moveSpeed
      commentId: F:Global.PlayerMoveController.moveSpeed
      language: CSharp
      name:
        CSharp: moveSpeed
        VB: moveSpeed
      nameWithType:
        CSharp: PlayerMoveController.moveSpeed
        VB: PlayerMoveController.moveSpeed
      qualifiedName:
        CSharp: PlayerMoveController.moveSpeed
        VB: PlayerMoveController.moveSpeed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: moveSpeed
        path: ''
        startLine: 1808
      syntax:
        content:
          CSharp: public float moveSpeed
          VB: Public moveSpeed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.inputEvent
    commentId: T:Global.inputEvent
    language: CSharp
    name:
      CSharp: inputEvent
      VB: inputEvent
    nameWithType:
      CSharp: inputEvent
      VB: inputEvent
    qualifiedName:
      CSharp: inputEvent
      VB: inputEvent
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: inputEvent
      path: ''
      startLine: 1850
    syntax:
      content:
        CSharp: 'public class inputEvent : MonoBehaviour'
        VB: >-
          Public Class inputEvent

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.inputEvent.inputEvents
      commentId: F:Global.inputEvent.inputEvents
      language: CSharp
      name:
        CSharp: inputEvents
        VB: inputEvents
      nameWithType:
        CSharp: inputEvent.inputEvents
        VB: inputEvent.inputEvents
      qualifiedName:
        CSharp: inputEvent.inputEvents
        VB: inputEvent.inputEvents
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: inputEvents
        path: ''
        startLine: 1855
      syntax:
        content:
          CSharp: public UnityEvent<InputData> inputEvents
          VB: Public inputEvents As UnityEvent(Of InputData)
        return:
          type: Global.UnityEvent{InputData}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.inputEvent.doubleTime
      commentId: F:Global.inputEvent.doubleTime
      language: CSharp
      name:
        CSharp: doubleTime
        VB: doubleTime
      nameWithType:
        CSharp: inputEvent.doubleTime
        VB: inputEvent.doubleTime
      qualifiedName:
        CSharp: inputEvent.doubleTime
        VB: inputEvent.doubleTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: doubleTime
        path: ''
        startLine: 1856
      syntax:
        content:
          CSharp: public float doubleTime
          VB: Public doubleTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.inputEvent.gm
      commentId: F:Global.inputEvent.gm
      language: CSharp
      name:
        CSharp: gm
        VB: gm
      nameWithType:
        CSharp: inputEvent.gm
        VB: inputEvent.gm
      qualifiedName:
        CSharp: inputEvent.gm
        VB: inputEvent.gm
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: gm
        path: ''
        startLine: 1862
      syntax:
        content:
          CSharp: public GameObject gm
          VB: Public gm As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.inputEvent.tr
      commentId: F:Global.inputEvent.tr
      language: CSharp
      name:
        CSharp: tr
        VB: tr
      nameWithType:
        CSharp: inputEvent.tr
        VB: inputEvent.tr
      qualifiedName:
        CSharp: inputEvent.tr
        VB: inputEvent.tr
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: tr
        path: ''
        startLine: 1863
      syntax:
        content:
          CSharp: public Transform tr
          VB: Public tr As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.inputEvent.Instance
      commentId: M:Global.inputEvent.Instance
      language: CSharp
      name:
        CSharp: Instance()
        VB: Instance()
      nameWithType:
        CSharp: inputEvent.Instance()
        VB: inputEvent.Instance()
      qualifiedName:
        CSharp: inputEvent.Instance()
        VB: inputEvent.Instance()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Instance
        path: ''
        startLine: 1867
      syntax:
        content:
          CSharp: public static inputEvent Instance()
          VB: Public Shared Function Instance As inputEvent
        return:
          type: Global.inputEvent
      overload: Global.inputEvent.Instance*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.inputEvent.sendEvent(EinputType)
      commentId: M:Global.inputEvent.sendEvent(EinputType)
      language: CSharp
      name:
        CSharp: sendEvent(EinputType)
        VB: sendEvent(EinputType)
      nameWithType:
        CSharp: inputEvent.sendEvent(EinputType)
        VB: inputEvent.sendEvent(EinputType)
      qualifiedName:
        CSharp: inputEvent.sendEvent(EinputType)
        VB: inputEvent.sendEvent(EinputType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: sendEvent
        path: ''
        startLine: 1982
      syntax:
        content:
          CSharp: public void sendEvent(EinputType etype)
          VB: Public Sub sendEvent(etype As EinputType)
        parameters:
        - id: etype
          type: Global.EinputType
      overload: Global.inputEvent.sendEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.InputData
    commentId: T:Global.InputData
    language: CSharp
    name:
      CSharp: InputData
      VB: InputData
    nameWithType:
      CSharp: InputData
      VB: InputData
    qualifiedName:
      CSharp: InputData
      VB: InputData
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: InputData
      path: ''
      startLine: 2000
    syntax:
      content:
        CSharp: public class InputData
        VB: Public Class InputData
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.InputData.downPoint
      commentId: F:Global.InputData.downPoint
      language: CSharp
      name:
        CSharp: downPoint
        VB: downPoint
      nameWithType:
        CSharp: InputData.downPoint
        VB: InputData.downPoint
      qualifiedName:
        CSharp: InputData.downPoint
        VB: InputData.downPoint
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: downPoint
        path: ''
        startLine: 2004
      syntax:
        content:
          CSharp: public Vector3 downPoint
          VB: Public downPoint As Vector3
        return:
          type: Global.Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.InputData.currentPoint
      commentId: F:Global.InputData.currentPoint
      language: CSharp
      name:
        CSharp: currentPoint
        VB: currentPoint
      nameWithType:
        CSharp: InputData.currentPoint
        VB: InputData.currentPoint
      qualifiedName:
        CSharp: InputData.currentPoint
        VB: InputData.currentPoint
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: currentPoint
        path: ''
        startLine: 2005
      syntax:
        content:
          CSharp: public Vector3 currentPoint
          VB: Public currentPoint As Vector3
        return:
          type: Global.Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.InputData.dv
      commentId: F:Global.InputData.dv
      language: CSharp
      name:
        CSharp: dv
        VB: dv
      nameWithType:
        CSharp: InputData.dv
        VB: InputData.dv
      qualifiedName:
        CSharp: InputData.dv
        VB: InputData.dv
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: dv
        path: ''
        startLine: 2006
      syntax:
        content:
          CSharp: public float dv
          VB: Public dv As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.InputData.EinputType
      commentId: F:Global.InputData.EinputType
      language: CSharp
      name:
        CSharp: EinputType
        VB: EinputType
      nameWithType:
        CSharp: InputData.EinputType
        VB: InputData.EinputType
      qualifiedName:
        CSharp: InputData.EinputType
        VB: InputData.EinputType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: EinputType
        path: ''
        startLine: 2007
      syntax:
        content:
          CSharp: public EinputType EinputType
          VB: Public EinputType As EinputType
        return:
          type: Global.EinputType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.EinputType
    commentId: T:Global.EinputType
    language: CSharp
    name:
      CSharp: EinputType
      VB: EinputType
    nameWithType:
      CSharp: EinputType
      VB: EinputType
    qualifiedName:
      CSharp: EinputType
      VB: EinputType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: EinputType
      path: ''
      startLine: 2009
    syntax:
      content:
        CSharp: public enum EinputType
        VB: Public Enum EinputType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Global.EinputType.Click
      commentId: F:Global.EinputType.Click
      language: CSharp
      name:
        CSharp: Click
        VB: Click
      nameWithType:
        CSharp: EinputType.Click
        VB: EinputType.Click
      qualifiedName:
        CSharp: EinputType.Click
        VB: EinputType.Click
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Click
        path: ''
        startLine: 2010
      syntax:
        content:
          CSharp: Click = 0
          VB: Click = 0
        return:
          type: Global.EinputType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.EinputType.DoubleClick
      commentId: F:Global.EinputType.DoubleClick
      language: CSharp
      name:
        CSharp: DoubleClick
        VB: DoubleClick
      nameWithType:
        CSharp: EinputType.DoubleClick
        VB: EinputType.DoubleClick
      qualifiedName:
        CSharp: EinputType.DoubleClick
        VB: EinputType.DoubleClick
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: DoubleClick
        path: ''
        startLine: 2011
      syntax:
        content:
          CSharp: DoubleClick = 1
          VB: DoubleClick = 1
        return:
          type: Global.EinputType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.EinputType.RotateCam
      commentId: F:Global.EinputType.RotateCam
      language: CSharp
      name:
        CSharp: RotateCam
        VB: RotateCam
      nameWithType:
        CSharp: EinputType.RotateCam
        VB: EinputType.RotateCam
      qualifiedName:
        CSharp: EinputType.RotateCam
        VB: EinputType.RotateCam
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: RotateCam
        path: ''
        startLine: 2012
      syntax:
        content:
          CSharp: RotateCam = 2
          VB: RotateCam = 2
        return:
          type: Global.EinputType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.EinputType.MoveDrag
      commentId: F:Global.EinputType.MoveDrag
      language: CSharp
      name:
        CSharp: MoveDrag
        VB: MoveDrag
      nameWithType:
        CSharp: EinputType.MoveDrag
        VB: EinputType.MoveDrag
      qualifiedName:
        CSharp: EinputType.MoveDrag
        VB: EinputType.MoveDrag
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: MoveDrag
        path: ''
        startLine: 2013
      syntax:
        content:
          CSharp: MoveDrag = 3
          VB: MoveDrag = 3
        return:
          type: Global.EinputType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.EinputType.ScrollWheel
      commentId: F:Global.EinputType.ScrollWheel
      language: CSharp
      name:
        CSharp: ScrollWheel
        VB: ScrollWheel
      nameWithType:
        CSharp: EinputType.ScrollWheel
        VB: EinputType.ScrollWheel
      qualifiedName:
        CSharp: EinputType.ScrollWheel
        VB: EinputType.ScrollWheel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ScrollWheel
        path: ''
        startLine: 2014
      syntax:
        content:
          CSharp: ScrollWheel = 4
          VB: ScrollWheel = 4
        return:
          type: Global.EinputType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.EinputType.W
      commentId: F:Global.EinputType.W
      language: CSharp
      name:
        CSharp: W
        VB: W
      nameWithType:
        CSharp: EinputType.W
        VB: EinputType.W
      qualifiedName:
        CSharp: EinputType.W
        VB: EinputType.W
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: W
        path: ''
        startLine: 2015
      syntax:
        content:
          CSharp: W = 5
          VB: W = 5
        return:
          type: Global.EinputType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.EinputType.S
      commentId: F:Global.EinputType.S
      language: CSharp
      name:
        CSharp: S
        VB: S
      nameWithType:
        CSharp: EinputType.S
        VB: EinputType.S
      qualifiedName:
        CSharp: EinputType.S
        VB: EinputType.S
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: S
        path: ''
        startLine: 2016
      syntax:
        content:
          CSharp: S = 6
          VB: S = 6
        return:
          type: Global.EinputType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.EinputType.A
      commentId: F:Global.EinputType.A
      language: CSharp
      name:
        CSharp: A
        VB: A
      nameWithType:
        CSharp: EinputType.A
        VB: EinputType.A
      qualifiedName:
        CSharp: EinputType.A
        VB: EinputType.A
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: A
        path: ''
        startLine: 2017
      syntax:
        content:
          CSharp: A = 7
          VB: A = 7
        return:
          type: Global.EinputType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.EinputType.D
      commentId: F:Global.EinputType.D
      language: CSharp
      name:
        CSharp: D
        VB: D
      nameWithType:
        CSharp: EinputType.D
        VB: EinputType.D
      qualifiedName:
        CSharp: EinputType.D
        VB: EinputType.D
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: D
        path: ''
        startLine: 2018
      syntax:
        content:
          CSharp: D = 8
          VB: D = 8
        return:
          type: Global.EinputType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.EinputType.mouse0up
      commentId: F:Global.EinputType.mouse0up
      language: CSharp
      name:
        CSharp: mouse0up
        VB: mouse0up
      nameWithType:
        CSharp: EinputType.mouse0up
        VB: EinputType.mouse0up
      qualifiedName:
        CSharp: EinputType.mouse0up
        VB: EinputType.mouse0up
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: mouse0up
        path: ''
        startLine: 2019
      syntax:
        content:
          CSharp: mouse0up = 9
          VB: mouse0up = 9
        return:
          type: Global.EinputType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.EinputType.done
      commentId: F:Global.EinputType.done
      language: CSharp
      name:
        CSharp: done
        VB: done
      nameWithType:
        CSharp: EinputType.done
        VB: EinputType.done
      qualifiedName:
        CSharp: EinputType.done
        VB: EinputType.done
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: done
        path: ''
        startLine: 2020
      syntax:
        content:
          CSharp: done = 10
          VB: done = 10
        return:
          type: Global.EinputType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Global.GrenadesThrow
    commentId: T:Global.GrenadesThrow
    language: CSharp
    name:
      CSharp: GrenadesThrow
      VB: GrenadesThrow
    nameWithType:
      CSharp: GrenadesThrow
      VB: GrenadesThrow
    qualifiedName:
      CSharp: GrenadesThrow
      VB: GrenadesThrow
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: GrenadesThrow
      path: ''
      startLine: 2406
    syntax:
      content:
        CSharp: 'public class GrenadesThrow : MonoBehaviour'
        VB: >-
          Public Class GrenadesThrow

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.GrenadesThrow.Grenades
      commentId: F:Global.GrenadesThrow.Grenades
      language: CSharp
      name:
        CSharp: Grenades
        VB: Grenades
      nameWithType:
        CSharp: GrenadesThrow.Grenades
        VB: GrenadesThrow.Grenades
      qualifiedName:
        CSharp: GrenadesThrow.Grenades
        VB: GrenadesThrow.Grenades
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Grenades
        path: ''
        startLine: 2408
      syntax:
        content:
          CSharp: public GameObject Grenades
          VB: Public Grenades As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.GrenadesThrow.body
      commentId: F:Global.GrenadesThrow.body
      language: CSharp
      name:
        CSharp: body
        VB: body
      nameWithType:
        CSharp: GrenadesThrow.body
        VB: GrenadesThrow.body
      qualifiedName:
        CSharp: GrenadesThrow.body
        VB: GrenadesThrow.body
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: body
        path: ''
        startLine: 2409
      syntax:
        content:
          CSharp: public Rigidbody body
          VB: Public body As Rigidbody
        return:
          type: Global.Rigidbody
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.GrenadesThrow._collider
      commentId: F:Global.GrenadesThrow._collider
      language: CSharp
      name:
        CSharp: _collider
        VB: _collider
      nameWithType:
        CSharp: GrenadesThrow._collider
        VB: GrenadesThrow._collider
      qualifiedName:
        CSharp: GrenadesThrow._collider
        VB: GrenadesThrow._collider
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: _collider
        path: ''
        startLine: 2410
      syntax:
        content:
          CSharp: public CapsuleCollider _collider
          VB: Public _collider As CapsuleCollider
        return:
          type: Global.CapsuleCollider
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.GrenadesThrow.line
      commentId: F:Global.GrenadesThrow.line
      language: CSharp
      name:
        CSharp: line
        VB: line
      nameWithType:
        CSharp: GrenadesThrow.line
        VB: GrenadesThrow.line
      qualifiedName:
        CSharp: GrenadesThrow.line
        VB: GrenadesThrow.line
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: line
        path: ''
        startLine: 2411
      syntax:
        content:
          CSharp: public LineRenderer line
          VB: Public line As LineRenderer
        return:
          type: Global.LineRenderer
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.GrenadesThrow.Force
      commentId: F:Global.GrenadesThrow.Force
      language: CSharp
      name:
        CSharp: Force
        VB: Force
      nameWithType:
        CSharp: GrenadesThrow.Force
        VB: GrenadesThrow.Force
      qualifiedName:
        CSharp: GrenadesThrow.Force
        VB: GrenadesThrow.Force
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Force
        path: ''
        startLine: 2412
      syntax:
        content:
          CSharp: public Vector3 Force
          VB: Public Force As Vector3
        return:
          type: Global.Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.GrenadesThrow.boomTime
      commentId: F:Global.GrenadesThrow.boomTime
      language: CSharp
      name:
        CSharp: boomTime
        VB: boomTime
      nameWithType:
        CSharp: GrenadesThrow.boomTime
        VB: GrenadesThrow.boomTime
      qualifiedName:
        CSharp: GrenadesThrow.boomTime
        VB: GrenadesThrow.boomTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: boomTime
        path: ''
        startLine: 2413
      syntax:
        content:
          CSharp: public float boomTime
          VB: Public boomTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.GrenadesThrow._mesh
      commentId: F:Global.GrenadesThrow._mesh
      language: CSharp
      name:
        CSharp: _mesh
        VB: _mesh
      nameWithType:
        CSharp: GrenadesThrow._mesh
        VB: GrenadesThrow._mesh
      qualifiedName:
        CSharp: GrenadesThrow._mesh
        VB: GrenadesThrow._mesh
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: _mesh
        path: ''
        startLine: 2414
      syntax:
        content:
          CSharp: public Mesh _mesh
          VB: Public _mesh As Mesh
        return:
          type: Global.Mesh
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.GrenadesThrow._material
      commentId: F:Global.GrenadesThrow._material
      language: CSharp
      name:
        CSharp: _material
        VB: _material
      nameWithType:
        CSharp: GrenadesThrow._material
        VB: GrenadesThrow._material
      qualifiedName:
        CSharp: GrenadesThrow._material
        VB: GrenadesThrow._material
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: _material
        path: ''
        startLine: 2415
      syntax:
        content:
          CSharp: public Material _material
          VB: Public _material As Material
        return:
          type: Global.Material
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.GrenadesThrow.t
      commentId: F:Global.GrenadesThrow.t
      language: CSharp
      name:
        CSharp: t
        VB: t
      nameWithType:
        CSharp: GrenadesThrow.t
        VB: GrenadesThrow.t
      qualifiedName:
        CSharp: GrenadesThrow.t
        VB: GrenadesThrow.t
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: t
        path: ''
        startLine: 2416
      syntax:
        content:
          CSharp: public float t
          VB: Public t As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.GrenadesThrow.power
      commentId: F:Global.GrenadesThrow.power
      language: CSharp
      name:
        CSharp: power
        VB: power
      nameWithType:
        CSharp: GrenadesThrow.power
        VB: GrenadesThrow.power
      qualifiedName:
        CSharp: GrenadesThrow.power
        VB: GrenadesThrow.power
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: power
        path: ''
        startLine: 2417
      syntax:
        content:
          CSharp: public float power
          VB: Public power As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.GrenadesThrow.distance
      commentId: F:Global.GrenadesThrow.distance
      language: CSharp
      name:
        CSharp: distance
        VB: distance
      nameWithType:
        CSharp: GrenadesThrow.distance
        VB: GrenadesThrow.distance
      qualifiedName:
        CSharp: GrenadesThrow.distance
        VB: GrenadesThrow.distance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: distance
        path: ''
        startLine: 2420
      syntax:
        content:
          CSharp: public float distance
          VB: Public distance As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.GrenadesThrow.isRemovePin
      commentId: F:Global.GrenadesThrow.isRemovePin
      language: CSharp
      name:
        CSharp: isRemovePin
        VB: isRemovePin
      nameWithType:
        CSharp: GrenadesThrow.isRemovePin
        VB: GrenadesThrow.isRemovePin
      qualifiedName:
        CSharp: GrenadesThrow.isRemovePin
        VB: GrenadesThrow.isRemovePin
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: isRemovePin
        path: ''
        startLine: 2421
      syntax:
        content:
          CSharp: public bool isRemovePin
          VB: Public isRemovePin As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.GrenadesThrow.isThrow
      commentId: F:Global.GrenadesThrow.isThrow
      language: CSharp
      name:
        CSharp: isThrow
        VB: isThrow
      nameWithType:
        CSharp: GrenadesThrow.isThrow
        VB: GrenadesThrow.isThrow
      qualifiedName:
        CSharp: GrenadesThrow.isThrow
        VB: GrenadesThrow.isThrow
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: isThrow
        path: ''
        startLine: 2422
      syntax:
        content:
          CSharp: public bool isThrow
          VB: Public isThrow As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.GrenadesThrow.resetData
      commentId: F:Global.GrenadesThrow.resetData
      language: CSharp
      name:
        CSharp: resetData
        VB: resetData
      nameWithType:
        CSharp: GrenadesThrow.resetData
        VB: GrenadesThrow.resetData
      qualifiedName:
        CSharp: GrenadesThrow.resetData
        VB: GrenadesThrow.resetData
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: resetData
        path: ''
        startLine: 2423
      syntax:
        content:
          CSharp: public bool resetData
          VB: Public resetData As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.GrenadesThrow.isTrajectory
      commentId: F:Global.GrenadesThrow.isTrajectory
      language: CSharp
      name:
        CSharp: isTrajectory
        VB: isTrajectory
      nameWithType:
        CSharp: GrenadesThrow.isTrajectory
        VB: GrenadesThrow.isTrajectory
      qualifiedName:
        CSharp: GrenadesThrow.isTrajectory
        VB: GrenadesThrow.isTrajectory
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: isTrajectory
        path: ''
        startLine: 2424
      syntax:
        content:
          CSharp: public bool isTrajectory
          VB: Public isTrajectory As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.GrenadesThrow.PP2
      commentId: F:Global.GrenadesThrow.PP2
      language: CSharp
      name:
        CSharp: PP2
        VB: PP2
      nameWithType:
        CSharp: GrenadesThrow.PP2
        VB: GrenadesThrow.PP2
      qualifiedName:
        CSharp: GrenadesThrow.PP2
        VB: GrenadesThrow.PP2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PP2
        path: ''
        startLine: 2425
      syntax:
        content:
          CSharp: public Transform PP2
          VB: Public PP2 As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.GrenadesThrow.maxDistance
      commentId: F:Global.GrenadesThrow.maxDistance
      language: CSharp
      name:
        CSharp: maxDistance
        VB: maxDistance
      nameWithType:
        CSharp: GrenadesThrow.maxDistance
        VB: GrenadesThrow.maxDistance
      qualifiedName:
        CSharp: GrenadesThrow.maxDistance
        VB: GrenadesThrow.maxDistance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: maxDistance
        path: ''
        startLine: 2426
      syntax:
        content:
          CSharp: public float maxDistance
          VB: Public maxDistance As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.GrenadesThrow.tagObject
      commentId: F:Global.GrenadesThrow.tagObject
      language: CSharp
      name:
        CSharp: tagObject
        VB: tagObject
      nameWithType:
        CSharp: GrenadesThrow.tagObject
        VB: GrenadesThrow.tagObject
      qualifiedName:
        CSharp: GrenadesThrow.tagObject
        VB: GrenadesThrow.tagObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: tagObject
        path: ''
        startLine: 2507
      syntax:
        content:
          CSharp: public Transform tagObject
          VB: Public tagObject As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.GrenadesThrow.throwGrenades
      commentId: M:Global.GrenadesThrow.throwGrenades
      language: CSharp
      name:
        CSharp: throwGrenades()
        VB: throwGrenades()
      nameWithType:
        CSharp: GrenadesThrow.throwGrenades()
        VB: GrenadesThrow.throwGrenades()
      qualifiedName:
        CSharp: GrenadesThrow.throwGrenades()
        VB: GrenadesThrow.throwGrenades()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: throwGrenades
        path: ''
        startLine: 2562
      syntax:
        content:
          CSharp: public void throwGrenades()
          VB: Public Sub throwGrenades
      overload: Global.GrenadesThrow.throwGrenades*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.GrenadesThrow.beginBoom
      commentId: M:Global.GrenadesThrow.beginBoom
      language: CSharp
      name:
        CSharp: beginBoom()
        VB: beginBoom()
      nameWithType:
        CSharp: GrenadesThrow.beginBoom()
        VB: GrenadesThrow.beginBoom()
      qualifiedName:
        CSharp: GrenadesThrow.beginBoom()
        VB: GrenadesThrow.beginBoom()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: beginBoom
        path: ''
        startLine: 2571
      syntax:
        content:
          CSharp: public void beginBoom()
          VB: Public Sub beginBoom
      overload: Global.GrenadesThrow.beginBoom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.grenadesOntach
    commentId: T:Global.grenadesOntach
    language: CSharp
    name:
      CSharp: grenadesOntach
      VB: grenadesOntach
    nameWithType:
      CSharp: grenadesOntach
      VB: grenadesOntach
    qualifiedName:
      CSharp: grenadesOntach
      VB: grenadesOntach
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: grenadesOntach
      path: ''
      startLine: 2596
    syntax:
      content:
        CSharp: 'public class grenadesOntach : MonoBehaviour'
        VB: >-
          Public Class grenadesOntach

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.grenadesOntach.gt
      commentId: F:Global.grenadesOntach.gt
      language: CSharp
      name:
        CSharp: gt
        VB: gt
      nameWithType:
        CSharp: grenadesOntach.gt
        VB: grenadesOntach.gt
      qualifiedName:
        CSharp: grenadesOntach.gt
        VB: grenadesOntach.gt
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: gt
        path: ''
        startLine: 2599
      syntax:
        content:
          CSharp: public GrenadesThrow gt
          VB: Public gt As GrenadesThrow
        return:
          type: Global.GrenadesThrow
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.BulletGo
    commentId: T:Global.BulletGo
    language: CSharp
    name:
      CSharp: BulletGo
      VB: BulletGo
    nameWithType:
      CSharp: BulletGo
      VB: BulletGo
    qualifiedName:
      CSharp: BulletGo
      VB: BulletGo
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BulletGo
      path: ''
      startLine: 2614
    syntax:
      content:
        CSharp: 'public class BulletGo : MonoBehaviour'
        VB: >-
          Public Class BulletGo

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.BulletGo.gun
      commentId: F:Global.BulletGo.gun
      language: CSharp
      name:
        CSharp: gun
        VB: gun
      nameWithType:
        CSharp: BulletGo.gun
        VB: BulletGo.gun
      qualifiedName:
        CSharp: BulletGo.gun
        VB: BulletGo.gun
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: gun
        path: ''
        startLine: 2617
      syntax:
        content:
          CSharp: public GameObject gun
          VB: Public gun As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BulletGo.speed
      commentId: F:Global.BulletGo.speed
      language: CSharp
      name:
        CSharp: speed
        VB: speed
      nameWithType:
        CSharp: BulletGo.speed
        VB: BulletGo.speed
      qualifiedName:
        CSharp: BulletGo.speed
        VB: BulletGo.speed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: speed
        path: ''
        startLine: 2618
      syntax:
        content:
          CSharp: public float speed
          VB: Public speed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BulletGo.maxdistance
      commentId: F:Global.BulletGo.maxdistance
      language: CSharp
      name:
        CSharp: maxdistance
        VB: maxdistance
      nameWithType:
        CSharp: BulletGo.maxdistance
        VB: BulletGo.maxdistance
      qualifiedName:
        CSharp: BulletGo.maxdistance
        VB: BulletGo.maxdistance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: maxdistance
        path: ''
        startLine: 2619
      syntax:
        content:
          CSharp: public float maxdistance
          VB: Public maxdistance As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BulletGo.Damage
      commentId: F:Global.BulletGo.Damage
      language: CSharp
      name:
        CSharp: Damage
        VB: Damage
      nameWithType:
        CSharp: BulletGo.Damage
        VB: BulletGo.Damage
      qualifiedName:
        CSharp: BulletGo.Damage
        VB: BulletGo.Damage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Damage
        path: ''
        startLine: 2620
      syntax:
        content:
          CSharp: public float Damage
          VB: Public Damage As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BulletGo.pierceLv
      commentId: F:Global.BulletGo.pierceLv
      language: CSharp
      name:
        CSharp: pierceLv
        VB: pierceLv
      nameWithType:
        CSharp: BulletGo.pierceLv
        VB: BulletGo.pierceLv
      qualifiedName:
        CSharp: BulletGo.pierceLv
        VB: BulletGo.pierceLv
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: pierceLv
        path: ''
        startLine: 2621
      syntax:
        content:
          CSharp: public int pierceLv
          VB: Public pierceLv As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BulletGo.recoilForce
      commentId: F:Global.BulletGo.recoilForce
      language: CSharp
      name:
        CSharp: recoilForce
        VB: recoilForce
      nameWithType:
        CSharp: BulletGo.recoilForce
        VB: BulletGo.recoilForce
      qualifiedName:
        CSharp: BulletGo.recoilForce
        VB: BulletGo.recoilForce
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: recoilForce
        path: ''
        startLine: 2622
      syntax:
        content:
          CSharp: public float recoilForce
          VB: Public recoilForce As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BulletGo.mass
      commentId: F:Global.BulletGo.mass
      language: CSharp
      name:
        CSharp: mass
        VB: mass
      nameWithType:
        CSharp: BulletGo.mass
        VB: BulletGo.mass
      qualifiedName:
        CSharp: BulletGo.mass
        VB: BulletGo.mass
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: mass
        path: ''
        startLine: 2624
      syntax:
        content:
          CSharp: public float mass
          VB: Public mass As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BulletGo.tag_str
      commentId: F:Global.BulletGo.tag_str
      language: CSharp
      name:
        CSharp: tag_str
        VB: tag_str
      nameWithType:
        CSharp: BulletGo.tag_str
        VB: BulletGo.tag_str
      qualifiedName:
        CSharp: BulletGo.tag_str
        VB: BulletGo.tag_str
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: tag_str
        path: ''
        startLine: 2627
      syntax:
        content:
          CSharp: public string tag_str
          VB: Public tag_str As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BulletGo.layer_str
      commentId: F:Global.BulletGo.layer_str
      language: CSharp
      name:
        CSharp: layer_str
        VB: layer_str
      nameWithType:
        CSharp: BulletGo.layer_str
        VB: BulletGo.layer_str
      qualifiedName:
        CSharp: BulletGo.layer_str
        VB: BulletGo.layer_str
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: layer_str
        path: ''
        startLine: 2628
      syntax:
        content:
          CSharp: public string layer_str
          VB: Public layer_str As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BulletGo.part_Name
      commentId: F:Global.BulletGo.part_Name
      language: CSharp
      name:
        CSharp: part_Name
        VB: part_Name
      nameWithType:
        CSharp: BulletGo.part_Name
        VB: BulletGo.part_Name
      qualifiedName:
        CSharp: BulletGo.part_Name
        VB: BulletGo.part_Name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: part_Name
        path: ''
        startLine: 2629
      syntax:
        content:
          CSharp: public List<string> part_Name
          VB: Public part_Name As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BulletGo.temp_obj
      commentId: F:Global.BulletGo.temp_obj
      language: CSharp
      name:
        CSharp: temp_obj
        VB: temp_obj
      nameWithType:
        CSharp: BulletGo.temp_obj
        VB: BulletGo.temp_obj
      qualifiedName:
        CSharp: BulletGo.temp_obj
        VB: BulletGo.temp_obj
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: temp_obj
        path: ''
        startLine: 2630
      syntax:
        content:
          CSharp: public damageContor temp_obj
          VB: Public temp_obj As damageContor
        return:
          type: Global.damageContor
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BulletGo.damage_scale
      commentId: F:Global.BulletGo.damage_scale
      language: CSharp
      name:
        CSharp: damage_scale
        VB: damage_scale
      nameWithType:
        CSharp: BulletGo.damage_scale
        VB: BulletGo.damage_scale
      qualifiedName:
        CSharp: BulletGo.damage_scale
        VB: BulletGo.damage_scale
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: damage_scale
        path: ''
        startLine: 2631
      syntax:
        content:
          CSharp: public List<float> damage_scale
          VB: Public damage_scale As List(Of Single)
        return:
          type: System.Collections.Generic.List{System.Single}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.MyGobal
    commentId: T:Global.MyGobal
    language: CSharp
    name:
      CSharp: MyGobal
      VB: MyGobal
    nameWithType:
      CSharp: MyGobal
      VB: MyGobal
    qualifiedName:
      CSharp: MyGobal
      VB: MyGobal
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: MyGobal
      path: ''
      startLine: 2677
    syntax:
      content:
        CSharp: 'public class MyGobal : MonoBehaviour'
        VB: >-
          Public Class MyGobal

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.MyGobal.GetInstance
      commentId: M:Global.MyGobal.GetInstance
      language: CSharp
      name:
        CSharp: GetInstance()
        VB: GetInstance()
      nameWithType:
        CSharp: MyGobal.GetInstance()
        VB: MyGobal.GetInstance()
      qualifiedName:
        CSharp: MyGobal.GetInstance()
        VB: MyGobal.GetInstance()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetInstance
        path: ''
        startLine: 2682
      syntax:
        content:
          CSharp: public static MyGobal GetInstance()
          VB: Public Shared Function GetInstance As MyGobal
        return:
          type: Global.MyGobal
      overload: Global.MyGobal.GetInstance*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.MyGobal.HitRay
      commentId: P:Global.MyGobal.HitRay
      language: CSharp
      name:
        CSharp: HitRay
        VB: HitRay
      nameWithType:
        CSharp: MyGobal.HitRay
        VB: MyGobal.HitRay
      qualifiedName:
        CSharp: MyGobal.HitRay
        VB: MyGobal.HitRay
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: HitRay
        path: ''
        startLine: 2694
      syntax:
        content:
          CSharp: public Ray HitRay { get; }
          VB: Public ReadOnly Property HitRay As Ray
        parameters: []
        return:
          type: Global.Ray
      overload: Global.MyGobal.HitRay*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.MyGobal.HitInfo
      commentId: P:Global.MyGobal.HitInfo
      language: CSharp
      name:
        CSharp: HitInfo
        VB: HitInfo
      nameWithType:
        CSharp: MyGobal.HitInfo
        VB: MyGobal.HitInfo
      qualifiedName:
        CSharp: MyGobal.HitInfo
        VB: MyGobal.HitInfo
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: HitInfo
        path: ''
        startLine: 2696
      syntax:
        content:
          CSharp: public RaycastHit HitInfo { get; }
          VB: Public ReadOnly Property HitInfo As RaycastHit
        parameters: []
        return:
          type: Global.RaycastHit
      overload: Global.MyGobal.HitInfo*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.MyGobal.getHitTag(Camera)
      commentId: M:Global.MyGobal.getHitTag(Camera)
      language: CSharp
      name:
        CSharp: getHitTag(Camera)
        VB: getHitTag(Camera)
      nameWithType:
        CSharp: MyGobal.getHitTag(Camera)
        VB: MyGobal.getHitTag(Camera)
      qualifiedName:
        CSharp: MyGobal.getHitTag(Camera)
        VB: MyGobal.getHitTag(Camera)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: getHitTag
        path: ''
        startLine: 2708
      syntax:
        content:
          CSharp: public void getHitTag(Camera mian)
          VB: Public Sub getHitTag(mian As Camera)
        parameters:
        - id: mian
          type: Global.Camera
      overload: Global.MyGobal.getHitTag*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MyGobal.getAimTag(System.Single)
      commentId: M:Global.MyGobal.getAimTag(System.Single)
      language: CSharp
      name:
        CSharp: getAimTag(Single)
        VB: getAimTag(Single)
      nameWithType:
        CSharp: MyGobal.getAimTag(Single)
        VB: MyGobal.getAimTag(Single)
      qualifiedName:
        CSharp: MyGobal.getAimTag(System.Single)
        VB: MyGobal.getAimTag(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: getAimTag
        path: ''
        startLine: 2718
      syntax:
        content:
          CSharp: public Vector3 getAimTag(float distan)
          VB: Public Function getAimTag(distan As Single) As Vector3
        parameters:
        - id: distan
          type: System.Single
        return:
          type: Global.Vector3
      overload: Global.MyGobal.getAimTag*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.bullet_Generator
    commentId: T:Global.bullet_Generator
    language: CSharp
    name:
      CSharp: bullet_Generator
      VB: bullet_Generator
    nameWithType:
      CSharp: bullet_Generator
      VB: bullet_Generator
    qualifiedName:
      CSharp: bullet_Generator
      VB: bullet_Generator
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: bullet_Generator
      path: ''
      startLine: 2732
    syntax:
      content:
        CSharp: 'public class bullet_Generator : MonoBehaviour'
        VB: >-
          Public Class bullet_Generator

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.bullet_Generator.baseBullet
      commentId: F:Global.bullet_Generator.baseBullet
      language: CSharp
      name:
        CSharp: baseBullet
        VB: baseBullet
      nameWithType:
        CSharp: bullet_Generator.baseBullet
        VB: bullet_Generator.baseBullet
      qualifiedName:
        CSharp: bullet_Generator.baseBullet
        VB: bullet_Generator.baseBullet
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: baseBullet
        path: ''
        startLine: 2734
      syntax:
        content:
          CSharp: public GameObject baseBullet
          VB: Public baseBullet As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.bullet_Generator.Bullet_pool
      commentId: F:Global.bullet_Generator.Bullet_pool
      language: CSharp
      name:
        CSharp: Bullet_pool
        VB: Bullet_pool
      nameWithType:
        CSharp: bullet_Generator.Bullet_pool
        VB: bullet_Generator.Bullet_pool
      qualifiedName:
        CSharp: bullet_Generator.Bullet_pool
        VB: bullet_Generator.Bullet_pool
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Bullet_pool
        path: ''
        startLine: 2735
      syntax:
        content:
          CSharp: public List<GameObject> Bullet_pool
          VB: Public Bullet_pool As List(Of GameObject)
        return:
          type: System.Collections.Generic.List{GameObject}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.bullet_Generator.poolMaxNub
      commentId: F:Global.bullet_Generator.poolMaxNub
      language: CSharp
      name:
        CSharp: poolMaxNub
        VB: poolMaxNub
      nameWithType:
        CSharp: bullet_Generator.poolMaxNub
        VB: bullet_Generator.poolMaxNub
      qualifiedName:
        CSharp: bullet_Generator.poolMaxNub
        VB: bullet_Generator.poolMaxNub
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: poolMaxNub
        path: ''
        startLine: 2738
      syntax:
        content:
          CSharp: public int poolMaxNub
          VB: Public poolMaxNub As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.bullet_Generator._index
      commentId: F:Global.bullet_Generator._index
      language: CSharp
      name:
        CSharp: _index
        VB: _index
      nameWithType:
        CSharp: bullet_Generator._index
        VB: bullet_Generator._index
      qualifiedName:
        CSharp: bullet_Generator._index
        VB: bullet_Generator._index
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: _index
        path: ''
        startLine: 2739
      syntax:
        content:
          CSharp: public int _index
          VB: Public _index As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.bullet_Generator.GunType
      commentId: F:Global.bullet_Generator.GunType
      language: CSharp
      name:
        CSharp: GunType
        VB: GunType
      nameWithType:
        CSharp: bullet_Generator.GunType
        VB: bullet_Generator.GunType
      qualifiedName:
        CSharp: bullet_Generator.GunType
        VB: bullet_Generator.GunType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GunType
        path: ''
        startLine: 2740
      syntax:
        content:
          CSharp: public bullet_Generator.gunType GunType
          VB: Public GunType As bullet_Generator.gunType
        return:
          type: Global.bullet_Generator.gunType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.bullet_Generator.shoot(Vector3)
      commentId: M:Global.bullet_Generator.shoot(Vector3)
      language: CSharp
      name:
        CSharp: shoot(Vector3)
        VB: shoot(Vector3)
      nameWithType:
        CSharp: bullet_Generator.shoot(Vector3)
        VB: bullet_Generator.shoot(Vector3)
      qualifiedName:
        CSharp: bullet_Generator.shoot(Vector3)
        VB: bullet_Generator.shoot(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: shoot
        path: ''
        startLine: 2746
      syntax:
        content:
          CSharp: public void shoot(Vector3 tag)
          VB: Public Sub shoot(tag As Vector3)
        parameters:
        - id: tag
          type: Global.Vector3
      overload: Global.bullet_Generator.shoot*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.bullet_Generator.BulletInstance
      commentId: M:Global.bullet_Generator.BulletInstance
      language: CSharp
      name:
        CSharp: BulletInstance()
        VB: BulletInstance()
      nameWithType:
        CSharp: bullet_Generator.BulletInstance()
        VB: bullet_Generator.BulletInstance()
      qualifiedName:
        CSharp: bullet_Generator.BulletInstance()
        VB: bullet_Generator.BulletInstance()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: BulletInstance
        path: ''
        startLine: 2763
      syntax:
        content:
          CSharp: public GameObject BulletInstance()
          VB: Public Function BulletInstance As GameObject
        return:
          type: Global.GameObject
      overload: Global.bullet_Generator.BulletInstance*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.bullet_Generator.RandomTagSet(Vector3,System.Single)
      commentId: M:Global.bullet_Generator.RandomTagSet(Vector3,System.Single)
      language: CSharp
      name:
        CSharp: RandomTagSet(Vector3, Single)
        VB: RandomTagSet(Vector3, Single)
      nameWithType:
        CSharp: bullet_Generator.RandomTagSet(Vector3, Single)
        VB: bullet_Generator.RandomTagSet(Vector3, Single)
      qualifiedName:
        CSharp: bullet_Generator.RandomTagSet(Vector3, System.Single)
        VB: bullet_Generator.RandomTagSet(Vector3, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: RandomTagSet
        path: ''
        startLine: 2782
      syntax:
        content:
          CSharp: public Vector3 RandomTagSet(Vector3 tag, float range)
          VB: Public Function RandomTagSet(tag As Vector3, range As Single) As Vector3
        parameters:
        - id: tag
          type: Global.Vector3
        - id: range
          type: System.Single
        return:
          type: Global.Vector3
      overload: Global.bullet_Generator.RandomTagSet*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.bullet_Generator.gunType
    commentId: T:Global.bullet_Generator.gunType
    language: CSharp
    name:
      CSharp: bullet_Generator.gunType
      VB: bullet_Generator.gunType
    nameWithType:
      CSharp: bullet_Generator.gunType
      VB: bullet_Generator.gunType
    qualifiedName:
      CSharp: bullet_Generator.gunType
      VB: bullet_Generator.gunType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: gunType
      path: ''
      startLine: 2790
    syntax:
      content:
        CSharp: public enum gunType
        VB: Public Enum gunType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Global.bullet_Generator.gunType.longgun01
      commentId: F:Global.bullet_Generator.gunType.longgun01
      language: CSharp
      name:
        CSharp: longgun01
        VB: longgun01
      nameWithType:
        CSharp: bullet_Generator.gunType.longgun01
        VB: bullet_Generator.gunType.longgun01
      qualifiedName:
        CSharp: bullet_Generator.gunType.longgun01
        VB: bullet_Generator.gunType.longgun01
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: longgun01
        path: ''
        startLine: 2792
      syntax:
        content:
          CSharp: longgun01 = 0
          VB: longgun01 = 0
        return:
          type: Global.bullet_Generator.gunType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.bullet_Generator.gunType.hangun01
      commentId: F:Global.bullet_Generator.gunType.hangun01
      language: CSharp
      name:
        CSharp: hangun01
        VB: hangun01
      nameWithType:
        CSharp: bullet_Generator.gunType.hangun01
        VB: bullet_Generator.gunType.hangun01
      qualifiedName:
        CSharp: bullet_Generator.gunType.hangun01
        VB: bullet_Generator.gunType.hangun01
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: hangun01
        path: ''
        startLine: 2793
      syntax:
        content:
          CSharp: hangun01 = 1
          VB: hangun01 = 1
        return:
          type: Global.bullet_Generator.gunType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.bullet_Generator.gunType.spreadGun01
      commentId: F:Global.bullet_Generator.gunType.spreadGun01
      language: CSharp
      name:
        CSharp: spreadGun01
        VB: spreadGun01
      nameWithType:
        CSharp: bullet_Generator.gunType.spreadGun01
        VB: bullet_Generator.gunType.spreadGun01
      qualifiedName:
        CSharp: bullet_Generator.gunType.spreadGun01
        VB: bullet_Generator.gunType.spreadGun01
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: spreadGun01
        path: ''
        startLine: 2794
      syntax:
        content:
          CSharp: spreadGun01 = 2
          VB: spreadGun01 = 2
        return:
          type: Global.bullet_Generator.gunType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Global.bullet_Generator.bulletTpye
    commentId: T:Global.bullet_Generator.bulletTpye
    language: CSharp
    name:
      CSharp: bullet_Generator.bulletTpye
      VB: bullet_Generator.bulletTpye
    nameWithType:
      CSharp: bullet_Generator.bulletTpye
      VB: bullet_Generator.bulletTpye
    qualifiedName:
      CSharp: bullet_Generator.bulletTpye
      VB: bullet_Generator.bulletTpye
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: bulletTpye
      path: ''
      startLine: 2796
    syntax:
      content:
        CSharp: public enum bulletTpye
        VB: Public Enum bulletTpye
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Global.bullet_Generator.bulletTpye.seven
      commentId: F:Global.bullet_Generator.bulletTpye.seven
      language: CSharp
      name:
        CSharp: seven
        VB: seven
      nameWithType:
        CSharp: bullet_Generator.bulletTpye.seven
        VB: bullet_Generator.bulletTpye.seven
      qualifiedName:
        CSharp: bullet_Generator.bulletTpye.seven
        VB: bullet_Generator.bulletTpye.seven
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: seven
        path: ''
        startLine: 2798
      syntax:
        content:
          CSharp: seven = 0
          VB: seven = 0
        return:
          type: Global.bullet_Generator.bulletTpye
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.bullet_Generator.bulletTpye.five
      commentId: F:Global.bullet_Generator.bulletTpye.five
      language: CSharp
      name:
        CSharp: five
        VB: five
      nameWithType:
        CSharp: bullet_Generator.bulletTpye.five
        VB: bullet_Generator.bulletTpye.five
      qualifiedName:
        CSharp: bullet_Generator.bulletTpye.five
        VB: bullet_Generator.bulletTpye.five
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: five
        path: ''
        startLine: 2799
      syntax:
        content:
          CSharp: five = 1
          VB: five = 1
        return:
          type: Global.bullet_Generator.bulletTpye
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.bullet_Generator.bulletTpye.spread
      commentId: F:Global.bullet_Generator.bulletTpye.spread
      language: CSharp
      name:
        CSharp: spread
        VB: spread
      nameWithType:
        CSharp: bullet_Generator.bulletTpye.spread
        VB: bullet_Generator.bulletTpye.spread
      qualifiedName:
        CSharp: bullet_Generator.bulletTpye.spread
        VB: bullet_Generator.bulletTpye.spread
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: spread
        path: ''
        startLine: 2800
      syntax:
        content:
          CSharp: spread = 2
          VB: spread = 2
        return:
          type: Global.bullet_Generator.bulletTpye
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Global.bullet_Generator.GunInfo
    commentId: T:Global.bullet_Generator.GunInfo
    language: CSharp
    name:
      CSharp: bullet_Generator.GunInfo
      VB: bullet_Generator.GunInfo
    nameWithType:
      CSharp: bullet_Generator.GunInfo
      VB: bullet_Generator.GunInfo
    qualifiedName:
      CSharp: bullet_Generator.GunInfo
      VB: bullet_Generator.GunInfo
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: GunInfo
      path: ''
      startLine: 2802
    syntax:
      content:
        CSharp: public struct GunInfo
        VB: Public Structure GunInfo
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Global.bullet_Generator.GunInfo.gunType
      commentId: F:Global.bullet_Generator.GunInfo.gunType
      language: CSharp
      name:
        CSharp: gunType
        VB: gunType
      nameWithType:
        CSharp: bullet_Generator.GunInfo.gunType
        VB: bullet_Generator.GunInfo.gunType
      qualifiedName:
        CSharp: bullet_Generator.GunInfo.gunType
        VB: bullet_Generator.GunInfo.gunType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: gunType
        path: ''
        startLine: 2804
      syntax:
        content:
          CSharp: public bullet_Generator.gunType gunType
          VB: Public gunType As bullet_Generator.gunType
        return:
          type: Global.bullet_Generator.gunType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.bullet_Generator.GunInfo.BulletTpye
      commentId: F:Global.bullet_Generator.GunInfo.BulletTpye
      language: CSharp
      name:
        CSharp: BulletTpye
        VB: BulletTpye
      nameWithType:
        CSharp: bullet_Generator.GunInfo.BulletTpye
        VB: bullet_Generator.GunInfo.BulletTpye
      qualifiedName:
        CSharp: bullet_Generator.GunInfo.BulletTpye
        VB: bullet_Generator.GunInfo.BulletTpye
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: BulletTpye
        path: ''
        startLine: 2805
      syntax:
        content:
          CSharp: public bullet_Generator.bulletTpye BulletTpye
          VB: Public BulletTpye As bullet_Generator.bulletTpye
        return:
          type: Global.bullet_Generator.bulletTpye
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.bullet_Generator.GunInfo.maxBulletNumb
      commentId: F:Global.bullet_Generator.GunInfo.maxBulletNumb
      language: CSharp
      name:
        CSharp: maxBulletNumb
        VB: maxBulletNumb
      nameWithType:
        CSharp: bullet_Generator.GunInfo.maxBulletNumb
        VB: bullet_Generator.GunInfo.maxBulletNumb
      qualifiedName:
        CSharp: bullet_Generator.GunInfo.maxBulletNumb
        VB: bullet_Generator.GunInfo.maxBulletNumb
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: maxBulletNumb
        path: ''
        startLine: 2806
      syntax:
        content:
          CSharp: public int maxBulletNumb
          VB: Public maxBulletNumb As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.bullet_Generator.GunInfo.cooldown
      commentId: F:Global.bullet_Generator.GunInfo.cooldown
      language: CSharp
      name:
        CSharp: cooldown
        VB: cooldown
      nameWithType:
        CSharp: bullet_Generator.GunInfo.cooldown
        VB: bullet_Generator.GunInfo.cooldown
      qualifiedName:
        CSharp: bullet_Generator.GunInfo.cooldown
        VB: bullet_Generator.GunInfo.cooldown
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: cooldown
        path: ''
        startLine: 2807
      syntax:
        content:
          CSharp: public float cooldown
          VB: Public cooldown As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.damageContor
    commentId: T:Global.damageContor
    language: CSharp
    name:
      CSharp: damageContor
      VB: damageContor
    nameWithType:
      CSharp: damageContor
      VB: damageContor
    qualifiedName:
      CSharp: damageContor
      VB: damageContor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: damageContor
      path: ''
      startLine: 2815
    syntax:
      content:
        CSharp: 'public class damageContor : MonoBehaviour'
        VB: >-
          Public Class damageContor

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.damageContor.hp
      commentId: F:Global.damageContor.hp
      language: CSharp
      name:
        CSharp: hp
        VB: hp
      nameWithType:
        CSharp: damageContor.hp
        VB: damageContor.hp
      qualifiedName:
        CSharp: damageContor.hp
        VB: damageContor.hp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: hp
        path: ''
        startLine: 2817
      syntax:
        content:
          CSharp: public Transform hp
          VB: Public hp As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.damageContor.armor
      commentId: F:Global.damageContor.armor
      language: CSharp
      name:
        CSharp: armor
        VB: armor
      nameWithType:
        CSharp: damageContor.armor
        VB: damageContor.armor
      qualifiedName:
        CSharp: damageContor.armor
        VB: damageContor.armor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: armor
        path: ''
        startLine: 2818
      syntax:
        content:
          CSharp: public Transform armor
          VB: Public armor As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.damageContor.pierceLv_base
      commentId: F:Global.damageContor.pierceLv_base
      language: CSharp
      name:
        CSharp: pierceLv_base
        VB: pierceLv_base
      nameWithType:
        CSharp: damageContor.pierceLv_base
        VB: damageContor.pierceLv_base
      qualifiedName:
        CSharp: damageContor.pierceLv_base
        VB: damageContor.pierceLv_base
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: pierceLv_base
        path: ''
        startLine: 2819
      syntax:
        content:
          CSharp: public float pierceLv_base
          VB: Public pierceLv_base As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.damageContor.armor_value
      commentId: F:Global.damageContor.armor_value
      language: CSharp
      name:
        CSharp: armor_value
        VB: armor_value
      nameWithType:
        CSharp: damageContor.armor_value
        VB: damageContor.armor_value
      qualifiedName:
        CSharp: damageContor.armor_value
        VB: damageContor.armor_value
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: armor_value
        path: ''
        startLine: 2821
      syntax:
        content:
          CSharp: public float armor_value
          VB: Public armor_value As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.damageContor.hp_value
      commentId: F:Global.damageContor.hp_value
      language: CSharp
      name:
        CSharp: hp_value
        VB: hp_value
      nameWithType:
        CSharp: damageContor.hp_value
        VB: damageContor.hp_value
      qualifiedName:
        CSharp: damageContor.hp_value
        VB: damageContor.hp_value
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: hp_value
        path: ''
        startLine: 2823
      syntax:
        content:
          CSharp: public float hp_value
          VB: Public hp_value As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.damageContor.gethurt(System.Single,System.Int32)
      commentId: M:Global.damageContor.gethurt(System.Single,System.Int32)
      language: CSharp
      name:
        CSharp: gethurt(Single, Int32)
        VB: gethurt(Single, Int32)
      nameWithType:
        CSharp: damageContor.gethurt(Single, Int32)
        VB: damageContor.gethurt(Single, Int32)
      qualifiedName:
        CSharp: damageContor.gethurt(System.Single, System.Int32)
        VB: damageContor.gethurt(System.Single, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: gethurt
        path: ''
        startLine: 2829
      syntax:
        content:
          CSharp: public void gethurt(float damage, int pierceLv)
          VB: Public Sub gethurt(damage As Single, pierceLv As Integer)
        parameters:
        - id: damage
          type: System.Single
        - id: pierceLv
          type: System.Int32
      overload: Global.damageContor.gethurt*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.shoot_test
    commentId: T:Global.shoot_test
    language: CSharp
    name:
      CSharp: shoot_test
      VB: shoot_test
    nameWithType:
      CSharp: shoot_test
      VB: shoot_test
    qualifiedName:
      CSharp: shoot_test
      VB: shoot_test
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: shoot_test
      path: ''
      startLine: 2858
    syntax:
      content:
        CSharp: 'public class shoot_test : MonoBehaviour'
        VB: >-
          Public Class shoot_test

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.shoot_test.bullet_Generator
      commentId: F:Global.shoot_test.bullet_Generator
      language: CSharp
      name:
        CSharp: bullet_Generator
        VB: bullet_Generator
      nameWithType:
        CSharp: shoot_test.bullet_Generator
        VB: shoot_test.bullet_Generator
      qualifiedName:
        CSharp: shoot_test.bullet_Generator
        VB: shoot_test.bullet_Generator
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: bullet_Generator
        path: ''
        startLine: 2863
      syntax:
        content:
          CSharp: public bullet_Generator bullet_Generator
          VB: Public bullet_Generator As bullet_Generator
        return:
          type: Global.bullet_Generator
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.shoot_test.cooldown
      commentId: F:Global.shoot_test.cooldown
      language: CSharp
      name:
        CSharp: cooldown
        VB: cooldown
      nameWithType:
        CSharp: shoot_test.cooldown
        VB: shoot_test.cooldown
      qualifiedName:
        CSharp: shoot_test.cooldown
        VB: shoot_test.cooldown
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: cooldown
        path: ''
        startLine: 2867
      syntax:
        content:
          CSharp: public float cooldown
          VB: Public cooldown As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.shoot_test.Tag
      commentId: F:Global.shoot_test.Tag
      language: CSharp
      name:
        CSharp: Tag
        VB: Tag
      nameWithType:
        CSharp: shoot_test.Tag
        VB: shoot_test.Tag
      qualifiedName:
        CSharp: shoot_test.Tag
        VB: shoot_test.Tag
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Tag
        path: ''
        startLine: 2871
      syntax:
        content:
          CSharp: public Transform Tag
          VB: Public Tag As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.shoot_test._Player
      commentId: F:Global.shoot_test._Player
      language: CSharp
      name:
        CSharp: _Player
        VB: _Player
      nameWithType:
        CSharp: shoot_test._Player
        VB: shoot_test._Player
      qualifiedName:
        CSharp: shoot_test._Player
        VB: shoot_test._Player
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: _Player
        path: ''
        startLine: 2872
      syntax:
        content:
          CSharp: public GameObject _Player
          VB: Public _Player As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.shoot_test.aimCam
      commentId: F:Global.shoot_test.aimCam
      language: CSharp
      name:
        CSharp: aimCam
        VB: aimCam
      nameWithType:
        CSharp: shoot_test.aimCam
        VB: shoot_test.aimCam
      qualifiedName:
        CSharp: shoot_test.aimCam
        VB: shoot_test.aimCam
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: aimCam
        path: ''
        startLine: 2876
      syntax:
        content:
          CSharp: public Camera aimCam
          VB: Public aimCam As Camera
        return:
          type: Global.Camera
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.shoot_test.littleCam
      commentId: F:Global.shoot_test.littleCam
      language: CSharp
      name:
        CSharp: littleCam
        VB: littleCam
      nameWithType:
        CSharp: shoot_test.littleCam
        VB: shoot_test.littleCam
      qualifiedName:
        CSharp: shoot_test.littleCam
        VB: shoot_test.littleCam
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: littleCam
        path: ''
        startLine: 2878
      syntax:
        content:
          CSharp: public RectTransform littleCam
          VB: Public littleCam As RectTransform
        return:
          type: Global.RectTransform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.shoot_test.canvas
      commentId: F:Global.shoot_test.canvas
      language: CSharp
      name:
        CSharp: canvas
        VB: canvas
      nameWithType:
        CSharp: shoot_test.canvas
        VB: shoot_test.canvas
      qualifiedName:
        CSharp: shoot_test.canvas
        VB: shoot_test.canvas
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: canvas
        path: ''
        startLine: 2879
      syntax:
        content:
          CSharp: public Canvas canvas
          VB: Public canvas As Canvas
        return:
          type: Global.Canvas
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.shoot_test.range
      commentId: F:Global.shoot_test.range
      language: CSharp
      name:
        CSharp: range
        VB: range
      nameWithType:
        CSharp: shoot_test.range
        VB: shoot_test.range
      qualifiedName:
        CSharp: shoot_test.range
        VB: shoot_test.range
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: range
        path: ''
        startLine: 2884
      syntax:
        content:
          CSharp: public float range
          VB: Public range As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.shoot_test.maxrange
      commentId: F:Global.shoot_test.maxrange
      language: CSharp
      name:
        CSharp: maxrange
        VB: maxrange
      nameWithType:
        CSharp: shoot_test.maxrange
        VB: shoot_test.maxrange
      qualifiedName:
        CSharp: shoot_test.maxrange
        VB: shoot_test.maxrange
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: maxrange
        path: ''
        startLine: 2885
      syntax:
        content:
          CSharp: public float maxrange
          VB: Public maxrange As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.shoot_test.basedistan
      commentId: F:Global.shoot_test.basedistan
      language: CSharp
      name:
        CSharp: basedistan
        VB: basedistan
      nameWithType:
        CSharp: shoot_test.basedistan
        VB: shoot_test.basedistan
      qualifiedName:
        CSharp: shoot_test.basedistan
        VB: shoot_test.basedistan
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: basedistan
        path: ''
        startLine: 2886
      syntax:
        content:
          CSharp: public float basedistan
          VB: Public basedistan As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.shoot_test.sType
      commentId: F:Global.shoot_test.sType
      language: CSharp
      name:
        CSharp: sType
        VB: sType
      nameWithType:
        CSharp: shoot_test.sType
        VB: shoot_test.sType
      qualifiedName:
        CSharp: shoot_test.sType
        VB: shoot_test.sType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: sType
        path: ''
        startLine: 2894
      syntax:
        content:
          CSharp: public shoot_test.shootType sType
          VB: Public sType As shoot_test.shootType
        return:
          type: Global.shoot_test.shootType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.shoot_test.getRayCamHit
      commentId: M:Global.shoot_test.getRayCamHit
      language: CSharp
      name:
        CSharp: getRayCamHit()
        VB: getRayCamHit()
      nameWithType:
        CSharp: shoot_test.getRayCamHit()
        VB: shoot_test.getRayCamHit()
      qualifiedName:
        CSharp: shoot_test.getRayCamHit()
        VB: shoot_test.getRayCamHit()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: getRayCamHit
        path: ''
        startLine: 2942
      summary: "\n����������ײ����ȡ��Ϣ\n"
      example: []
      syntax:
        content:
          CSharp: public void getRayCamHit()
          VB: Public Sub getRayCamHit
      overload: Global.shoot_test.getRayCamHit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.shoot_test.shooting
      commentId: M:Global.shoot_test.shooting
      language: CSharp
      name:
        CSharp: shooting()
        VB: shooting()
      nameWithType:
        CSharp: shoot_test.shooting()
        VB: shoot_test.shooting()
      qualifiedName:
        CSharp: shoot_test.shooting()
        VB: shoot_test.shooting()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: shooting
        path: ''
        startLine: 2952
      summary: "\n���\n"
      example: []
      syntax:
        content:
          CSharp: public void shooting()
          VB: Public Sub shooting
      overload: Global.shoot_test.shooting*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.shoot_test.changeGun
      commentId: M:Global.shoot_test.changeGun
      language: CSharp
      name:
        CSharp: changeGun()
        VB: changeGun()
      nameWithType:
        CSharp: shoot_test.changeGun()
        VB: shoot_test.changeGun()
      qualifiedName:
        CSharp: shoot_test.changeGun()
        VB: shoot_test.changeGun()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: changeGun
        path: ''
        startLine: 2966
      summary: "\n����ǹ֧\n"
      example: []
      syntax:
        content:
          CSharp: public void changeGun()
          VB: Public Sub changeGun
      overload: Global.shoot_test.changeGun*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.shoot_test.reloadClip(System.Int32)
      commentId: M:Global.shoot_test.reloadClip(System.Int32)
      language: CSharp
      name:
        CSharp: reloadClip(Int32)
        VB: reloadClip(Int32)
      nameWithType:
        CSharp: shoot_test.reloadClip(Int32)
        VB: shoot_test.reloadClip(Int32)
      qualifiedName:
        CSharp: shoot_test.reloadClip(System.Int32)
        VB: shoot_test.reloadClip(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: reloadClip
        path: ''
        startLine: 2975
      summary: "\n��������\n"
      example: []
      syntax:
        content:
          CSharp: public int reloadClip(int numb)
          VB: Public Function reloadClip(numb As Integer) As Integer
        parameters:
        - id: numb
          type: System.Int32
          description: ''
        return:
          type: System.Int32
          description: ''
      overload: Global.shoot_test.reloadClip*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.shoot_test.pointTO(Vector3,System.Single,System.Boolean)
      commentId: M:Global.shoot_test.pointTO(Vector3,System.Single,System.Boolean)
      language: CSharp
      name:
        CSharp: pointTO(Vector3, Single, Boolean)
        VB: pointTO(Vector3, Single, Boolean)
      nameWithType:
        CSharp: shoot_test.pointTO(Vector3, Single, Boolean)
        VB: shoot_test.pointTO(Vector3, Single, Boolean)
      qualifiedName:
        CSharp: shoot_test.pointTO(Vector3, System.Single, System.Boolean)
        VB: shoot_test.pointTO(Vector3, System.Single, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: pointTO
        path: ''
        startLine: 2988
      summary: "\nIKtag��ֵ\n"
      example: []
      syntax:
        content:
          CSharp: public Vector3 pointTO(Vector3 _tag, float range, bool isran)
          VB: Public Function pointTO(_tag As Vector3, range As Single, isran As Boolean) As Vector3
        parameters:
        - id: _tag
          type: Global.Vector3
          description: ''
        - id: range
          type: System.Single
          description: ''
        - id: isran
          type: System.Boolean
          description: ''
        return:
          type: Global.Vector3
          description: ''
      overload: Global.shoot_test.pointTO*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.shoot_test.RandomTagSet(Vector3,System.Single,shoot_test.shootType)
      commentId: M:Global.shoot_test.RandomTagSet(Vector3,System.Single,shoot_test.shootType)
      language: CSharp
      name:
        CSharp: RandomTagSet(Vector3, Single, shoot_test.shootType)
        VB: RandomTagSet(Vector3, Single, shoot_test.shootType)
      nameWithType:
        CSharp: shoot_test.RandomTagSet(Vector3, Single, shoot_test.shootType)
        VB: shoot_test.RandomTagSet(Vector3, Single, shoot_test.shootType)
      qualifiedName:
        CSharp: shoot_test.RandomTagSet(Vector3, System.Single, shoot_test.shootType)
        VB: shoot_test.RandomTagSet(Vector3, System.Single, shoot_test.shootType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: RandomTagSet
        path: ''
        startLine: 3005
      summary: "\n�������������ʽ�������������\n"
      example: []
      syntax:
        content:
          CSharp: public Vector3 RandomTagSet(Vector3 tag, float range, shoot_test.shootType shootType)
          VB: Public Function RandomTagSet(tag As Vector3, range As Single, shootType As shoot_test.shootType) As Vector3
        parameters:
        - id: tag
          type: Global.Vector3
          description: ''
        - id: range
          type: System.Single
          description: ''
        - id: shootType
          type: Global.shoot_test.shootType
        return:
          type: Global.Vector3
          description: ''
      overload: Global.shoot_test.RandomTagSet*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.shoot_test.PlayLooKAt
      commentId: M:Global.shoot_test.PlayLooKAt
      language: CSharp
      name:
        CSharp: PlayLooKAt()
        VB: PlayLooKAt()
      nameWithType:
        CSharp: shoot_test.PlayLooKAt()
        VB: shoot_test.PlayLooKAt()
      qualifiedName:
        CSharp: shoot_test.PlayLooKAt()
        VB: shoot_test.PlayLooKAt()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PlayLooKAt
        path: ''
        startLine: 3019
      syntax:
        content:
          CSharp: public void PlayLooKAt()
          VB: Public Sub PlayLooKAt
      overload: Global.shoot_test.PlayLooKAt*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.shoot_test.changAimCam
      commentId: M:Global.shoot_test.changAimCam
      language: CSharp
      name:
        CSharp: changAimCam()
        VB: changAimCam()
      nameWithType:
        CSharp: shoot_test.changAimCam()
        VB: shoot_test.changAimCam()
      qualifiedName:
        CSharp: shoot_test.changAimCam()
        VB: shoot_test.changAimCam()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: changAimCam
        path: ''
        startLine: 3026
      summary: "\n�л���׼��������rayCam\n"
      example: []
      syntax:
        content:
          CSharp: public void changAimCam()
          VB: Public Sub changAimCam
      overload: Global.shoot_test.changAimCam*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.shoot_test.placeAimCamUI
      commentId: M:Global.shoot_test.placeAimCamUI
      language: CSharp
      name:
        CSharp: placeAimCamUI()
        VB: placeAimCamUI()
      nameWithType:
        CSharp: shoot_test.placeAimCamUI()
        VB: shoot_test.placeAimCamUI()
      qualifiedName:
        CSharp: shoot_test.placeAimCamUI()
        VB: shoot_test.placeAimCamUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: placeAimCamUI
        path: ''
        startLine: 3044
      summary: "\n����AimCam�����λ��\n"
      example: []
      syntax:
        content:
          CSharp: public void placeAimCamUI()
          VB: Public Sub placeAimCamUI
      overload: Global.shoot_test.placeAimCamUI*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.shoot_test.shootType
    commentId: T:Global.shoot_test.shootType
    language: CSharp
    name:
      CSharp: shoot_test.shootType
      VB: shoot_test.shootType
    nameWithType:
      CSharp: shoot_test.shootType
      VB: shoot_test.shootType
    qualifiedName:
      CSharp: shoot_test.shootType
      VB: shoot_test.shootType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: shootType
      path: ''
      startLine: 3056
    syntax:
      content:
        CSharp: public enum shootType
        VB: Public Enum shootType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Global.shoot_test.shootType.aim
      commentId: F:Global.shoot_test.shootType.aim
      language: CSharp
      name:
        CSharp: aim
        VB: aim
      nameWithType:
        CSharp: shoot_test.shootType.aim
        VB: shoot_test.shootType.aim
      qualifiedName:
        CSharp: shoot_test.shootType.aim
        VB: shoot_test.shootType.aim
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: aim
        path: ''
        startLine: 3058
      syntax:
        content:
          CSharp: aim = 0
          VB: aim = 0
        return:
          type: Global.shoot_test.shootType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.shoot_test.shootType.unaim
      commentId: F:Global.shoot_test.shootType.unaim
      language: CSharp
      name:
        CSharp: unaim
        VB: unaim
      nameWithType:
        CSharp: shoot_test.shootType.unaim
        VB: shoot_test.shootType.unaim
      qualifiedName:
        CSharp: shoot_test.shootType.unaim
        VB: shoot_test.shootType.unaim
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: unaim
        path: ''
        startLine: 3059
      syntax:
        content:
          CSharp: unaim = 1
          VB: unaim = 1
        return:
          type: Global.shoot_test.shootType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Global.templist
    commentId: T:Global.templist
    language: CSharp
    name:
      CSharp: templist
      VB: templist
    nameWithType:
      CSharp: templist
      VB: templist
    qualifiedName:
      CSharp: templist
      VB: templist
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: templist
      path: ''
      startLine: 3068
    syntax:
      content:
        CSharp: 'public class templist : MonoBehaviour'
        VB: >-
          Public Class templist

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.templist.list
      commentId: F:Global.templist.list
      language: CSharp
      name:
        CSharp: list
        VB: list
      nameWithType:
        CSharp: templist.list
        VB: templist.list
      qualifiedName:
        CSharp: templist.list
        VB: templist.list
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: list
        path: ''
        startLine: 3070
      syntax:
        content:
          CSharp: public List<GameObject> list
          VB: Public list As List(Of GameObject)
        return:
          type: System.Collections.Generic.List{GameObject}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.ActorAnimControl
    commentId: T:Global.ActorAnimControl
    language: CSharp
    name:
      CSharp: ActorAnimControl
      VB: ActorAnimControl
    nameWithType:
      CSharp: ActorAnimControl
      VB: ActorAnimControl
    qualifiedName:
      CSharp: ActorAnimControl
      VB: ActorAnimControl
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ActorAnimControl
      path: ''
      startLine: 3079
    summary: "\n角色控制器相匹配的动画控制器,主要是用来做角色动画参数来控制动画播放和状态的\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ActorAnimControl : MonoBehaviour'
        VB: >-
          Public Class ActorAnimControl

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ActorAnimControl.m_Anim
      commentId: F:Global.ActorAnimControl.m_Anim
      language: CSharp
      name:
        CSharp: m_Anim
        VB: m_Anim
      nameWithType:
        CSharp: ActorAnimControl.m_Anim
        VB: ActorAnimControl.m_Anim
      qualifiedName:
        CSharp: ActorAnimControl.m_Anim
        VB: ActorAnimControl.m_Anim
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_Anim
        path: ''
        startLine: 3097
      syntax:
        content:
          CSharp: public Animator m_Anim
          VB: Public m_Anim As Animator
        return:
          type: Global.Animator
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ActorAnimControl.AnimP_OnGround
      commentId: P:Global.ActorAnimControl.AnimP_OnGround
      language: CSharp
      name:
        CSharp: AnimP_OnGround
        VB: AnimP_OnGround
      nameWithType:
        CSharp: ActorAnimControl.AnimP_OnGround
        VB: ActorAnimControl.AnimP_OnGround
      qualifiedName:
        CSharp: ActorAnimControl.AnimP_OnGround
        VB: ActorAnimControl.AnimP_OnGround
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: AnimP_OnGround
        path: ''
        startLine: 3110
      syntax:
        content:
          CSharp: public bool AnimP_OnGround { get; set; }
          VB: Public Property AnimP_OnGround As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Global.ActorAnimControl.AnimP_OnGround*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.ActorAnimControl.AnimP_Velocity
      commentId: P:Global.ActorAnimControl.AnimP_Velocity
      language: CSharp
      name:
        CSharp: AnimP_Velocity
        VB: AnimP_Velocity
      nameWithType:
        CSharp: ActorAnimControl.AnimP_Velocity
        VB: ActorAnimControl.AnimP_Velocity
      qualifiedName:
        CSharp: ActorAnimControl.AnimP_Velocity
        VB: ActorAnimControl.AnimP_Velocity
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: AnimP_Velocity
        path: ''
        startLine: 3123
      syntax:
        content:
          CSharp: public Vector2 AnimP_Velocity { get; set; }
          VB: Public Property AnimP_Velocity As Vector2
        parameters: []
        return:
          type: Global.Vector2
      overload: Global.ActorAnimControl.AnimP_Velocity*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.ActorAnimControl.AnimP_Trigger_Jump
      commentId: M:Global.ActorAnimControl.AnimP_Trigger_Jump
      language: CSharp
      name:
        CSharp: AnimP_Trigger_Jump()
        VB: AnimP_Trigger_Jump()
      nameWithType:
        CSharp: ActorAnimControl.AnimP_Trigger_Jump()
        VB: ActorAnimControl.AnimP_Trigger_Jump()
      qualifiedName:
        CSharp: ActorAnimControl.AnimP_Trigger_Jump()
        VB: ActorAnimControl.AnimP_Trigger_Jump()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: AnimP_Trigger_Jump
        path: ''
        startLine: 3137
      syntax:
        content:
          CSharp: public void AnimP_Trigger_Jump()
          VB: Public Sub AnimP_Trigger_Jump
      overload: Global.ActorAnimControl.AnimP_Trigger_Jump*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.ActorIKMotionControl
    commentId: T:Global.ActorIKMotionControl
    language: CSharp
    name:
      CSharp: ActorIKMotionControl
      VB: ActorIKMotionControl
    nameWithType:
      CSharp: ActorIKMotionControl
      VB: ActorIKMotionControl
    qualifiedName:
      CSharp: ActorIKMotionControl
      VB: ActorIKMotionControl
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ActorIKMotionControl
      path: ''
      startLine: 3155
    summary: "\n角色IK和运动匹配控制器\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ActorIKMotionControl : MonoBehaviour'
        VB: >-
          Public Class ActorIKMotionControl

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ActorIKMotionControl.BeIK
      commentId: F:Global.ActorIKMotionControl.BeIK
      language: CSharp
      name:
        CSharp: BeIK
        VB: BeIK
      nameWithType:
        CSharp: ActorIKMotionControl.BeIK
        VB: ActorIKMotionControl.BeIK
      qualifiedName:
        CSharp: ActorIKMotionControl.BeIK
        VB: ActorIKMotionControl.BeIK
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: BeIK
        path: ''
        startLine: 3185
      syntax:
        content:
          CSharp: public bool BeIK
          VB: Public BeIK As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ActorIKMotionControl.BeUseBodyIK
      commentId: F:Global.ActorIKMotionControl.BeUseBodyIK
      language: CSharp
      name:
        CSharp: BeUseBodyIK
        VB: BeUseBodyIK
      nameWithType:
        CSharp: ActorIKMotionControl.BeUseBodyIK
        VB: ActorIKMotionControl.BeUseBodyIK
      qualifiedName:
        CSharp: ActorIKMotionControl.BeUseBodyIK
        VB: ActorIKMotionControl.BeUseBodyIK
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: BeUseBodyIK
        path: ''
        startLine: 3186
      syntax:
        content:
          CSharp: public bool BeUseBodyIK
          VB: Public BeUseBodyIK As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ActorIKMotionControl.FootGroundNormal
      commentId: F:Global.ActorIKMotionControl.FootGroundNormal
      language: CSharp
      name:
        CSharp: FootGroundNormal
        VB: FootGroundNormal
      nameWithType:
        CSharp: ActorIKMotionControl.FootGroundNormal
        VB: ActorIKMotionControl.FootGroundNormal
      qualifiedName:
        CSharp: ActorIKMotionControl.FootGroundNormal
        VB: ActorIKMotionControl.FootGroundNormal
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: FootGroundNormal
        path: ''
        startLine: 3200
      syntax:
        content:
          CSharp: public Vector3 FootGroundNormal
          VB: Public FootGroundNormal As Vector3
        return:
          type: Global.Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.ActorMoveControl
    commentId: T:Global.ActorMoveControl
    language: CSharp
    name:
      CSharp: ActorMoveControl
      VB: ActorMoveControl
    nameWithType:
      CSharp: ActorMoveControl
      VB: ActorMoveControl
    qualifiedName:
      CSharp: ActorMoveControl
      VB: ActorMoveControl
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ActorMoveControl
      path: ''
      startLine: 3469
    summary: "\n角色移动控制器-具有2种移动方式,刚体的速度控制和坐标控制\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ActorMoveControl : MonoBehaviour'
        VB: >-
          Public Class ActorMoveControl

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ActorMoveControl.actorCamera
      commentId: F:Global.ActorMoveControl.actorCamera
      language: CSharp
      name:
        CSharp: actorCamera
        VB: actorCamera
      nameWithType:
        CSharp: ActorMoveControl.actorCamera
        VB: ActorMoveControl.actorCamera
      qualifiedName:
        CSharp: ActorMoveControl.actorCamera
        VB: ActorMoveControl.actorCamera
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: actorCamera
        path: ''
        startLine: 3496
      syntax:
        content:
          CSharp: public Camera actorCamera
          VB: Public actorCamera As Camera
        return:
          type: Global.Camera
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ActorMoveControl.M_ActorLookType
      commentId: F:Global.ActorMoveControl.M_ActorLookType
      language: CSharp
      name:
        CSharp: M_ActorLookType
        VB: M_ActorLookType
      nameWithType:
        CSharp: ActorMoveControl.M_ActorLookType
        VB: ActorMoveControl.M_ActorLookType
      qualifiedName:
        CSharp: ActorMoveControl.M_ActorLookType
        VB: ActorMoveControl.M_ActorLookType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: M_ActorLookType
        path: ''
        startLine: 3497
      syntax:
        content:
          CSharp: public ActorMoveControl.ActorLookType M_ActorLookType
          VB: Public M_ActorLookType As ActorMoveControl.ActorLookType
        return:
          type: Global.ActorMoveControl.ActorLookType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ActorMoveControl.ActorLookPos
      commentId: F:Global.ActorMoveControl.ActorLookPos
      language: CSharp
      name:
        CSharp: ActorLookPos
        VB: ActorLookPos
      nameWithType:
        CSharp: ActorMoveControl.ActorLookPos
        VB: ActorMoveControl.ActorLookPos
      qualifiedName:
        CSharp: ActorMoveControl.ActorLookPos
        VB: ActorMoveControl.ActorLookPos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ActorLookPos
        path: ''
        startLine: 3498
      syntax:
        content:
          CSharp: public Vector3 ActorLookPos
          VB: Public ActorLookPos As Vector3
        return:
          type: Global.Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ActorMoveControl.acceleration
      commentId: F:Global.ActorMoveControl.acceleration
      language: CSharp
      name:
        CSharp: acceleration
        VB: acceleration
      nameWithType:
        CSharp: ActorMoveControl.acceleration
        VB: ActorMoveControl.acceleration
      qualifiedName:
        CSharp: ActorMoveControl.acceleration
        VB: ActorMoveControl.acceleration
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: acceleration
        path: ''
        startLine: 3499
      syntax:
        content:
          CSharp: public float acceleration
          VB: Public acceleration As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ActorMoveControl.maxMoveSpeed
      commentId: F:Global.ActorMoveControl.maxMoveSpeed
      language: CSharp
      name:
        CSharp: maxMoveSpeed
        VB: maxMoveSpeed
      nameWithType:
        CSharp: ActorMoveControl.maxMoveSpeed
        VB: ActorMoveControl.maxMoveSpeed
      qualifiedName:
        CSharp: ActorMoveControl.maxMoveSpeed
        VB: ActorMoveControl.maxMoveSpeed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: maxMoveSpeed
        path: ''
        startLine: 3500
      syntax:
        content:
          CSharp: public float maxMoveSpeed
          VB: Public maxMoveSpeed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ActorMoveControl.JumpHeight
      commentId: F:Global.ActorMoveControl.JumpHeight
      language: CSharp
      name:
        CSharp: JumpHeight
        VB: JumpHeight
      nameWithType:
        CSharp: ActorMoveControl.JumpHeight
        VB: ActorMoveControl.JumpHeight
      qualifiedName:
        CSharp: ActorMoveControl.JumpHeight
        VB: ActorMoveControl.JumpHeight
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: JumpHeight
        path: ''
        startLine: 3502
      syntax:
        content:
          CSharp: public float JumpHeight
          VB: Public JumpHeight As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ActorMoveControl.evnLayerMask
      commentId: F:Global.ActorMoveControl.evnLayerMask
      language: CSharp
      name:
        CSharp: evnLayerMask
        VB: evnLayerMask
      nameWithType:
        CSharp: ActorMoveControl.evnLayerMask
        VB: ActorMoveControl.evnLayerMask
      qualifiedName:
        CSharp: ActorMoveControl.evnLayerMask
        VB: ActorMoveControl.evnLayerMask
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: evnLayerMask
        path: ''
        startLine: 3507
      syntax:
        content:
          CSharp: public LayerMask evnLayerMask
          VB: Public evnLayerMask As LayerMask
        return:
          type: Global.LayerMask
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ActorMoveControl.bePlayerControl
      commentId: F:Global.ActorMoveControl.bePlayerControl
      language: CSharp
      name:
        CSharp: bePlayerControl
        VB: bePlayerControl
      nameWithType:
        CSharp: ActorMoveControl.bePlayerControl
        VB: ActorMoveControl.bePlayerControl
      qualifiedName:
        CSharp: ActorMoveControl.bePlayerControl
        VB: ActorMoveControl.bePlayerControl
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: bePlayerControl
        path: ''
        startLine: 3511
      syntax:
        content:
          CSharp: public bool bePlayerControl
          VB: Public bePlayerControl As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ActorMoveControl.InputAix
      commentId: F:Global.ActorMoveControl.InputAix
      language: CSharp
      name:
        CSharp: InputAix
        VB: InputAix
      nameWithType:
        CSharp: ActorMoveControl.InputAix
        VB: ActorMoveControl.InputAix
      qualifiedName:
        CSharp: ActorMoveControl.InputAix
        VB: ActorMoveControl.InputAix
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: InputAix
        path: ''
        startLine: 3513
      syntax:
        content:
          CSharp: public Vector2 InputAix
          VB: Public InputAix As Vector2
        return:
          type: Global.Vector2
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ActorMoveControl.AI_JumpCmd
      commentId: F:Global.ActorMoveControl.AI_JumpCmd
      language: CSharp
      name:
        CSharp: AI_JumpCmd
        VB: AI_JumpCmd
      nameWithType:
        CSharp: ActorMoveControl.AI_JumpCmd
        VB: ActorMoveControl.AI_JumpCmd
      qualifiedName:
        CSharp: ActorMoveControl.AI_JumpCmd
        VB: ActorMoveControl.AI_JumpCmd
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: AI_JumpCmd
        path: ''
        startLine: 3514
      syntax:
        content:
          CSharp: public bool AI_JumpCmd
          VB: Public AI_JumpCmd As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ActorMoveControl.AI_TargetPos
      commentId: F:Global.ActorMoveControl.AI_TargetPos
      language: CSharp
      name:
        CSharp: AI_TargetPos
        VB: AI_TargetPos
      nameWithType:
        CSharp: ActorMoveControl.AI_TargetPos
        VB: ActorMoveControl.AI_TargetPos
      qualifiedName:
        CSharp: ActorMoveControl.AI_TargetPos
        VB: ActorMoveControl.AI_TargetPos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: AI_TargetPos
        path: ''
        startLine: 3515
      syntax:
        content:
          CSharp: public Vector3 AI_TargetPos
          VB: Public AI_TargetPos As Vector3
        return:
          type: Global.Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ActorMoveControl.BeOnGround
      commentId: F:Global.ActorMoveControl.BeOnGround
      language: CSharp
      name:
        CSharp: BeOnGround
        VB: BeOnGround
      nameWithType:
        CSharp: ActorMoveControl.BeOnGround
        VB: ActorMoveControl.BeOnGround
      qualifiedName:
        CSharp: ActorMoveControl.BeOnGround
        VB: ActorMoveControl.BeOnGround
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: BeOnGround
        path: ''
        startLine: 3524
      syntax:
        content:
          CSharp: public bool BeOnGround
          VB: Public BeOnGround As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ActorMoveControl.beLostControl
      commentId: F:Global.ActorMoveControl.beLostControl
      language: CSharp
      name:
        CSharp: beLostControl
        VB: beLostControl
      nameWithType:
        CSharp: ActorMoveControl.beLostControl
        VB: ActorMoveControl.beLostControl
      qualifiedName:
        CSharp: ActorMoveControl.beLostControl
        VB: ActorMoveControl.beLostControl
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: beLostControl
        path: ''
        startLine: 3525
      syntax:
        content:
          CSharp: public bool beLostControl
          VB: Public beLostControl As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ActorMoveControl.BeFloatingInThePlan
      commentId: F:Global.ActorMoveControl.BeFloatingInThePlan
      language: CSharp
      name:
        CSharp: BeFloatingInThePlan
        VB: BeFloatingInThePlan
      nameWithType:
        CSharp: ActorMoveControl.BeFloatingInThePlan
        VB: ActorMoveControl.BeFloatingInThePlan
      qualifiedName:
        CSharp: ActorMoveControl.BeFloatingInThePlan
        VB: ActorMoveControl.BeFloatingInThePlan
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: BeFloatingInThePlan
        path: ''
        startLine: 3528
      syntax:
        content:
          CSharp: public bool BeFloatingInThePlan
          VB: Public BeFloatingInThePlan As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ActorMoveControl.m_BeCanByInputControl
      commentId: P:Global.ActorMoveControl.m_BeCanByInputControl
      language: CSharp
      name:
        CSharp: m_BeCanByInputControl
        VB: m_BeCanByInputControl
      nameWithType:
        CSharp: ActorMoveControl.m_BeCanByInputControl
        VB: ActorMoveControl.m_BeCanByInputControl
      qualifiedName:
        CSharp: ActorMoveControl.m_BeCanByInputControl
        VB: ActorMoveControl.m_BeCanByInputControl
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_BeCanByInputControl
        path: ''
        startLine: 3617
      summary: "\n是否受输入系统控制\n"
      example: []
      syntax:
        content:
          CSharp: public bool m_BeCanByInputControl { get; }
          VB: Public ReadOnly Property m_BeCanByInputControl As Boolean
        parameters: []
        return:
          type: System.Boolean
          description: ''
      overload: Global.ActorMoveControl.m_BeCanByInputControl*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.ActorMoveControl.AnimP_OnGround
      commentId: P:Global.ActorMoveControl.AnimP_OnGround
      language: CSharp
      name:
        CSharp: AnimP_OnGround
        VB: AnimP_OnGround
      nameWithType:
        CSharp: ActorMoveControl.AnimP_OnGround
        VB: ActorMoveControl.AnimP_OnGround
      qualifiedName:
        CSharp: ActorMoveControl.AnimP_OnGround
        VB: ActorMoveControl.AnimP_OnGround
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: AnimP_OnGround
        path: ''
        startLine: 3625
      syntax:
        content:
          CSharp: public bool AnimP_OnGround { get; set; }
          VB: Public Property AnimP_OnGround As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Global.ActorMoveControl.AnimP_OnGround*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.ActorMoveControl.AnimP_Velocity
      commentId: P:Global.ActorMoveControl.AnimP_Velocity
      language: CSharp
      name:
        CSharp: AnimP_Velocity
        VB: AnimP_Velocity
      nameWithType:
        CSharp: ActorMoveControl.AnimP_Velocity
        VB: ActorMoveControl.AnimP_Velocity
      qualifiedName:
        CSharp: ActorMoveControl.AnimP_Velocity
        VB: ActorMoveControl.AnimP_Velocity
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: AnimP_Velocity
        path: ''
        startLine: 3638
      syntax:
        content:
          CSharp: public Vector2 AnimP_Velocity { get; set; }
          VB: Public Property AnimP_Velocity As Vector2
        parameters: []
        return:
          type: Global.Vector2
      overload: Global.ActorMoveControl.AnimP_Velocity*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.ActorMoveControl.LostControlByPhysics(System.Single,Vector3)
      commentId: M:Global.ActorMoveControl.LostControlByPhysics(System.Single,Vector3)
      language: CSharp
      name:
        CSharp: LostControlByPhysics(Single, Vector3)
        VB: LostControlByPhysics(Single, Vector3)
      nameWithType:
        CSharp: ActorMoveControl.LostControlByPhysics(Single, Vector3)
        VB: ActorMoveControl.LostControlByPhysics(Single, Vector3)
      qualifiedName:
        CSharp: ActorMoveControl.LostControlByPhysics(System.Single, Vector3)
        VB: ActorMoveControl.LostControlByPhysics(System.Single, Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: LostControlByPhysics
        path: ''
        startLine: 3705
      summary: "\n物理失控,角色会被力撞飞,直到速度小于输入的参数才恢复控制\n"
      example: []
      syntax:
        content:
          CSharp: public void LostControlByPhysics(float resumeVelocity, Vector3 force)
          VB: Public Sub LostControlByPhysics(resumeVelocity As Single, force As Vector3)
        parameters:
        - id: resumeVelocity
          type: System.Single
          description: ''
        - id: force
          type: Global.Vector3
          description: ''
      overload: Global.ActorMoveControl.LostControlByPhysics*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ActorMoveControl.LostControlByMoveDir(System.Single,Vector3)
      commentId: M:Global.ActorMoveControl.LostControlByMoveDir(System.Single,Vector3)
      language: CSharp
      name:
        CSharp: LostControlByMoveDir(Single, Vector3)
        VB: LostControlByMoveDir(Single, Vector3)
      nameWithType:
        CSharp: ActorMoveControl.LostControlByMoveDir(Single, Vector3)
        VB: ActorMoveControl.LostControlByMoveDir(Single, Vector3)
      qualifiedName:
        CSharp: ActorMoveControl.LostControlByMoveDir(System.Single, Vector3)
        VB: ActorMoveControl.LostControlByMoveDir(System.Single, Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: LostControlByMoveDir
        path: ''
        startLine: 3721
      summary: "\n移动失控,角色会被按照参数进行移动,非强制,会被阻碍,重力等力都是正常,主要用来做击退\n"
      example: []
      syntax:
        content:
          CSharp: public void LostControlByMoveDir(float totalLostTime, Vector3 worldVector)
          VB: Public Sub LostControlByMoveDir(totalLostTime As Single, worldVector As Vector3)
        parameters:
        - id: totalLostTime
          type: System.Single
          description: ''
        - id: worldVector
          type: Global.Vector3
          description: ''
      overload: Global.ActorMoveControl.LostControlByMoveDir*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ActorMoveControl.LostControlByCurvs(System.Single,AnimationCurve,AnimationCurve,AnimationCurve,System.Single,System.Single,System.Single)
      commentId: M:Global.ActorMoveControl.LostControlByCurvs(System.Single,AnimationCurve,AnimationCurve,AnimationCurve,System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: LostControlByCurvs(Single, AnimationCurve, AnimationCurve, AnimationCurve, Single, Single, Single)
        VB: LostControlByCurvs(Single, AnimationCurve, AnimationCurve, AnimationCurve, Single, Single, Single)
      nameWithType:
        CSharp: ActorMoveControl.LostControlByCurvs(Single, AnimationCurve, AnimationCurve, AnimationCurve, Single, Single, Single)
        VB: ActorMoveControl.LostControlByCurvs(Single, AnimationCurve, AnimationCurve, AnimationCurve, Single, Single, Single)
      qualifiedName:
        CSharp: ActorMoveControl.LostControlByCurvs(System.Single, AnimationCurve, AnimationCurve, AnimationCurve, System.Single, System.Single, System.Single)
        VB: ActorMoveControl.LostControlByCurvs(System.Single, AnimationCurve, AnimationCurve, AnimationCurve, System.Single, System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: LostControlByCurvs
        path: ''
        startLine: 3737
      summary: "\n根据曲线强制移动,重力失去影响,可以按照编辑的曲线进行位移,曲线为局部坐标控制,结束后恢复重力,例如跳跃重劈,Z字快速冲锋等\n"
      example: []
      syntax:
        content:
          CSharp: public void LostControlByCurvs(float totalLostTime, AnimationCurve localMoveX, AnimationCurve localMoveY, AnimationCurve localMoveZ, float xRate = 1F, float yRate = 1F, float zRate = 1F)
          VB: Public Sub LostControlByCurvs(totalLostTime As Single, localMoveX As AnimationCurve, localMoveY As AnimationCurve, localMoveZ As AnimationCurve, xRate As Single = 1F, yRate As Single = 1F, zRate As Single = 1F)
        parameters:
        - id: totalLostTime
          type: System.Single
          description: ''
        - id: localMoveX
          type: Global.AnimationCurve
        - id: localMoveY
          type: Global.AnimationCurve
        - id: localMoveZ
          type: Global.AnimationCurve
        - id: xRate
          type: System.Single
        - id: yRate
          type: System.Single
        - id: zRate
          type: System.Single
      overload: Global.ActorMoveControl.LostControlByCurvs*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.ActorMoveControl.PlayerMoveType
    commentId: T:Global.ActorMoveControl.PlayerMoveType
    language: CSharp
    name:
      CSharp: ActorMoveControl.PlayerMoveType
      VB: ActorMoveControl.PlayerMoveType
    nameWithType:
      CSharp: ActorMoveControl.PlayerMoveType
      VB: ActorMoveControl.PlayerMoveType
    qualifiedName:
      CSharp: ActorMoveControl.PlayerMoveType
      VB: ActorMoveControl.PlayerMoveType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PlayerMoveType
      path: ''
      startLine: 4316
    summary: "\n角色移动模式\n"
    example: []
    syntax:
      content:
        CSharp: public enum PlayerMoveType
        VB: Public Enum PlayerMoveType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Global.ActorMoveControl.PlayerMoveType.Rigidbody_VelocityMove
      commentId: F:Global.ActorMoveControl.PlayerMoveType.Rigidbody_VelocityMove
      language: CSharp
      name:
        CSharp: Rigidbody_VelocityMove
        VB: Rigidbody_VelocityMove
      nameWithType:
        CSharp: ActorMoveControl.PlayerMoveType.Rigidbody_VelocityMove
        VB: ActorMoveControl.PlayerMoveType.Rigidbody_VelocityMove
      qualifiedName:
        CSharp: ActorMoveControl.PlayerMoveType.Rigidbody_VelocityMove
        VB: ActorMoveControl.PlayerMoveType.Rigidbody_VelocityMove
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Rigidbody_VelocityMove
        path: ''
        startLine: 4318
      syntax:
        content:
          CSharp: Rigidbody_VelocityMove = 0
          VB: Rigidbody_VelocityMove = 0
        return:
          type: Global.ActorMoveControl.PlayerMoveType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.ActorMoveControl.PlayerMoveType.Rigidbody_TransformMove
      commentId: F:Global.ActorMoveControl.PlayerMoveType.Rigidbody_TransformMove
      language: CSharp
      name:
        CSharp: Rigidbody_TransformMove
        VB: Rigidbody_TransformMove
      nameWithType:
        CSharp: ActorMoveControl.PlayerMoveType.Rigidbody_TransformMove
        VB: ActorMoveControl.PlayerMoveType.Rigidbody_TransformMove
      qualifiedName:
        CSharp: ActorMoveControl.PlayerMoveType.Rigidbody_TransformMove
        VB: ActorMoveControl.PlayerMoveType.Rigidbody_TransformMove
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Rigidbody_TransformMove
        path: ''
        startLine: 4319
      syntax:
        content:
          CSharp: Rigidbody_TransformMove = 1
          VB: Rigidbody_TransformMove = 1
        return:
          type: Global.ActorMoveControl.PlayerMoveType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Global.ActorMoveControl.ActorLookType
    commentId: T:Global.ActorMoveControl.ActorLookType
    language: CSharp
    name:
      CSharp: ActorMoveControl.ActorLookType
      VB: ActorMoveControl.ActorLookType
    nameWithType:
      CSharp: ActorMoveControl.ActorLookType
      VB: ActorMoveControl.ActorLookType
    qualifiedName:
      CSharp: ActorMoveControl.ActorLookType
      VB: ActorMoveControl.ActorLookType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ActorLookType
      path: ''
      startLine: 4325
    summary: "\n角色观察类型\n"
    example: []
    syntax:
      content:
        CSharp: public enum ActorLookType
        VB: Public Enum ActorLookType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Global.ActorMoveControl.ActorLookType.LT_LookCameraForward
      commentId: F:Global.ActorMoveControl.ActorLookType.LT_LookCameraForward
      language: CSharp
      name:
        CSharp: LT_LookCameraForward
        VB: LT_LookCameraForward
      nameWithType:
        CSharp: ActorMoveControl.ActorLookType.LT_LookCameraForward
        VB: ActorMoveControl.ActorLookType.LT_LookCameraForward
      qualifiedName:
        CSharp: ActorMoveControl.ActorLookType.LT_LookCameraForward
        VB: ActorMoveControl.ActorLookType.LT_LookCameraForward
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: LT_LookCameraForward
        path: ''
        startLine: 4328
      syntax:
        content:
          CSharp: LT_LookCameraForward = 0
          VB: LT_LookCameraForward = 0
        return:
          type: Global.ActorMoveControl.ActorLookType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.ActorMoveControl.ActorLookType.LT_LookMoveForward
      commentId: F:Global.ActorMoveControl.ActorLookType.LT_LookMoveForward
      language: CSharp
      name:
        CSharp: LT_LookMoveForward
        VB: LT_LookMoveForward
      nameWithType:
        CSharp: ActorMoveControl.ActorLookType.LT_LookMoveForward
        VB: ActorMoveControl.ActorLookType.LT_LookMoveForward
      qualifiedName:
        CSharp: ActorMoveControl.ActorLookType.LT_LookMoveForward
        VB: ActorMoveControl.ActorLookType.LT_LookMoveForward
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: LT_LookMoveForward
        path: ''
        startLine: 4329
      syntax:
        content:
          CSharp: LT_LookMoveForward = 1
          VB: LT_LookMoveForward = 1
        return:
          type: Global.ActorMoveControl.ActorLookType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.ActorMoveControl.ActorLookType.LT_LookPos
      commentId: F:Global.ActorMoveControl.ActorLookType.LT_LookPos
      language: CSharp
      name:
        CSharp: LT_LookPos
        VB: LT_LookPos
      nameWithType:
        CSharp: ActorMoveControl.ActorLookType.LT_LookPos
        VB: ActorMoveControl.ActorLookType.LT_LookPos
      qualifiedName:
        CSharp: ActorMoveControl.ActorLookType.LT_LookPos
        VB: ActorMoveControl.ActorLookType.LT_LookPos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: LT_LookPos
        path: ''
        startLine: 4330
      syntax:
        content:
          CSharp: LT_LookPos = 2
          VB: LT_LookPos = 2
        return:
          type: Global.ActorMoveControl.ActorLookType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Global.ActorMoveControl.LostControlType
    commentId: T:Global.ActorMoveControl.LostControlType
    language: CSharp
    name:
      CSharp: ActorMoveControl.LostControlType
      VB: ActorMoveControl.LostControlType
    nameWithType:
      CSharp: ActorMoveControl.LostControlType
      VB: ActorMoveControl.LostControlType
    qualifiedName:
      CSharp: ActorMoveControl.LostControlType
      VB: ActorMoveControl.LostControlType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: LostControlType
      path: ''
      startLine: 4334
    syntax:
      content:
        CSharp: public enum LostControlType
        VB: Public Enum LostControlType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Global.ActorMoveControl.LostControlType.PhysicsLostControl
      commentId: F:Global.ActorMoveControl.LostControlType.PhysicsLostControl
      language: CSharp
      name:
        CSharp: PhysicsLostControl
        VB: PhysicsLostControl
      nameWithType:
        CSharp: ActorMoveControl.LostControlType.PhysicsLostControl
        VB: ActorMoveControl.LostControlType.PhysicsLostControl
      qualifiedName:
        CSharp: ActorMoveControl.LostControlType.PhysicsLostControl
        VB: ActorMoveControl.LostControlType.PhysicsLostControl
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PhysicsLostControl
        path: ''
        startLine: 4337
      syntax:
        content:
          CSharp: PhysicsLostControl = 0
          VB: PhysicsLostControl = 0
        return:
          type: Global.ActorMoveControl.LostControlType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.ActorMoveControl.LostControlType.TransformMoveDirLostControl
      commentId: F:Global.ActorMoveControl.LostControlType.TransformMoveDirLostControl
      language: CSharp
      name:
        CSharp: TransformMoveDirLostControl
        VB: TransformMoveDirLostControl
      nameWithType:
        CSharp: ActorMoveControl.LostControlType.TransformMoveDirLostControl
        VB: ActorMoveControl.LostControlType.TransformMoveDirLostControl
      qualifiedName:
        CSharp: ActorMoveControl.LostControlType.TransformMoveDirLostControl
        VB: ActorMoveControl.LostControlType.TransformMoveDirLostControl
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: TransformMoveDirLostControl
        path: ''
        startLine: 4339
      syntax:
        content:
          CSharp: TransformMoveDirLostControl = 1
          VB: TransformMoveDirLostControl = 1
        return:
          type: Global.ActorMoveControl.LostControlType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.ActorMoveControl.LostControlType.TransformCurvsLostCOntrol
      commentId: F:Global.ActorMoveControl.LostControlType.TransformCurvsLostCOntrol
      language: CSharp
      name:
        CSharp: TransformCurvsLostCOntrol
        VB: TransformCurvsLostCOntrol
      nameWithType:
        CSharp: ActorMoveControl.LostControlType.TransformCurvsLostCOntrol
        VB: ActorMoveControl.LostControlType.TransformCurvsLostCOntrol
      qualifiedName:
        CSharp: ActorMoveControl.LostControlType.TransformCurvsLostCOntrol
        VB: ActorMoveControl.LostControlType.TransformCurvsLostCOntrol
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: TransformCurvsLostCOntrol
        path: ''
        startLine: 4341
      syntax:
        content:
          CSharp: TransformCurvsLostCOntrol = 2
          VB: TransformCurvsLostCOntrol = 2
        return:
          type: Global.ActorMoveControl.LostControlType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Global.CameraControl
    commentId: T:Global.CameraControl
    language: CSharp
    name:
      CSharp: CameraControl
      VB: CameraControl
    nameWithType:
      CSharp: CameraControl
      VB: CameraControl
    qualifiedName:
      CSharp: CameraControl
      VB: CameraControl
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: CameraControl
      path: ''
      startLine: 4477
    syntax:
      content:
        CSharp: 'public class CameraControl : MonoBehaviour'
        VB: >-
          Public Class CameraControl

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.CameraControl.target
      commentId: F:Global.CameraControl.target
      language: CSharp
      name:
        CSharp: target
        VB: target
      nameWithType:
        CSharp: CameraControl.target
        VB: CameraControl.target
      qualifiedName:
        CSharp: CameraControl.target
        VB: CameraControl.target
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: target
        path: ''
        startLine: 4479
      syntax:
        content:
          CSharp: public Transform target
          VB: Public target As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CameraControl.m_UpdateType
      commentId: F:Global.CameraControl.m_UpdateType
      language: CSharp
      name:
        CSharp: m_UpdateType
        VB: m_UpdateType
      nameWithType:
        CSharp: CameraControl.m_UpdateType
        VB: CameraControl.m_UpdateType
      qualifiedName:
        CSharp: CameraControl.m_UpdateType
        VB: CameraControl.m_UpdateType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_UpdateType
        path: ''
        startLine: 4482
      syntax:
        content:
          CSharp: public CameraControl.UpdateType m_UpdateType
          VB: Public m_UpdateType As CameraControl.UpdateType
        return:
          type: Global.CameraControl.UpdateType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.CameraControl.UpdateType
    commentId: T:Global.CameraControl.UpdateType
    language: CSharp
    name:
      CSharp: CameraControl.UpdateType
      VB: CameraControl.UpdateType
    nameWithType:
      CSharp: CameraControl.UpdateType
      VB: CameraControl.UpdateType
    qualifiedName:
      CSharp: CameraControl.UpdateType
      VB: CameraControl.UpdateType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: UpdateType
      path: ''
      startLine: 4574
    syntax:
      content:
        CSharp: public enum UpdateType
        VB: Public Enum UpdateType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Global.CameraControl.UpdateType.UT_LateUpdate
      commentId: F:Global.CameraControl.UpdateType.UT_LateUpdate
      language: CSharp
      name:
        CSharp: UT_LateUpdate
        VB: UT_LateUpdate
      nameWithType:
        CSharp: CameraControl.UpdateType.UT_LateUpdate
        VB: CameraControl.UpdateType.UT_LateUpdate
      qualifiedName:
        CSharp: CameraControl.UpdateType.UT_LateUpdate
        VB: CameraControl.UpdateType.UT_LateUpdate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UT_LateUpdate
        path: ''
        startLine: 4576
      syntax:
        content:
          CSharp: UT_LateUpdate = 0
          VB: UT_LateUpdate = 0
        return:
          type: Global.CameraControl.UpdateType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.CameraControl.UpdateType.UT_Update
      commentId: F:Global.CameraControl.UpdateType.UT_Update
      language: CSharp
      name:
        CSharp: UT_Update
        VB: UT_Update
      nameWithType:
        CSharp: CameraControl.UpdateType.UT_Update
        VB: CameraControl.UpdateType.UT_Update
      qualifiedName:
        CSharp: CameraControl.UpdateType.UT_Update
        VB: CameraControl.UpdateType.UT_Update
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UT_Update
        path: ''
        startLine: 4577
      syntax:
        content:
          CSharp: UT_Update = 1
          VB: UT_Update = 1
        return:
          type: Global.CameraControl.UpdateType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.CameraControl.UpdateType.UT_FiexedUpdate
      commentId: F:Global.CameraControl.UpdateType.UT_FiexedUpdate
      language: CSharp
      name:
        CSharp: UT_FiexedUpdate
        VB: UT_FiexedUpdate
      nameWithType:
        CSharp: CameraControl.UpdateType.UT_FiexedUpdate
        VB: CameraControl.UpdateType.UT_FiexedUpdate
      qualifiedName:
        CSharp: CameraControl.UpdateType.UT_FiexedUpdate
        VB: CameraControl.UpdateType.UT_FiexedUpdate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UT_FiexedUpdate
        path: ''
        startLine: 4578
      syntax:
        content:
          CSharp: UT_FiexedUpdate = 2
          VB: UT_FiexedUpdate = 2
        return:
          type: Global.CameraControl.UpdateType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Global.TopDownController3DOverride
    commentId: T:Global.TopDownController3DOverride
    language: CSharp
    name:
      CSharp: TopDownController3DOverride
      VB: TopDownController3DOverride
    nameWithType:
      CSharp: TopDownController3DOverride
      VB: TopDownController3DOverride
    qualifiedName:
      CSharp: TopDownController3DOverride
      VB: TopDownController3DOverride
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: TopDownController3DOverride
      path: ''
      startLine: 5593
    syntax:
      content:
        CSharp: 'public class TopDownController3DOverride : TopDownController3D'
        VB: >-
          Public Class TopDownController3DOverride

              Inherits TopDownController3D
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.TopDownController3DOverride.ResizeColliderHeight(System.Single)
      commentId: M:Global.TopDownController3DOverride.ResizeColliderHeight(System.Single)
      language: CSharp
      name:
        CSharp: ResizeColliderHeight(Single)
        VB: ResizeColliderHeight(Single)
      nameWithType:
        CSharp: TopDownController3DOverride.ResizeColliderHeight(Single)
        VB: TopDownController3DOverride.ResizeColliderHeight(Single)
      qualifiedName:
        CSharp: TopDownController3DOverride.ResizeColliderHeight(System.Single)
        VB: TopDownController3DOverride.ResizeColliderHeight(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ResizeColliderHeight
        path: ''
        startLine: 5599
      summary: "\nResizes the collider to the new size set in parameters\n"
      example: []
      syntax:
        content:
          CSharp: public override void ResizeColliderHeight(float newHeight)
          VB: Public Overrides Sub ResizeColliderHeight(newHeight As Single)
        parameters:
        - id: newHeight
          type: System.Single
      overload: Global.TopDownController3DOverride.ResizeColliderHeight*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.TopDownEngineInputActionsOverride
    commentId: T:Global.TopDownEngineInputActionsOverride
    language: CSharp
    name:
      CSharp: TopDownEngineInputActionsOverride
      VB: TopDownEngineInputActionsOverride
    nameWithType:
      CSharp: TopDownEngineInputActionsOverride
      VB: TopDownEngineInputActionsOverride
    qualifiedName:
      CSharp: TopDownEngineInputActionsOverride
      VB: TopDownEngineInputActionsOverride
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: TopDownEngineInputActionsOverride
      path: ''
      startLine: 8237
    syntax:
      content:
        CSharp: 'public class TopDownEngineInputActionsOverride : IInputActionCollection2'
        VB: >-
          Public Class TopDownEngineInputActionsOverride

              Inherits IInputActionCollection2
    inheritance:
    - System.Object
    implements:
    - Global.IDisposable
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.TopDownEngineInputActionsOverride.asset
      commentId: P:Global.TopDownEngineInputActionsOverride.asset
      language: CSharp
      name:
        CSharp: asset
        VB: asset
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.asset
        VB: TopDownEngineInputActionsOverride.asset
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.asset
        VB: TopDownEngineInputActionsOverride.asset
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: asset
        path: ''
        startLine: 8239
      syntax:
        content:
          CSharp: public InputActionAsset asset { get; }
          VB: Public ReadOnly Property asset As InputActionAsset
        parameters: []
        return:
          type: Global.InputActionAsset
      overload: Global.TopDownEngineInputActionsOverride.asset*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.#ctor
      commentId: M:Global.TopDownEngineInputActionsOverride.#ctor
      language: CSharp
      name:
        CSharp: TopDownEngineInputActionsOverride()
        VB: TopDownEngineInputActionsOverride()
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.TopDownEngineInputActionsOverride()
        VB: TopDownEngineInputActionsOverride.TopDownEngineInputActionsOverride()
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.TopDownEngineInputActionsOverride()
        VB: TopDownEngineInputActionsOverride.TopDownEngineInputActionsOverride()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: .ctor
        path: ''
        startLine: 8240
      syntax:
        content:
          CSharp: public TopDownEngineInputActionsOverride()
          VB: Public Sub New
      overload: Global.TopDownEngineInputActionsOverride.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TopDownEngineInputActionsOverride.Dispose
      commentId: M:Global.TopDownEngineInputActionsOverride.Dispose
      language: CSharp
      name:
        CSharp: Dispose()
        VB: Dispose()
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.Dispose()
        VB: TopDownEngineInputActionsOverride.Dispose()
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.Dispose()
        VB: TopDownEngineInputActionsOverride.Dispose()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Dispose
        path: ''
        startLine: 9771
      syntax:
        content:
          CSharp: public void Dispose()
          VB: Public Sub Dispose
      overload: Global.TopDownEngineInputActionsOverride.Dispose*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TopDownEngineInputActionsOverride.bindingMask
      commentId: P:Global.TopDownEngineInputActionsOverride.bindingMask
      language: CSharp
      name:
        CSharp: bindingMask
        VB: bindingMask
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.bindingMask
        VB: TopDownEngineInputActionsOverride.bindingMask
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.bindingMask
        VB: TopDownEngineInputActionsOverride.bindingMask
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: bindingMask
        path: ''
        startLine: 9776
      syntax:
        content:
          CSharp: public InputBinding? bindingMask { get; set; }
          VB: Public Property bindingMask As InputBinding?
        parameters: []
        return:
          type: System.Nullable{InputBinding}
      overload: Global.TopDownEngineInputActionsOverride.bindingMask*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.TopDownEngineInputActionsOverride.devices
      commentId: P:Global.TopDownEngineInputActionsOverride.devices
      language: CSharp
      name:
        CSharp: devices
        VB: devices
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.devices
        VB: TopDownEngineInputActionsOverride.devices
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.devices
        VB: TopDownEngineInputActionsOverride.devices
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: devices
        path: ''
        startLine: 9782
      syntax:
        content:
          CSharp: public ReadOnlyArray<InputDevice>? devices { get; set; }
          VB: Public Property devices As ReadOnlyArray(Of InputDevice)?
        parameters: []
        return:
          type: System.Nullable{ReadOnlyArray{InputDevice}}
      overload: Global.TopDownEngineInputActionsOverride.devices*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.TopDownEngineInputActionsOverride.controlSchemes
      commentId: P:Global.TopDownEngineInputActionsOverride.controlSchemes
      language: CSharp
      name:
        CSharp: controlSchemes
        VB: controlSchemes
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.controlSchemes
        VB: TopDownEngineInputActionsOverride.controlSchemes
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.controlSchemes
        VB: TopDownEngineInputActionsOverride.controlSchemes
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: controlSchemes
        path: ''
        startLine: 9788
      syntax:
        content:
          CSharp: public ReadOnlyArray<InputControlScheme> controlSchemes { get; }
          VB: Public ReadOnly Property controlSchemes As ReadOnlyArray(Of InputControlScheme)
        parameters: []
        return:
          type: Global.ReadOnlyArray{InputControlScheme}
      overload: Global.TopDownEngineInputActionsOverride.controlSchemes*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.Contains(InputAction)
      commentId: M:Global.TopDownEngineInputActionsOverride.Contains(InputAction)
      language: CSharp
      name:
        CSharp: Contains(InputAction)
        VB: Contains(InputAction)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.Contains(InputAction)
        VB: TopDownEngineInputActionsOverride.Contains(InputAction)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.Contains(InputAction)
        VB: TopDownEngineInputActionsOverride.Contains(InputAction)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Contains
        path: ''
        startLine: 9790
      syntax:
        content:
          CSharp: public bool Contains(InputAction action)
          VB: Public Function Contains(action As InputAction) As Boolean
        parameters:
        - id: action
          type: Global.InputAction
        return:
          type: System.Boolean
      overload: Global.TopDownEngineInputActionsOverride.Contains*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TopDownEngineInputActionsOverride.GetEnumerator
      commentId: M:Global.TopDownEngineInputActionsOverride.GetEnumerator
      language: CSharp
      name:
        CSharp: GetEnumerator()
        VB: GetEnumerator()
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.GetEnumerator()
        VB: TopDownEngineInputActionsOverride.GetEnumerator()
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.GetEnumerator()
        VB: TopDownEngineInputActionsOverride.GetEnumerator()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetEnumerator
        path: ''
        startLine: 9795
      syntax:
        content:
          CSharp: public IEnumerator<InputAction> GetEnumerator()
          VB: Public Function GetEnumerator As IEnumerator(Of InputAction)
        return:
          type: System.Collections.Generic.IEnumerator{InputAction}
      overload: Global.TopDownEngineInputActionsOverride.GetEnumerator*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TopDownEngineInputActionsOverride.Enable
      commentId: M:Global.TopDownEngineInputActionsOverride.Enable
      language: CSharp
      name:
        CSharp: Enable()
        VB: Enable()
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.Enable()
        VB: TopDownEngineInputActionsOverride.Enable()
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.Enable()
        VB: TopDownEngineInputActionsOverride.Enable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Enable
        path: ''
        startLine: 9805
      syntax:
        content:
          CSharp: public void Enable()
          VB: Public Sub Enable
      overload: Global.TopDownEngineInputActionsOverride.Enable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TopDownEngineInputActionsOverride.Disable
      commentId: M:Global.TopDownEngineInputActionsOverride.Disable
      language: CSharp
      name:
        CSharp: Disable()
        VB: Disable()
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.Disable()
        VB: TopDownEngineInputActionsOverride.Disable()
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.Disable()
        VB: TopDownEngineInputActionsOverride.Disable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Disable
        path: ''
        startLine: 9810
      syntax:
        content:
          CSharp: public void Disable()
          VB: Public Sub Disable
      overload: Global.TopDownEngineInputActionsOverride.Disable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TopDownEngineInputActionsOverride.bindings
      commentId: P:Global.TopDownEngineInputActionsOverride.bindings
      language: CSharp
      name:
        CSharp: bindings
        VB: bindings
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.bindings
        VB: TopDownEngineInputActionsOverride.bindings
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.bindings
        VB: TopDownEngineInputActionsOverride.bindings
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: bindings
        path: ''
        startLine: 9814
      syntax:
        content:
          CSharp: public IEnumerable<InputBinding> bindings { get; }
          VB: Public ReadOnly Property bindings As IEnumerable(Of InputBinding)
        parameters: []
        return:
          type: System.Collections.Generic.IEnumerable{InputBinding}
      overload: Global.TopDownEngineInputActionsOverride.bindings*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.FindAction(System.String,System.Boolean)
      commentId: M:Global.TopDownEngineInputActionsOverride.FindAction(System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: FindAction(String, Boolean)
        VB: FindAction(String, Boolean)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.FindAction(String, Boolean)
        VB: TopDownEngineInputActionsOverride.FindAction(String, Boolean)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.FindAction(System.String, System.Boolean)
        VB: TopDownEngineInputActionsOverride.FindAction(System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: FindAction
        path: ''
        startLine: 9816
      syntax:
        content:
          CSharp: public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
          VB: Public Function FindAction(actionNameOrId As String, throwIfNotFound As Boolean = False) As InputAction
        parameters:
        - id: actionNameOrId
          type: System.String
        - id: throwIfNotFound
          type: System.Boolean
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.FindAction*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TopDownEngineInputActionsOverride.FindBinding(InputBinding,InputAction@)
      commentId: M:Global.TopDownEngineInputActionsOverride.FindBinding(InputBinding,InputAction@)
      language: CSharp
      name:
        CSharp: FindBinding(InputBinding, out InputAction)
        VB: FindBinding(InputBinding, ByRef InputAction)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.FindBinding(InputBinding, out InputAction)
        VB: TopDownEngineInputActionsOverride.FindBinding(InputBinding, ByRef InputAction)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.FindBinding(InputBinding, out InputAction)
        VB: TopDownEngineInputActionsOverride.FindBinding(InputBinding, ByRef InputAction)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: FindBinding
        path: ''
        startLine: 9820
      syntax:
        content:
          CSharp: public int FindBinding(InputBinding bindingMask, out InputAction action)
          VB: Public Function FindBinding(bindingMask As InputBinding, ByRef action As InputAction) As Integer
        parameters:
        - id: bindingMask
          type: Global.InputBinding
        - id: action
          type: Global.InputAction
        return:
          type: System.Int32
      overload: Global.TopDownEngineInputActionsOverride.FindBinding*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TopDownEngineInputActionsOverride.PlayerControls
      commentId: P:Global.TopDownEngineInputActionsOverride.PlayerControls
      language: CSharp
      name:
        CSharp: PlayerControls
        VB: PlayerControls
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControls
        VB: TopDownEngineInputActionsOverride.PlayerControls
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControls
        VB: TopDownEngineInputActionsOverride.PlayerControls
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PlayerControls
        path: ''
        startLine: 10096
      syntax:
        content:
          CSharp: public TopDownEngineInputActionsOverride.PlayerControlsActions PlayerControls { get; }
          VB: Public ReadOnly Property PlayerControls As TopDownEngineInputActionsOverride.PlayerControlsActions
        parameters: []
        return:
          type: Global.TopDownEngineInputActionsOverride.PlayerControlsActions
      overload: Global.TopDownEngineInputActionsOverride.PlayerControls*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.UI
      commentId: P:Global.TopDownEngineInputActionsOverride.UI
      language: CSharp
      name:
        CSharp: UI
        VB: UI
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.UI
        VB: TopDownEngineInputActionsOverride.UI
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.UI
        VB: TopDownEngineInputActionsOverride.UI
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UI
        path: ''
        startLine: 10233
      syntax:
        content:
          CSharp: public TopDownEngineInputActionsOverride.UIActions UI { get; }
          VB: Public ReadOnly Property UI As TopDownEngineInputActionsOverride.UIActions
        parameters: []
        return:
          type: Global.TopDownEngineInputActionsOverride.UIActions
      overload: Global.TopDownEngineInputActionsOverride.UI*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.KeyboardScheme
      commentId: P:Global.TopDownEngineInputActionsOverride.KeyboardScheme
      language: CSharp
      name:
        CSharp: KeyboardScheme
        VB: KeyboardScheme
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.KeyboardScheme
        VB: TopDownEngineInputActionsOverride.KeyboardScheme
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.KeyboardScheme
        VB: TopDownEngineInputActionsOverride.KeyboardScheme
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: KeyboardScheme
        path: ''
        startLine: 10235
      syntax:
        content:
          CSharp: public InputControlScheme KeyboardScheme { get; }
          VB: Public ReadOnly Property KeyboardScheme As InputControlScheme
        parameters: []
        return:
          type: Global.InputControlScheme
      overload: Global.TopDownEngineInputActionsOverride.KeyboardScheme*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.GamepadScheme
      commentId: P:Global.TopDownEngineInputActionsOverride.GamepadScheme
      language: CSharp
      name:
        CSharp: GamepadScheme
        VB: GamepadScheme
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.GamepadScheme
        VB: TopDownEngineInputActionsOverride.GamepadScheme
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.GamepadScheme
        VB: TopDownEngineInputActionsOverride.GamepadScheme
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GamepadScheme
        path: ''
        startLine: 10244
      syntax:
        content:
          CSharp: public InputControlScheme GamepadScheme { get; }
          VB: Public ReadOnly Property GamepadScheme As InputControlScheme
        parameters: []
        return:
          type: Global.InputControlScheme
      overload: Global.TopDownEngineInputActionsOverride.GamepadScheme*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions
    commentId: T:Global.TopDownEngineInputActionsOverride.PlayerControlsActions
    language: CSharp
    name:
      CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions
      VB: TopDownEngineInputActionsOverride.PlayerControlsActions
    nameWithType:
      CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions
      VB: TopDownEngineInputActionsOverride.PlayerControlsActions
    qualifiedName:
      CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions
      VB: TopDownEngineInputActionsOverride.PlayerControlsActions
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PlayerControlsActions
      path: ''
      startLine: 9859
    syntax:
      content:
        CSharp: public struct PlayerControlsActions
        VB: Public Structure PlayerControlsActions
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.#ctor(TopDownEngineInputActionsOverride)
      commentId: M:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.#ctor(TopDownEngineInputActionsOverride)
      language: CSharp
      name:
        CSharp: PlayerControlsActions(TopDownEngineInputActionsOverride)
        VB: PlayerControlsActions(TopDownEngineInputActionsOverride)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.PlayerControlsActions(TopDownEngineInputActionsOverride)
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.PlayerControlsActions(TopDownEngineInputActionsOverride)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.PlayerControlsActions(TopDownEngineInputActionsOverride)
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.PlayerControlsActions(TopDownEngineInputActionsOverride)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: .ctor
        path: ''
        startLine: 9862
      syntax:
        content:
          CSharp: public PlayerControlsActions(TopDownEngineInputActionsOverride wrapper)
          VB: Public Sub New(wrapper As TopDownEngineInputActionsOverride)
        parameters:
        - id: wrapper
          type: Global.TopDownEngineInputActionsOverride
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.PrimaryMovement
      commentId: P:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.PrimaryMovement
      language: CSharp
      name:
        CSharp: PrimaryMovement
        VB: PrimaryMovement
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.PrimaryMovement
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.PrimaryMovement
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.PrimaryMovement
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.PrimaryMovement
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PrimaryMovement
        path: ''
        startLine: 9863
      syntax:
        content:
          CSharp: public readonly InputAction PrimaryMovement { get; }
          VB: Public ReadOnly Property PrimaryMovement As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.PrimaryMovement*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SecondaryMovement
      commentId: P:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SecondaryMovement
      language: CSharp
      name:
        CSharp: SecondaryMovement
        VB: SecondaryMovement
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.SecondaryMovement
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.SecondaryMovement
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.SecondaryMovement
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.SecondaryMovement
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SecondaryMovement
        path: ''
        startLine: 9864
      syntax:
        content:
          CSharp: public readonly InputAction SecondaryMovement { get; }
          VB: Public ReadOnly Property SecondaryMovement As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SecondaryMovement*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Jump
      commentId: P:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Jump
      language: CSharp
      name:
        CSharp: Jump
        VB: Jump
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.Jump
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.Jump
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.Jump
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.Jump
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Jump
        path: ''
        startLine: 9865
      syntax:
        content:
          CSharp: public readonly InputAction Jump { get; }
          VB: Public ReadOnly Property Jump As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Jump*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Run
      commentId: P:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Run
      language: CSharp
      name:
        CSharp: Run
        VB: Run
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.Run
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.Run
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.Run
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.Run
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Run
        path: ''
        startLine: 9866
      syntax:
        content:
          CSharp: public readonly InputAction Run { get; }
          VB: Public ReadOnly Property Run As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Run*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Dash
      commentId: P:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Dash
      language: CSharp
      name:
        CSharp: Dash
        VB: Dash
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.Dash
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.Dash
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.Dash
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.Dash
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Dash
        path: ''
        startLine: 9867
      syntax:
        content:
          CSharp: public readonly InputAction Dash { get; }
          VB: Public ReadOnly Property Dash As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Dash*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Crouch
      commentId: P:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Crouch
      language: CSharp
      name:
        CSharp: Crouch
        VB: Crouch
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.Crouch
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.Crouch
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.Crouch
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.Crouch
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Crouch
        path: ''
        startLine: 9868
      syntax:
        content:
          CSharp: public readonly InputAction Crouch { get; }
          VB: Public ReadOnly Property Crouch As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Crouch*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Aim
      commentId: P:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Aim
      language: CSharp
      name:
        CSharp: Aim
        VB: Aim
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.Aim
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.Aim
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.Aim
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.Aim
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Aim
        path: ''
        startLine: 9869
      syntax:
        content:
          CSharp: public readonly InputAction Aim { get; }
          VB: Public ReadOnly Property Aim As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Aim*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Shoot
      commentId: P:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Shoot
      language: CSharp
      name:
        CSharp: Shoot
        VB: Shoot
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.Shoot
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.Shoot
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.Shoot
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.Shoot
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Shoot
        path: ''
        startLine: 9870
      syntax:
        content:
          CSharp: public readonly InputAction Shoot { get; }
          VB: Public ReadOnly Property Shoot As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Shoot*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SecondaryShoot
      commentId: P:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SecondaryShoot
      language: CSharp
      name:
        CSharp: SecondaryShoot
        VB: SecondaryShoot
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.SecondaryShoot
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.SecondaryShoot
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.SecondaryShoot
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.SecondaryShoot
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SecondaryShoot
        path: ''
        startLine: 9871
      syntax:
        content:
          CSharp: public readonly InputAction SecondaryShoot { get; }
          VB: Public ReadOnly Property SecondaryShoot As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SecondaryShoot*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Interact
      commentId: P:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Interact
      language: CSharp
      name:
        CSharp: Interact
        VB: Interact
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.Interact
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.Interact
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.Interact
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.Interact
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Interact
        path: ''
        startLine: 9872
      syntax:
        content:
          CSharp: public readonly InputAction Interact { get; }
          VB: Public ReadOnly Property Interact As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Interact*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Reload
      commentId: P:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Reload
      language: CSharp
      name:
        CSharp: Reload
        VB: Reload
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.Reload
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.Reload
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.Reload
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.Reload
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Reload
        path: ''
        startLine: 9873
      syntax:
        content:
          CSharp: public readonly InputAction Reload { get; }
          VB: Public ReadOnly Property Reload As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Reload*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SwitchWeapon
      commentId: P:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SwitchWeapon
      language: CSharp
      name:
        CSharp: SwitchWeapon
        VB: SwitchWeapon
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.SwitchWeapon
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.SwitchWeapon
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.SwitchWeapon
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.SwitchWeapon
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SwitchWeapon
        path: ''
        startLine: 9874
      syntax:
        content:
          CSharp: public readonly InputAction SwitchWeapon { get; }
          VB: Public ReadOnly Property SwitchWeapon As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SwitchWeapon*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SwitchCharacter
      commentId: P:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SwitchCharacter
      language: CSharp
      name:
        CSharp: SwitchCharacter
        VB: SwitchCharacter
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.SwitchCharacter
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.SwitchCharacter
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.SwitchCharacter
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.SwitchCharacter
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SwitchCharacter
        path: ''
        startLine: 9875
      syntax:
        content:
          CSharp: public readonly InputAction SwitchCharacter { get; }
          VB: Public ReadOnly Property SwitchCharacter As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SwitchCharacter*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.TimeControl
      commentId: P:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.TimeControl
      language: CSharp
      name:
        CSharp: TimeControl
        VB: TimeControl
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.TimeControl
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.TimeControl
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.TimeControl
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.TimeControl
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: TimeControl
        path: ''
        startLine: 9876
      syntax:
        content:
          CSharp: public readonly InputAction TimeControl { get; }
          VB: Public ReadOnly Property TimeControl As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.TimeControl*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.CameraInputActive
      commentId: P:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.CameraInputActive
      language: CSharp
      name:
        CSharp: CameraInputActive
        VB: CameraInputActive
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.CameraInputActive
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.CameraInputActive
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.CameraInputActive
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.CameraInputActive
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CameraInputActive
        path: ''
        startLine: 9877
      syntax:
        content:
          CSharp: public readonly InputAction CameraInputActive { get; }
          VB: Public ReadOnly Property CameraInputActive As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.CameraInputActive*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.CameraMove
      commentId: P:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.CameraMove
      language: CSharp
      name:
        CSharp: CameraMove
        VB: CameraMove
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.CameraMove
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.CameraMove
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.CameraMove
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.CameraMove
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CameraMove
        path: ''
        startLine: 9878
      syntax:
        content:
          CSharp: public readonly InputAction CameraMove { get; }
          VB: Public ReadOnly Property CameraMove As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.CameraMove*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.CameraScale
      commentId: P:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.CameraScale
      language: CSharp
      name:
        CSharp: CameraScale
        VB: CameraScale
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.CameraScale
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.CameraScale
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.CameraScale
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.CameraScale
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CameraScale
        path: ''
        startLine: 9879
      syntax:
        content:
          CSharp: public readonly InputAction CameraScale { get; }
          VB: Public ReadOnly Property CameraScale As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.CameraScale*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Throw
      commentId: P:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Throw
      language: CSharp
      name:
        CSharp: Throw
        VB: Throw
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.Throw
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.Throw
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.Throw
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.Throw
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Throw
        path: ''
        startLine: 9880
      syntax:
        content:
          CSharp: public readonly InputAction Throw { get; }
          VB: Public ReadOnly Property Throw As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Throw*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.MousePosition
      commentId: P:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.MousePosition
      language: CSharp
      name:
        CSharp: MousePosition
        VB: MousePosition
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.MousePosition
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.MousePosition
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.MousePosition
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.MousePosition
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: MousePosition
        path: ''
        startLine: 9881
      syntax:
        content:
          CSharp: public readonly InputAction MousePosition { get; }
          VB: Public ReadOnly Property MousePosition As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.MousePosition*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFirstItem
      commentId: P:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFirstItem
      language: CSharp
      name:
        CSharp: EquipFirstItem
        VB: EquipFirstItem
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFirstItem
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFirstItem
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFirstItem
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFirstItem
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: EquipFirstItem
        path: ''
        startLine: 9882
      syntax:
        content:
          CSharp: public readonly InputAction EquipFirstItem { get; }
          VB: Public ReadOnly Property EquipFirstItem As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFirstItem*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSecondItem
      commentId: P:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSecondItem
      language: CSharp
      name:
        CSharp: EquipSecondItem
        VB: EquipSecondItem
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSecondItem
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSecondItem
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSecondItem
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSecondItem
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: EquipSecondItem
        path: ''
        startLine: 9883
      syntax:
        content:
          CSharp: public readonly InputAction EquipSecondItem { get; }
          VB: Public ReadOnly Property EquipSecondItem As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSecondItem*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipThirdItem
      commentId: P:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipThirdItem
      language: CSharp
      name:
        CSharp: EquipThirdItem
        VB: EquipThirdItem
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipThirdItem
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipThirdItem
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipThirdItem
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipThirdItem
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: EquipThirdItem
        path: ''
        startLine: 9884
      syntax:
        content:
          CSharp: public readonly InputAction EquipThirdItem { get; }
          VB: Public ReadOnly Property EquipThirdItem As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipThirdItem*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFourthItem
      commentId: P:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFourthItem
      language: CSharp
      name:
        CSharp: EquipFourthItem
        VB: EquipFourthItem
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFourthItem
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFourthItem
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFourthItem
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFourthItem
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: EquipFourthItem
        path: ''
        startLine: 9885
      syntax:
        content:
          CSharp: public readonly InputAction EquipFourthItem { get; }
          VB: Public ReadOnly Property EquipFourthItem As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFourthItem*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFifthItem
      commentId: P:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFifthItem
      language: CSharp
      name:
        CSharp: EquipFifthItem
        VB: EquipFifthItem
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFifthItem
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFifthItem
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFifthItem
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFifthItem
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: EquipFifthItem
        path: ''
        startLine: 9886
      syntax:
        content:
          CSharp: public readonly InputAction EquipFifthItem { get; }
          VB: Public ReadOnly Property EquipFifthItem As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFifthItem*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSixthItem
      commentId: P:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSixthItem
      language: CSharp
      name:
        CSharp: EquipSixthItem
        VB: EquipSixthItem
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSixthItem
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSixthItem
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSixthItem
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSixthItem
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: EquipSixthItem
        path: ''
        startLine: 9887
      syntax:
        content:
          CSharp: public readonly InputAction EquipSixthItem { get; }
          VB: Public ReadOnly Property EquipSixthItem As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSixthItem*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSeventhItem
      commentId: P:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSeventhItem
      language: CSharp
      name:
        CSharp: EquipSeventhItem
        VB: EquipSeventhItem
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSeventhItem
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSeventhItem
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSeventhItem
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSeventhItem
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: EquipSeventhItem
        path: ''
        startLine: 9888
      syntax:
        content:
          CSharp: public readonly InputAction EquipSeventhItem { get; }
          VB: Public ReadOnly Property EquipSeventhItem As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSeventhItem*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipEighthItem
      commentId: P:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipEighthItem
      language: CSharp
      name:
        CSharp: EquipEighthItem
        VB: EquipEighthItem
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipEighthItem
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipEighthItem
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipEighthItem
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipEighthItem
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: EquipEighthItem
        path: ''
        startLine: 9889
      syntax:
        content:
          CSharp: public readonly InputAction EquipEighthItem { get; }
          VB: Public ReadOnly Property EquipEighthItem As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipEighthItem*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipNinthItem
      commentId: P:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipNinthItem
      language: CSharp
      name:
        CSharp: EquipNinthItem
        VB: EquipNinthItem
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipNinthItem
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipNinthItem
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipNinthItem
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipNinthItem
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: EquipNinthItem
        path: ''
        startLine: 9890
      syntax:
        content:
          CSharp: public readonly InputAction EquipNinthItem { get; }
          VB: Public ReadOnly Property EquipNinthItem As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipNinthItem*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipNextItem
      commentId: P:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipNextItem
      language: CSharp
      name:
        CSharp: EquipNextItem
        VB: EquipNextItem
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipNextItem
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipNextItem
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipNextItem
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipNextItem
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: EquipNextItem
        path: ''
        startLine: 9891
      syntax:
        content:
          CSharp: public readonly InputAction EquipNextItem { get; }
          VB: Public ReadOnly Property EquipNextItem As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipNextItem*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipTenthItem
      commentId: P:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipTenthItem
      language: CSharp
      name:
        CSharp: EquipTenthItem
        VB: EquipTenthItem
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipTenthItem
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipTenthItem
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipTenthItem
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipTenthItem
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: EquipTenthItem
        path: ''
        startLine: 9892
      syntax:
        content:
          CSharp: public readonly InputAction EquipTenthItem { get; }
          VB: Public ReadOnly Property EquipTenthItem As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipTenthItem*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipPreviousItem
      commentId: P:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipPreviousItem
      language: CSharp
      name:
        CSharp: EquipPreviousItem
        VB: EquipPreviousItem
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipPreviousItem
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipPreviousItem
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipPreviousItem
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipPreviousItem
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: EquipPreviousItem
        path: ''
        startLine: 9893
      syntax:
        content:
          CSharp: public readonly InputAction EquipPreviousItem { get; }
          VB: Public ReadOnly Property EquipPreviousItem As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipPreviousItem*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Get
      commentId: M:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Get
      language: CSharp
      name:
        CSharp: Get()
        VB: Get()
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.Get()
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.Get()
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.Get()
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.Get()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Get
        path: ''
        startLine: 9894
      syntax:
        content:
          CSharp: public InputActionMap Get()
          VB: Public Function Get As InputActionMap
        return:
          type: Global.InputActionMap
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Get*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Enable
      commentId: M:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Enable
      language: CSharp
      name:
        CSharp: Enable()
        VB: Enable()
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.Enable()
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.Enable()
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.Enable()
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.Enable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Enable
        path: ''
        startLine: 9895
      syntax:
        content:
          CSharp: public void Enable()
          VB: Public Sub Enable
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Enable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Disable
      commentId: M:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Disable
      language: CSharp
      name:
        CSharp: Disable()
        VB: Disable()
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.Disable()
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.Disable()
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.Disable()
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.Disable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Disable
        path: ''
        startLine: 9896
      syntax:
        content:
          CSharp: public void Disable()
          VB: Public Sub Disable
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Disable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.enabled
      commentId: P:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.enabled
      language: CSharp
      name:
        CSharp: enabled
        VB: enabled
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.enabled
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.enabled
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.enabled
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.enabled
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: enabled
        path: ''
        startLine: 9897
      syntax:
        content:
          CSharp: public readonly bool enabled { get; }
          VB: Public ReadOnly Property enabled As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.enabled*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.op_Implicit(TopDownEngineInputActionsOverride.PlayerControlsActions)~InputActionMap
      commentId: M:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.op_Implicit(TopDownEngineInputActionsOverride.PlayerControlsActions)~InputActionMap
      language: CSharp
      name:
        CSharp: Implicit(TopDownEngineInputActionsOverride.PlayerControlsActions to InputActionMap)
        VB: Widening(TopDownEngineInputActionsOverride.PlayerControlsActions to InputActionMap)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.Implicit(TopDownEngineInputActionsOverride.PlayerControlsActions to InputActionMap)
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.Widening(TopDownEngineInputActionsOverride.PlayerControlsActions to InputActionMap)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.Implicit(TopDownEngineInputActionsOverride.PlayerControlsActions to InputActionMap)
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.Widening(TopDownEngineInputActionsOverride.PlayerControlsActions to InputActionMap)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: op_Implicit
        path: ''
        startLine: 9898
      syntax:
        content:
          CSharp: public static implicit operator InputActionMap(TopDownEngineInputActionsOverride.PlayerControlsActions set)
          VB: Public Shared Widening Operator CType(set As TopDownEngineInputActionsOverride.PlayerControlsActions) As InputActionMap
        parameters:
        - id: set
          type: Global.TopDownEngineInputActionsOverride.PlayerControlsActions
        return:
          type: Global.InputActionMap
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.op_Implicit*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SetCallbacks(TopDownEngineInputActionsOverride.IPlayerControlsActions)
      commentId: M:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SetCallbacks(TopDownEngineInputActionsOverride.IPlayerControlsActions)
      language: CSharp
      name:
        CSharp: SetCallbacks(TopDownEngineInputActionsOverride.IPlayerControlsActions)
        VB: SetCallbacks(TopDownEngineInputActionsOverride.IPlayerControlsActions)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.SetCallbacks(TopDownEngineInputActionsOverride.IPlayerControlsActions)
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.SetCallbacks(TopDownEngineInputActionsOverride.IPlayerControlsActions)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.PlayerControlsActions.SetCallbacks(TopDownEngineInputActionsOverride.IPlayerControlsActions)
        VB: TopDownEngineInputActionsOverride.PlayerControlsActions.SetCallbacks(TopDownEngineInputActionsOverride.IPlayerControlsActions)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetCallbacks
        path: ''
        startLine: 9899
      syntax:
        content:
          CSharp: public void SetCallbacks(TopDownEngineInputActionsOverride.IPlayerControlsActions instance)
          VB: Public Sub SetCallbacks(instance As TopDownEngineInputActionsOverride.IPlayerControlsActions)
        parameters:
        - id: instance
          type: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions
      overload: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SetCallbacks*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.TopDownEngineInputActionsOverride.UIActions
    commentId: T:Global.TopDownEngineInputActionsOverride.UIActions
    language: CSharp
    name:
      CSharp: TopDownEngineInputActionsOverride.UIActions
      VB: TopDownEngineInputActionsOverride.UIActions
    nameWithType:
      CSharp: TopDownEngineInputActionsOverride.UIActions
      VB: TopDownEngineInputActionsOverride.UIActions
    qualifiedName:
      CSharp: TopDownEngineInputActionsOverride.UIActions
      VB: TopDownEngineInputActionsOverride.UIActions
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: UIActions
      path: ''
      startLine: 10115
    syntax:
      content:
        CSharp: public struct UIActions
        VB: Public Structure UIActions
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Global.TopDownEngineInputActionsOverride.UIActions.#ctor(TopDownEngineInputActionsOverride)
      commentId: M:Global.TopDownEngineInputActionsOverride.UIActions.#ctor(TopDownEngineInputActionsOverride)
      language: CSharp
      name:
        CSharp: UIActions(TopDownEngineInputActionsOverride)
        VB: UIActions(TopDownEngineInputActionsOverride)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.UIActions.UIActions(TopDownEngineInputActionsOverride)
        VB: TopDownEngineInputActionsOverride.UIActions.UIActions(TopDownEngineInputActionsOverride)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.UIActions.UIActions(TopDownEngineInputActionsOverride)
        VB: TopDownEngineInputActionsOverride.UIActions.UIActions(TopDownEngineInputActionsOverride)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: .ctor
        path: ''
        startLine: 10118
      syntax:
        content:
          CSharp: public UIActions(TopDownEngineInputActionsOverride wrapper)
          VB: Public Sub New(wrapper As TopDownEngineInputActionsOverride)
        parameters:
        - id: wrapper
          type: Global.TopDownEngineInputActionsOverride
      overload: Global.TopDownEngineInputActionsOverride.UIActions.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TopDownEngineInputActionsOverride.UIActions.Navigate
      commentId: P:Global.TopDownEngineInputActionsOverride.UIActions.Navigate
      language: CSharp
      name:
        CSharp: Navigate
        VB: Navigate
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.UIActions.Navigate
        VB: TopDownEngineInputActionsOverride.UIActions.Navigate
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.UIActions.Navigate
        VB: TopDownEngineInputActionsOverride.UIActions.Navigate
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Navigate
        path: ''
        startLine: 10119
      syntax:
        content:
          CSharp: public readonly InputAction Navigate { get; }
          VB: Public ReadOnly Property Navigate As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.UIActions.Navigate*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.UIActions.Submit
      commentId: P:Global.TopDownEngineInputActionsOverride.UIActions.Submit
      language: CSharp
      name:
        CSharp: Submit
        VB: Submit
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.UIActions.Submit
        VB: TopDownEngineInputActionsOverride.UIActions.Submit
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.UIActions.Submit
        VB: TopDownEngineInputActionsOverride.UIActions.Submit
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Submit
        path: ''
        startLine: 10120
      syntax:
        content:
          CSharp: public readonly InputAction Submit { get; }
          VB: Public ReadOnly Property Submit As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.UIActions.Submit*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.UIActions.Cancel
      commentId: P:Global.TopDownEngineInputActionsOverride.UIActions.Cancel
      language: CSharp
      name:
        CSharp: Cancel
        VB: Cancel
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.UIActions.Cancel
        VB: TopDownEngineInputActionsOverride.UIActions.Cancel
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.UIActions.Cancel
        VB: TopDownEngineInputActionsOverride.UIActions.Cancel
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Cancel
        path: ''
        startLine: 10121
      syntax:
        content:
          CSharp: public readonly InputAction Cancel { get; }
          VB: Public ReadOnly Property Cancel As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.UIActions.Cancel*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.UIActions.Point
      commentId: P:Global.TopDownEngineInputActionsOverride.UIActions.Point
      language: CSharp
      name:
        CSharp: Point
        VB: Point
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.UIActions.Point
        VB: TopDownEngineInputActionsOverride.UIActions.Point
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.UIActions.Point
        VB: TopDownEngineInputActionsOverride.UIActions.Point
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Point
        path: ''
        startLine: 10122
      syntax:
        content:
          CSharp: public readonly InputAction Point { get; }
          VB: Public ReadOnly Property Point As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.UIActions.Point*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.UIActions.Click
      commentId: P:Global.TopDownEngineInputActionsOverride.UIActions.Click
      language: CSharp
      name:
        CSharp: Click
        VB: Click
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.UIActions.Click
        VB: TopDownEngineInputActionsOverride.UIActions.Click
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.UIActions.Click
        VB: TopDownEngineInputActionsOverride.UIActions.Click
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Click
        path: ''
        startLine: 10123
      syntax:
        content:
          CSharp: public readonly InputAction Click { get; }
          VB: Public ReadOnly Property Click As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.UIActions.Click*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.UIActions.ScrollWheel
      commentId: P:Global.TopDownEngineInputActionsOverride.UIActions.ScrollWheel
      language: CSharp
      name:
        CSharp: ScrollWheel
        VB: ScrollWheel
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.UIActions.ScrollWheel
        VB: TopDownEngineInputActionsOverride.UIActions.ScrollWheel
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.UIActions.ScrollWheel
        VB: TopDownEngineInputActionsOverride.UIActions.ScrollWheel
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ScrollWheel
        path: ''
        startLine: 10124
      syntax:
        content:
          CSharp: public readonly InputAction ScrollWheel { get; }
          VB: Public ReadOnly Property ScrollWheel As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.UIActions.ScrollWheel*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.UIActions.MiddleClick
      commentId: P:Global.TopDownEngineInputActionsOverride.UIActions.MiddleClick
      language: CSharp
      name:
        CSharp: MiddleClick
        VB: MiddleClick
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.UIActions.MiddleClick
        VB: TopDownEngineInputActionsOverride.UIActions.MiddleClick
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.UIActions.MiddleClick
        VB: TopDownEngineInputActionsOverride.UIActions.MiddleClick
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: MiddleClick
        path: ''
        startLine: 10125
      syntax:
        content:
          CSharp: public readonly InputAction MiddleClick { get; }
          VB: Public ReadOnly Property MiddleClick As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.UIActions.MiddleClick*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.UIActions.RightClick
      commentId: P:Global.TopDownEngineInputActionsOverride.UIActions.RightClick
      language: CSharp
      name:
        CSharp: RightClick
        VB: RightClick
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.UIActions.RightClick
        VB: TopDownEngineInputActionsOverride.UIActions.RightClick
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.UIActions.RightClick
        VB: TopDownEngineInputActionsOverride.UIActions.RightClick
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: RightClick
        path: ''
        startLine: 10126
      syntax:
        content:
          CSharp: public readonly InputAction RightClick { get; }
          VB: Public ReadOnly Property RightClick As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.UIActions.RightClick*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.UIActions.TrackedDevicePosition
      commentId: P:Global.TopDownEngineInputActionsOverride.UIActions.TrackedDevicePosition
      language: CSharp
      name:
        CSharp: TrackedDevicePosition
        VB: TrackedDevicePosition
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.UIActions.TrackedDevicePosition
        VB: TopDownEngineInputActionsOverride.UIActions.TrackedDevicePosition
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.UIActions.TrackedDevicePosition
        VB: TopDownEngineInputActionsOverride.UIActions.TrackedDevicePosition
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: TrackedDevicePosition
        path: ''
        startLine: 10127
      syntax:
        content:
          CSharp: public readonly InputAction TrackedDevicePosition { get; }
          VB: Public ReadOnly Property TrackedDevicePosition As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.UIActions.TrackedDevicePosition*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.UIActions.TrackedDeviceOrientation
      commentId: P:Global.TopDownEngineInputActionsOverride.UIActions.TrackedDeviceOrientation
      language: CSharp
      name:
        CSharp: TrackedDeviceOrientation
        VB: TrackedDeviceOrientation
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.UIActions.TrackedDeviceOrientation
        VB: TopDownEngineInputActionsOverride.UIActions.TrackedDeviceOrientation
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.UIActions.TrackedDeviceOrientation
        VB: TopDownEngineInputActionsOverride.UIActions.TrackedDeviceOrientation
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: TrackedDeviceOrientation
        path: ''
        startLine: 10128
      syntax:
        content:
          CSharp: public readonly InputAction TrackedDeviceOrientation { get; }
          VB: Public ReadOnly Property TrackedDeviceOrientation As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.UIActions.TrackedDeviceOrientation*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.UIActions.ToggleMenuPanel
      commentId: P:Global.TopDownEngineInputActionsOverride.UIActions.ToggleMenuPanel
      language: CSharp
      name:
        CSharp: ToggleMenuPanel
        VB: ToggleMenuPanel
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.UIActions.ToggleMenuPanel
        VB: TopDownEngineInputActionsOverride.UIActions.ToggleMenuPanel
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.UIActions.ToggleMenuPanel
        VB: TopDownEngineInputActionsOverride.UIActions.ToggleMenuPanel
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ToggleMenuPanel
        path: ''
        startLine: 10129
      syntax:
        content:
          CSharp: public readonly InputAction ToggleMenuPanel { get; }
          VB: Public ReadOnly Property ToggleMenuPanel As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.UIActions.ToggleMenuPanel*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.UIActions.Pause
      commentId: P:Global.TopDownEngineInputActionsOverride.UIActions.Pause
      language: CSharp
      name:
        CSharp: Pause
        VB: Pause
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.UIActions.Pause
        VB: TopDownEngineInputActionsOverride.UIActions.Pause
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.UIActions.Pause
        VB: TopDownEngineInputActionsOverride.UIActions.Pause
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Pause
        path: ''
        startLine: 10130
      syntax:
        content:
          CSharp: public readonly InputAction Pause { get; }
          VB: Public ReadOnly Property Pause As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.UIActions.Pause*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.UIActions.Next
      commentId: P:Global.TopDownEngineInputActionsOverride.UIActions.Next
      language: CSharp
      name:
        CSharp: Next
        VB: Next
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.UIActions.Next
        VB: TopDownEngineInputActionsOverride.UIActions.Next
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.UIActions.Next
        VB: TopDownEngineInputActionsOverride.UIActions.Next
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Next
        path: ''
        startLine: 10131
      syntax:
        content:
          CSharp: public readonly InputAction Next { get; }
          VB: Public ReadOnly Property Next As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.UIActions.Next*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.UIActions.Previous
      commentId: P:Global.TopDownEngineInputActionsOverride.UIActions.Previous
      language: CSharp
      name:
        CSharp: Previous
        VB: Previous
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.UIActions.Previous
        VB: TopDownEngineInputActionsOverride.UIActions.Previous
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.UIActions.Previous
        VB: TopDownEngineInputActionsOverride.UIActions.Previous
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Previous
        path: ''
        startLine: 10132
      syntax:
        content:
          CSharp: public readonly InputAction Previous { get; }
          VB: Public ReadOnly Property Previous As InputAction
        parameters: []
        return:
          type: Global.InputAction
      overload: Global.TopDownEngineInputActionsOverride.UIActions.Previous*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.UIActions.Get
      commentId: M:Global.TopDownEngineInputActionsOverride.UIActions.Get
      language: CSharp
      name:
        CSharp: Get()
        VB: Get()
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.UIActions.Get()
        VB: TopDownEngineInputActionsOverride.UIActions.Get()
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.UIActions.Get()
        VB: TopDownEngineInputActionsOverride.UIActions.Get()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Get
        path: ''
        startLine: 10133
      syntax:
        content:
          CSharp: public InputActionMap Get()
          VB: Public Function Get As InputActionMap
        return:
          type: Global.InputActionMap
      overload: Global.TopDownEngineInputActionsOverride.UIActions.Get*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TopDownEngineInputActionsOverride.UIActions.Enable
      commentId: M:Global.TopDownEngineInputActionsOverride.UIActions.Enable
      language: CSharp
      name:
        CSharp: Enable()
        VB: Enable()
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.UIActions.Enable()
        VB: TopDownEngineInputActionsOverride.UIActions.Enable()
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.UIActions.Enable()
        VB: TopDownEngineInputActionsOverride.UIActions.Enable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Enable
        path: ''
        startLine: 10134
      syntax:
        content:
          CSharp: public void Enable()
          VB: Public Sub Enable
      overload: Global.TopDownEngineInputActionsOverride.UIActions.Enable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TopDownEngineInputActionsOverride.UIActions.Disable
      commentId: M:Global.TopDownEngineInputActionsOverride.UIActions.Disable
      language: CSharp
      name:
        CSharp: Disable()
        VB: Disable()
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.UIActions.Disable()
        VB: TopDownEngineInputActionsOverride.UIActions.Disable()
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.UIActions.Disable()
        VB: TopDownEngineInputActionsOverride.UIActions.Disable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Disable
        path: ''
        startLine: 10135
      syntax:
        content:
          CSharp: public void Disable()
          VB: Public Sub Disable
      overload: Global.TopDownEngineInputActionsOverride.UIActions.Disable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TopDownEngineInputActionsOverride.UIActions.enabled
      commentId: P:Global.TopDownEngineInputActionsOverride.UIActions.enabled
      language: CSharp
      name:
        CSharp: enabled
        VB: enabled
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.UIActions.enabled
        VB: TopDownEngineInputActionsOverride.UIActions.enabled
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.UIActions.enabled
        VB: TopDownEngineInputActionsOverride.UIActions.enabled
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: enabled
        path: ''
        startLine: 10136
      syntax:
        content:
          CSharp: public readonly bool enabled { get; }
          VB: Public ReadOnly Property enabled As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Global.TopDownEngineInputActionsOverride.UIActions.enabled*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TopDownEngineInputActionsOverride.UIActions.op_Implicit(TopDownEngineInputActionsOverride.UIActions)~InputActionMap
      commentId: M:Global.TopDownEngineInputActionsOverride.UIActions.op_Implicit(TopDownEngineInputActionsOverride.UIActions)~InputActionMap
      language: CSharp
      name:
        CSharp: Implicit(TopDownEngineInputActionsOverride.UIActions to InputActionMap)
        VB: Widening(TopDownEngineInputActionsOverride.UIActions to InputActionMap)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.UIActions.Implicit(TopDownEngineInputActionsOverride.UIActions to InputActionMap)
        VB: TopDownEngineInputActionsOverride.UIActions.Widening(TopDownEngineInputActionsOverride.UIActions to InputActionMap)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.UIActions.Implicit(TopDownEngineInputActionsOverride.UIActions to InputActionMap)
        VB: TopDownEngineInputActionsOverride.UIActions.Widening(TopDownEngineInputActionsOverride.UIActions to InputActionMap)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: op_Implicit
        path: ''
        startLine: 10137
      syntax:
        content:
          CSharp: public static implicit operator InputActionMap(TopDownEngineInputActionsOverride.UIActions set)
          VB: Public Shared Widening Operator CType(set As TopDownEngineInputActionsOverride.UIActions) As InputActionMap
        parameters:
        - id: set
          type: Global.TopDownEngineInputActionsOverride.UIActions
        return:
          type: Global.InputActionMap
      overload: Global.TopDownEngineInputActionsOverride.UIActions.op_Implicit*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.TopDownEngineInputActionsOverride.UIActions.SetCallbacks(TopDownEngineInputActionsOverride.IUIActions)
      commentId: M:Global.TopDownEngineInputActionsOverride.UIActions.SetCallbacks(TopDownEngineInputActionsOverride.IUIActions)
      language: CSharp
      name:
        CSharp: SetCallbacks(TopDownEngineInputActionsOverride.IUIActions)
        VB: SetCallbacks(TopDownEngineInputActionsOverride.IUIActions)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.UIActions.SetCallbacks(TopDownEngineInputActionsOverride.IUIActions)
        VB: TopDownEngineInputActionsOverride.UIActions.SetCallbacks(TopDownEngineInputActionsOverride.IUIActions)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.UIActions.SetCallbacks(TopDownEngineInputActionsOverride.IUIActions)
        VB: TopDownEngineInputActionsOverride.UIActions.SetCallbacks(TopDownEngineInputActionsOverride.IUIActions)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetCallbacks
        path: ''
        startLine: 10138
      syntax:
        content:
          CSharp: public void SetCallbacks(TopDownEngineInputActionsOverride.IUIActions instance)
          VB: Public Sub SetCallbacks(instance As TopDownEngineInputActionsOverride.IUIActions)
        parameters:
        - id: instance
          type: Global.TopDownEngineInputActionsOverride.IUIActions
      overload: Global.TopDownEngineInputActionsOverride.UIActions.SetCallbacks*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions
    commentId: T:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions
    language: CSharp
    name:
      CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions
      VB: TopDownEngineInputActionsOverride.IPlayerControlsActions
    nameWithType:
      CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions
      VB: TopDownEngineInputActionsOverride.IPlayerControlsActions
    qualifiedName:
      CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions
      VB: TopDownEngineInputActionsOverride.IPlayerControlsActions
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: IPlayerControlsActions
      path: ''
      startLine: 10252
    syntax:
      content:
        CSharp: public interface IPlayerControlsActions
        VB: Public Interface IPlayerControlsActions
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnPrimaryMovement(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnPrimaryMovement(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnPrimaryMovement(InputAction.CallbackContext)
        VB: OnPrimaryMovement(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnPrimaryMovement(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnPrimaryMovement(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnPrimaryMovement(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnPrimaryMovement(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnPrimaryMovement
        path: ''
        startLine: 10254
      syntax:
        content:
          CSharp: void OnPrimaryMovement(InputAction.CallbackContext context)
          VB: Sub OnPrimaryMovement(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnPrimaryMovement*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSecondaryMovement(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSecondaryMovement(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnSecondaryMovement(InputAction.CallbackContext)
        VB: OnSecondaryMovement(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSecondaryMovement(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSecondaryMovement(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSecondaryMovement(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSecondaryMovement(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnSecondaryMovement
        path: ''
        startLine: 10255
      syntax:
        content:
          CSharp: void OnSecondaryMovement(InputAction.CallbackContext context)
          VB: Sub OnSecondaryMovement(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSecondaryMovement*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnJump(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnJump(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnJump(InputAction.CallbackContext)
        VB: OnJump(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnJump(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnJump(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnJump(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnJump(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnJump
        path: ''
        startLine: 10256
      syntax:
        content:
          CSharp: void OnJump(InputAction.CallbackContext context)
          VB: Sub OnJump(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnJump*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnRun(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnRun(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnRun(InputAction.CallbackContext)
        VB: OnRun(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnRun(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnRun(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnRun(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnRun(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnRun
        path: ''
        startLine: 10257
      syntax:
        content:
          CSharp: void OnRun(InputAction.CallbackContext context)
          VB: Sub OnRun(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnRun*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnDash(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnDash(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnDash(InputAction.CallbackContext)
        VB: OnDash(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnDash(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnDash(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnDash(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnDash(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnDash
        path: ''
        startLine: 10258
      syntax:
        content:
          CSharp: void OnDash(InputAction.CallbackContext context)
          VB: Sub OnDash(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnDash*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCrouch(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCrouch(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnCrouch(InputAction.CallbackContext)
        VB: OnCrouch(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCrouch(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCrouch(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCrouch(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCrouch(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnCrouch
        path: ''
        startLine: 10259
      syntax:
        content:
          CSharp: void OnCrouch(InputAction.CallbackContext context)
          VB: Sub OnCrouch(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCrouch*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnAim(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnAim(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnAim(InputAction.CallbackContext)
        VB: OnAim(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnAim(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnAim(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnAim(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnAim(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnAim
        path: ''
        startLine: 10260
      syntax:
        content:
          CSharp: void OnAim(InputAction.CallbackContext context)
          VB: Sub OnAim(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnAim*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnShoot(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnShoot(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnShoot(InputAction.CallbackContext)
        VB: OnShoot(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnShoot(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnShoot(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnShoot(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnShoot(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnShoot
        path: ''
        startLine: 10261
      syntax:
        content:
          CSharp: void OnShoot(InputAction.CallbackContext context)
          VB: Sub OnShoot(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnShoot*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSecondaryShoot(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSecondaryShoot(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnSecondaryShoot(InputAction.CallbackContext)
        VB: OnSecondaryShoot(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSecondaryShoot(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSecondaryShoot(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSecondaryShoot(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSecondaryShoot(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnSecondaryShoot
        path: ''
        startLine: 10262
      syntax:
        content:
          CSharp: void OnSecondaryShoot(InputAction.CallbackContext context)
          VB: Sub OnSecondaryShoot(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSecondaryShoot*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnInteract(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnInteract(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnInteract(InputAction.CallbackContext)
        VB: OnInteract(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnInteract(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnInteract(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnInteract(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnInteract(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnInteract
        path: ''
        startLine: 10263
      syntax:
        content:
          CSharp: void OnInteract(InputAction.CallbackContext context)
          VB: Sub OnInteract(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnInteract*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnReload(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnReload(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnReload(InputAction.CallbackContext)
        VB: OnReload(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnReload(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnReload(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnReload(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnReload(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnReload
        path: ''
        startLine: 10264
      syntax:
        content:
          CSharp: void OnReload(InputAction.CallbackContext context)
          VB: Sub OnReload(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnReload*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSwitchWeapon(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSwitchWeapon(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnSwitchWeapon(InputAction.CallbackContext)
        VB: OnSwitchWeapon(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSwitchWeapon(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSwitchWeapon(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSwitchWeapon(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSwitchWeapon(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnSwitchWeapon
        path: ''
        startLine: 10265
      syntax:
        content:
          CSharp: void OnSwitchWeapon(InputAction.CallbackContext context)
          VB: Sub OnSwitchWeapon(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSwitchWeapon*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSwitchCharacter(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSwitchCharacter(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnSwitchCharacter(InputAction.CallbackContext)
        VB: OnSwitchCharacter(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSwitchCharacter(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSwitchCharacter(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSwitchCharacter(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSwitchCharacter(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnSwitchCharacter
        path: ''
        startLine: 10266
      syntax:
        content:
          CSharp: void OnSwitchCharacter(InputAction.CallbackContext context)
          VB: Sub OnSwitchCharacter(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSwitchCharacter*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnTimeControl(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnTimeControl(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnTimeControl(InputAction.CallbackContext)
        VB: OnTimeControl(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnTimeControl(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnTimeControl(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnTimeControl(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnTimeControl(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnTimeControl
        path: ''
        startLine: 10267
      syntax:
        content:
          CSharp: void OnTimeControl(InputAction.CallbackContext context)
          VB: Sub OnTimeControl(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnTimeControl*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraInputActive(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraInputActive(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnCameraInputActive(InputAction.CallbackContext)
        VB: OnCameraInputActive(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraInputActive(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraInputActive(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraInputActive(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraInputActive(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnCameraInputActive
        path: ''
        startLine: 10268
      syntax:
        content:
          CSharp: void OnCameraInputActive(InputAction.CallbackContext context)
          VB: Sub OnCameraInputActive(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraInputActive*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraMove(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraMove(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnCameraMove(InputAction.CallbackContext)
        VB: OnCameraMove(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraMove(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraMove(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraMove(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraMove(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnCameraMove
        path: ''
        startLine: 10269
      syntax:
        content:
          CSharp: void OnCameraMove(InputAction.CallbackContext context)
          VB: Sub OnCameraMove(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraMove*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraScale(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraScale(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnCameraScale(InputAction.CallbackContext)
        VB: OnCameraScale(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraScale(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraScale(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraScale(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraScale(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnCameraScale
        path: ''
        startLine: 10270
      syntax:
        content:
          CSharp: void OnCameraScale(InputAction.CallbackContext context)
          VB: Sub OnCameraScale(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraScale*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnThrow(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnThrow(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnThrow(InputAction.CallbackContext)
        VB: OnThrow(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnThrow(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnThrow(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnThrow(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnThrow(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnThrow
        path: ''
        startLine: 10271
      syntax:
        content:
          CSharp: void OnThrow(InputAction.CallbackContext context)
          VB: Sub OnThrow(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnThrow*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnMousePosition(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnMousePosition(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnMousePosition(InputAction.CallbackContext)
        VB: OnMousePosition(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnMousePosition(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnMousePosition(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnMousePosition(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnMousePosition(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnMousePosition
        path: ''
        startLine: 10272
      syntax:
        content:
          CSharp: void OnMousePosition(InputAction.CallbackContext context)
          VB: Sub OnMousePosition(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnMousePosition*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFirstItem(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFirstItem(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnEquipFirstItem(InputAction.CallbackContext)
        VB: OnEquipFirstItem(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFirstItem(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFirstItem(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFirstItem(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFirstItem(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnEquipFirstItem
        path: ''
        startLine: 10273
      syntax:
        content:
          CSharp: void OnEquipFirstItem(InputAction.CallbackContext context)
          VB: Sub OnEquipFirstItem(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFirstItem*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSecondItem(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSecondItem(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnEquipSecondItem(InputAction.CallbackContext)
        VB: OnEquipSecondItem(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSecondItem(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSecondItem(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSecondItem(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSecondItem(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnEquipSecondItem
        path: ''
        startLine: 10274
      syntax:
        content:
          CSharp: void OnEquipSecondItem(InputAction.CallbackContext context)
          VB: Sub OnEquipSecondItem(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSecondItem*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipThirdItem(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipThirdItem(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnEquipThirdItem(InputAction.CallbackContext)
        VB: OnEquipThirdItem(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipThirdItem(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipThirdItem(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipThirdItem(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipThirdItem(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnEquipThirdItem
        path: ''
        startLine: 10275
      syntax:
        content:
          CSharp: void OnEquipThirdItem(InputAction.CallbackContext context)
          VB: Sub OnEquipThirdItem(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipThirdItem*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFourthItem(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFourthItem(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnEquipFourthItem(InputAction.CallbackContext)
        VB: OnEquipFourthItem(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFourthItem(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFourthItem(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFourthItem(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFourthItem(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnEquipFourthItem
        path: ''
        startLine: 10276
      syntax:
        content:
          CSharp: void OnEquipFourthItem(InputAction.CallbackContext context)
          VB: Sub OnEquipFourthItem(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFourthItem*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFifthItem(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFifthItem(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnEquipFifthItem(InputAction.CallbackContext)
        VB: OnEquipFifthItem(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFifthItem(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFifthItem(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFifthItem(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFifthItem(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnEquipFifthItem
        path: ''
        startLine: 10277
      syntax:
        content:
          CSharp: void OnEquipFifthItem(InputAction.CallbackContext context)
          VB: Sub OnEquipFifthItem(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFifthItem*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSixthItem(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSixthItem(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnEquipSixthItem(InputAction.CallbackContext)
        VB: OnEquipSixthItem(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSixthItem(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSixthItem(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSixthItem(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSixthItem(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnEquipSixthItem
        path: ''
        startLine: 10278
      syntax:
        content:
          CSharp: void OnEquipSixthItem(InputAction.CallbackContext context)
          VB: Sub OnEquipSixthItem(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSixthItem*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSeventhItem(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSeventhItem(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnEquipSeventhItem(InputAction.CallbackContext)
        VB: OnEquipSeventhItem(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSeventhItem(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSeventhItem(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSeventhItem(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSeventhItem(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnEquipSeventhItem
        path: ''
        startLine: 10279
      syntax:
        content:
          CSharp: void OnEquipSeventhItem(InputAction.CallbackContext context)
          VB: Sub OnEquipSeventhItem(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSeventhItem*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipEighthItem(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipEighthItem(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnEquipEighthItem(InputAction.CallbackContext)
        VB: OnEquipEighthItem(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipEighthItem(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipEighthItem(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipEighthItem(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipEighthItem(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnEquipEighthItem
        path: ''
        startLine: 10280
      syntax:
        content:
          CSharp: void OnEquipEighthItem(InputAction.CallbackContext context)
          VB: Sub OnEquipEighthItem(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipEighthItem*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipNinthItem(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipNinthItem(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnEquipNinthItem(InputAction.CallbackContext)
        VB: OnEquipNinthItem(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipNinthItem(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipNinthItem(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipNinthItem(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipNinthItem(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnEquipNinthItem
        path: ''
        startLine: 10281
      syntax:
        content:
          CSharp: void OnEquipNinthItem(InputAction.CallbackContext context)
          VB: Sub OnEquipNinthItem(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipNinthItem*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipNextItem(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipNextItem(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnEquipNextItem(InputAction.CallbackContext)
        VB: OnEquipNextItem(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipNextItem(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipNextItem(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipNextItem(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipNextItem(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnEquipNextItem
        path: ''
        startLine: 10282
      syntax:
        content:
          CSharp: void OnEquipNextItem(InputAction.CallbackContext context)
          VB: Sub OnEquipNextItem(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipNextItem*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipTenthItem(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipTenthItem(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnEquipTenthItem(InputAction.CallbackContext)
        VB: OnEquipTenthItem(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipTenthItem(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipTenthItem(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipTenthItem(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipTenthItem(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnEquipTenthItem
        path: ''
        startLine: 10283
      syntax:
        content:
          CSharp: void OnEquipTenthItem(InputAction.CallbackContext context)
          VB: Sub OnEquipTenthItem(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipTenthItem*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipPreviousItem(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipPreviousItem(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnEquipPreviousItem(InputAction.CallbackContext)
        VB: OnEquipPreviousItem(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipPreviousItem(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipPreviousItem(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipPreviousItem(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipPreviousItem(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnEquipPreviousItem
        path: ''
        startLine: 10284
      syntax:
        content:
          CSharp: void OnEquipPreviousItem(InputAction.CallbackContext context)
          VB: Sub OnEquipPreviousItem(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipPreviousItem*
      modifiers:
        CSharp: []
        VB: []
  - id: Global.TopDownEngineInputActionsOverride.IUIActions
    commentId: T:Global.TopDownEngineInputActionsOverride.IUIActions
    language: CSharp
    name:
      CSharp: TopDownEngineInputActionsOverride.IUIActions
      VB: TopDownEngineInputActionsOverride.IUIActions
    nameWithType:
      CSharp: TopDownEngineInputActionsOverride.IUIActions
      VB: TopDownEngineInputActionsOverride.IUIActions
    qualifiedName:
      CSharp: TopDownEngineInputActionsOverride.IUIActions
      VB: TopDownEngineInputActionsOverride.IUIActions
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: IUIActions
      path: ''
      startLine: 10286
    syntax:
      content:
        CSharp: public interface IUIActions
        VB: Public Interface IUIActions
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnNavigate(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IUIActions.OnNavigate(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnNavigate(InputAction.CallbackContext)
        VB: OnNavigate(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IUIActions.OnNavigate(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IUIActions.OnNavigate(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IUIActions.OnNavigate(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IUIActions.OnNavigate(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnNavigate
        path: ''
        startLine: 10288
      syntax:
        content:
          CSharp: void OnNavigate(InputAction.CallbackContext context)
          VB: Sub OnNavigate(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IUIActions.OnNavigate*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnSubmit(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IUIActions.OnSubmit(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnSubmit(InputAction.CallbackContext)
        VB: OnSubmit(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IUIActions.OnSubmit(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IUIActions.OnSubmit(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IUIActions.OnSubmit(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IUIActions.OnSubmit(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnSubmit
        path: ''
        startLine: 10289
      syntax:
        content:
          CSharp: void OnSubmit(InputAction.CallbackContext context)
          VB: Sub OnSubmit(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IUIActions.OnSubmit*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnCancel(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IUIActions.OnCancel(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnCancel(InputAction.CallbackContext)
        VB: OnCancel(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IUIActions.OnCancel(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IUIActions.OnCancel(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IUIActions.OnCancel(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IUIActions.OnCancel(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnCancel
        path: ''
        startLine: 10290
      syntax:
        content:
          CSharp: void OnCancel(InputAction.CallbackContext context)
          VB: Sub OnCancel(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IUIActions.OnCancel*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnPoint(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IUIActions.OnPoint(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnPoint(InputAction.CallbackContext)
        VB: OnPoint(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IUIActions.OnPoint(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IUIActions.OnPoint(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IUIActions.OnPoint(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IUIActions.OnPoint(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnPoint
        path: ''
        startLine: 10291
      syntax:
        content:
          CSharp: void OnPoint(InputAction.CallbackContext context)
          VB: Sub OnPoint(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IUIActions.OnPoint*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnClick(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IUIActions.OnClick(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnClick(InputAction.CallbackContext)
        VB: OnClick(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IUIActions.OnClick(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IUIActions.OnClick(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IUIActions.OnClick(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IUIActions.OnClick(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnClick
        path: ''
        startLine: 10292
      syntax:
        content:
          CSharp: void OnClick(InputAction.CallbackContext context)
          VB: Sub OnClick(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IUIActions.OnClick*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnScrollWheel(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IUIActions.OnScrollWheel(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnScrollWheel(InputAction.CallbackContext)
        VB: OnScrollWheel(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IUIActions.OnScrollWheel(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IUIActions.OnScrollWheel(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IUIActions.OnScrollWheel(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IUIActions.OnScrollWheel(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnScrollWheel
        path: ''
        startLine: 10293
      syntax:
        content:
          CSharp: void OnScrollWheel(InputAction.CallbackContext context)
          VB: Sub OnScrollWheel(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IUIActions.OnScrollWheel*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnMiddleClick(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IUIActions.OnMiddleClick(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnMiddleClick(InputAction.CallbackContext)
        VB: OnMiddleClick(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IUIActions.OnMiddleClick(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IUIActions.OnMiddleClick(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IUIActions.OnMiddleClick(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IUIActions.OnMiddleClick(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnMiddleClick
        path: ''
        startLine: 10294
      syntax:
        content:
          CSharp: void OnMiddleClick(InputAction.CallbackContext context)
          VB: Sub OnMiddleClick(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IUIActions.OnMiddleClick*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnRightClick(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IUIActions.OnRightClick(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnRightClick(InputAction.CallbackContext)
        VB: OnRightClick(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IUIActions.OnRightClick(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IUIActions.OnRightClick(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IUIActions.OnRightClick(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IUIActions.OnRightClick(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnRightClick
        path: ''
        startLine: 10295
      syntax:
        content:
          CSharp: void OnRightClick(InputAction.CallbackContext context)
          VB: Sub OnRightClick(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IUIActions.OnRightClick*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnTrackedDevicePosition(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IUIActions.OnTrackedDevicePosition(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnTrackedDevicePosition(InputAction.CallbackContext)
        VB: OnTrackedDevicePosition(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IUIActions.OnTrackedDevicePosition(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IUIActions.OnTrackedDevicePosition(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IUIActions.OnTrackedDevicePosition(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IUIActions.OnTrackedDevicePosition(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnTrackedDevicePosition
        path: ''
        startLine: 10296
      syntax:
        content:
          CSharp: void OnTrackedDevicePosition(InputAction.CallbackContext context)
          VB: Sub OnTrackedDevicePosition(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IUIActions.OnTrackedDevicePosition*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnTrackedDeviceOrientation(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IUIActions.OnTrackedDeviceOrientation(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnTrackedDeviceOrientation(InputAction.CallbackContext)
        VB: OnTrackedDeviceOrientation(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IUIActions.OnTrackedDeviceOrientation(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IUIActions.OnTrackedDeviceOrientation(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IUIActions.OnTrackedDeviceOrientation(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IUIActions.OnTrackedDeviceOrientation(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnTrackedDeviceOrientation
        path: ''
        startLine: 10297
      syntax:
        content:
          CSharp: void OnTrackedDeviceOrientation(InputAction.CallbackContext context)
          VB: Sub OnTrackedDeviceOrientation(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IUIActions.OnTrackedDeviceOrientation*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnToggleMenuPanel(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IUIActions.OnToggleMenuPanel(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnToggleMenuPanel(InputAction.CallbackContext)
        VB: OnToggleMenuPanel(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IUIActions.OnToggleMenuPanel(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IUIActions.OnToggleMenuPanel(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IUIActions.OnToggleMenuPanel(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IUIActions.OnToggleMenuPanel(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnToggleMenuPanel
        path: ''
        startLine: 10298
      syntax:
        content:
          CSharp: void OnToggleMenuPanel(InputAction.CallbackContext context)
          VB: Sub OnToggleMenuPanel(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IUIActions.OnToggleMenuPanel*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnPause(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IUIActions.OnPause(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnPause(InputAction.CallbackContext)
        VB: OnPause(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IUIActions.OnPause(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IUIActions.OnPause(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IUIActions.OnPause(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IUIActions.OnPause(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnPause
        path: ''
        startLine: 10299
      syntax:
        content:
          CSharp: void OnPause(InputAction.CallbackContext context)
          VB: Sub OnPause(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IUIActions.OnPause*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnNext(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IUIActions.OnNext(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnNext(InputAction.CallbackContext)
        VB: OnNext(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IUIActions.OnNext(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IUIActions.OnNext(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IUIActions.OnNext(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IUIActions.OnNext(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnNext
        path: ''
        startLine: 10300
      syntax:
        content:
          CSharp: void OnNext(InputAction.CallbackContext context)
          VB: Sub OnNext(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IUIActions.OnNext*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnPrevious(InputAction.CallbackContext)
      commentId: M:Global.TopDownEngineInputActionsOverride.IUIActions.OnPrevious(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: OnPrevious(InputAction.CallbackContext)
        VB: OnPrevious(InputAction.CallbackContext)
      nameWithType:
        CSharp: TopDownEngineInputActionsOverride.IUIActions.OnPrevious(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IUIActions.OnPrevious(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TopDownEngineInputActionsOverride.IUIActions.OnPrevious(InputAction.CallbackContext)
        VB: TopDownEngineInputActionsOverride.IUIActions.OnPrevious(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnPrevious
        path: ''
        startLine: 10301
      syntax:
        content:
          CSharp: void OnPrevious(InputAction.CallbackContext context)
          VB: Sub OnPrevious(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: Global.TopDownEngineInputActionsOverride.IUIActions.OnPrevious*
      modifiers:
        CSharp: []
        VB: []
  - id: Global.GammaPostProcess
    commentId: T:Global.GammaPostProcess
    language: CSharp
    name:
      CSharp: GammaPostProcess
      VB: GammaPostProcess
    nameWithType:
      CSharp: GammaPostProcess
      VB: GammaPostProcess
    qualifiedName:
      CSharp: GammaPostProcess
      VB: GammaPostProcess
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: GammaPostProcess
      path: ''
      startLine: 10656
    syntax:
      content:
        CSharp: 'public class GammaPostProcess : MonoBehaviour'
        VB: >-
          Public Class GammaPostProcess

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.GammaPostProcess.gamma
      commentId: F:Global.GammaPostProcess.gamma
      language: CSharp
      name:
        CSharp: gamma
        VB: gamma
      nameWithType:
        CSharp: GammaPostProcess.gamma
        VB: GammaPostProcess.gamma
      qualifiedName:
        CSharp: GammaPostProcess.gamma
        VB: GammaPostProcess.gamma
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: gamma
        path: ''
        startLine: 10658
      syntax:
        content:
          CSharp: public float gamma
          VB: Public gamma As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.WeaponParamDebug
    commentId: T:Global.WeaponParamDebug
    language: CSharp
    name:
      CSharp: WeaponParamDebug
      VB: WeaponParamDebug
    nameWithType:
      CSharp: WeaponParamDebug
      VB: WeaponParamDebug
    qualifiedName:
      CSharp: WeaponParamDebug
      VB: WeaponParamDebug
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: WeaponParamDebug
      path: ''
      startLine: 10751
    syntax:
      content:
        CSharp: 'public class WeaponParamDebug : MonoBehaviour'
        VB: >-
          Public Class WeaponParamDebug

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.WeaponRecoilDisplay
    commentId: T:Global.WeaponRecoilDisplay
    language: CSharp
    name:
      CSharp: WeaponRecoilDisplay
      VB: WeaponRecoilDisplay
    nameWithType:
      CSharp: WeaponRecoilDisplay
      VB: WeaponRecoilDisplay
    qualifiedName:
      CSharp: WeaponRecoilDisplay
      VB: WeaponRecoilDisplay
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: WeaponRecoilDisplay
      path: ''
      startLine: 10841
    summary: "\n武器后坐力显示\n"
    example: []
    syntax:
      content:
        CSharp: 'public class WeaponRecoilDisplay : MonoBehaviour'
        VB: >-
          Public Class WeaponRecoilDisplay

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.TabToggleEditor
    commentId: T:Global.TabToggleEditor
    language: CSharp
    name:
      CSharp: TabToggleEditor
      VB: TabToggleEditor
    nameWithType:
      CSharp: TabToggleEditor
      VB: TabToggleEditor
    qualifiedName:
      CSharp: TabToggleEditor
      VB: TabToggleEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: TabToggleEditor
      path: ''
      startLine: 10931
    syntax:
      content:
        CSharp: 'public class TabToggleEditor : ToggleEditor'
        VB: >-
          Public Class TabToggleEditor

              Inherits ToggleEditor
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.TabToggleEditor.OnEnable
      commentId: M:Global.TabToggleEditor.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: TabToggleEditor.OnEnable()
        VB: TabToggleEditor.OnEnable()
      qualifiedName:
        CSharp: TabToggleEditor.OnEnable()
        VB: TabToggleEditor.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnEnable
        path: ''
        startLine: 10947
      syntax:
        content:
          CSharp: protected override void OnEnable()
          VB: Protected Overrides Sub OnEnable
      overload: Global.TabToggleEditor.OnEnable*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Global.TabToggleEditor.OnInspectorGUI
      commentId: M:Global.TabToggleEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: TabToggleEditor.OnInspectorGUI()
        VB: TabToggleEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: TabToggleEditor.OnInspectorGUI()
        VB: TabToggleEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 10958
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: Global.TabToggleEditor.OnInspectorGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.HUDSway
    commentId: T:Global.HUDSway
    language: CSharp
    name:
      CSharp: HUDSway
      VB: HUDSway
    nameWithType:
      CSharp: HUDSway
      VB: HUDSway
    qualifiedName:
      CSharp: HUDSway
      VB: HUDSway
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: HUDSway
      path: ''
      startLine: 10978
    syntax:
      content:
        CSharp: 'public class HUDSway : MonoBehaviour'
        VB: >-
          Public Class HUDSway

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.HUDSway.Target
      commentId: F:Global.HUDSway.Target
      language: CSharp
      name:
        CSharp: Target
        VB: Target
      nameWithType:
        CSharp: HUDSway.Target
        VB: HUDSway.Target
      qualifiedName:
        CSharp: HUDSway.Target
        VB: HUDSway.Target
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Target
        path: ''
        startLine: 10981
      syntax:
        content:
          CSharp: public Transform Target
          VB: Public Target As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.HUDSway.smooth
      commentId: F:Global.HUDSway.smooth
      language: CSharp
      name:
        CSharp: smooth
        VB: smooth
      nameWithType:
        CSharp: HUDSway.smooth
        VB: HUDSway.smooth
      qualifiedName:
        CSharp: HUDSway.smooth
        VB: HUDSway.smooth
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: smooth
        path: ''
        startLine: 10983
      syntax:
        content:
          CSharp: public float smooth
          VB: Public smooth As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.HUDSway.velocityScale
      commentId: F:Global.HUDSway.velocityScale
      language: CSharp
      name:
        CSharp: velocityScale
        VB: velocityScale
      nameWithType:
        CSharp: HUDSway.velocityScale
        VB: HUDSway.velocityScale
      qualifiedName:
        CSharp: HUDSway.velocityScale
        VB: HUDSway.velocityScale
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: velocityScale
        path: ''
        startLine: 10984
      syntax:
        content:
          CSharp: public float velocityScale
          VB: Public velocityScale As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.HUDSway.maxVelocityMagnitude
      commentId: F:Global.HUDSway.maxVelocityMagnitude
      language: CSharp
      name:
        CSharp: maxVelocityMagnitude
        VB: maxVelocityMagnitude
      nameWithType:
        CSharp: HUDSway.maxVelocityMagnitude
        VB: HUDSway.maxVelocityMagnitude
      qualifiedName:
        CSharp: HUDSway.maxVelocityMagnitude
        VB: HUDSway.maxVelocityMagnitude
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: maxVelocityMagnitude
        path: ''
        startLine: 10985
      syntax:
        content:
          CSharp: public float maxVelocityMagnitude
          VB: Public maxVelocityMagnitude As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.NumberPlaceholderAlpha
    commentId: T:Global.NumberPlaceholderAlpha
    language: CSharp
    name:
      CSharp: NumberPlaceholderAlpha
      VB: NumberPlaceholderAlpha
    nameWithType:
      CSharp: NumberPlaceholderAlpha
      VB: NumberPlaceholderAlpha
    qualifiedName:
      CSharp: NumberPlaceholderAlpha
      VB: NumberPlaceholderAlpha
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: NumberPlaceholderAlpha
      path: ''
      startLine: 11020
    syntax:
      content:
        CSharp: 'public class NumberPlaceholderAlpha : MonoBehaviour'
        VB: >-
          Public Class NumberPlaceholderAlpha

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.NumberPlaceholderAlpha.placeholderAlpha
      commentId: F:Global.NumberPlaceholderAlpha.placeholderAlpha
      language: CSharp
      name:
        CSharp: placeholderAlpha
        VB: placeholderAlpha
      nameWithType:
        CSharp: NumberPlaceholderAlpha.placeholderAlpha
        VB: NumberPlaceholderAlpha.placeholderAlpha
      qualifiedName:
        CSharp: NumberPlaceholderAlpha.placeholderAlpha
        VB: NumberPlaceholderAlpha.placeholderAlpha
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: placeholderAlpha
        path: ''
        startLine: 11028
      summary: "\n占位符透明度\n"
      example: []
      syntax:
        content:
          CSharp: public byte placeholderAlpha
          VB: Public placeholderAlpha As Byte
        return:
          type: System.Byte
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.NumberPlaceholderAlpha.notNumberAlpha
      commentId: F:Global.NumberPlaceholderAlpha.notNumberAlpha
      language: CSharp
      name:
        CSharp: notNumberAlpha
        VB: notNumberAlpha
      nameWithType:
        CSharp: NumberPlaceholderAlpha.notNumberAlpha
        VB: NumberPlaceholderAlpha.notNumberAlpha
      qualifiedName:
        CSharp: NumberPlaceholderAlpha.notNumberAlpha
        VB: NumberPlaceholderAlpha.notNumberAlpha
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: notNumberAlpha
        path: ''
        startLine: 11034
      summary: "\n非数字透明度\n"
      example: []
      syntax:
        content:
          CSharp: public byte notNumberAlpha
          VB: Public notNumberAlpha As Byte
        return:
          type: System.Byte
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.NumberPlaceholderAlpha.multiNumber
      commentId: F:Global.NumberPlaceholderAlpha.multiNumber
      language: CSharp
      name:
        CSharp: multiNumber
        VB: multiNumber
      nameWithType:
        CSharp: NumberPlaceholderAlpha.multiNumber
        VB: NumberPlaceholderAlpha.multiNumber
      qualifiedName:
        CSharp: NumberPlaceholderAlpha.multiNumber
        VB: NumberPlaceholderAlpha.multiNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: multiNumber
        path: ''
        startLine: 11039
      summary: "\n是否包含多串数字\n"
      example: []
      syntax:
        content:
          CSharp: public bool multiNumber
          VB: Public multiNumber As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.NumberPlaceholderAlpha.ChangePlaceholderAlpha(TMP_TextInfo,System.Boolean,System.Byte,System.Byte)
      commentId: M:Global.NumberPlaceholderAlpha.ChangePlaceholderAlpha(TMP_TextInfo,System.Boolean,System.Byte,System.Byte)
      language: CSharp
      name:
        CSharp: ChangePlaceholderAlpha(TMP_TextInfo, Boolean, Byte, Byte)
        VB: ChangePlaceholderAlpha(TMP_TextInfo, Boolean, Byte, Byte)
      nameWithType:
        CSharp: NumberPlaceholderAlpha.ChangePlaceholderAlpha(TMP_TextInfo, Boolean, Byte, Byte)
        VB: NumberPlaceholderAlpha.ChangePlaceholderAlpha(TMP_TextInfo, Boolean, Byte, Byte)
      qualifiedName:
        CSharp: NumberPlaceholderAlpha.ChangePlaceholderAlpha(TMP_TextInfo, System.Boolean, System.Byte, System.Byte)
        VB: NumberPlaceholderAlpha.ChangePlaceholderAlpha(TMP_TextInfo, System.Boolean, System.Byte, System.Byte)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ChangePlaceholderAlpha
        path: ''
        startLine: 11067
      summary: "\n改变TMP Text占位符的alpha\n"
      example: []
      syntax:
        content:
          CSharp: public static void ChangePlaceholderAlpha(TMP_TextInfo textInfo, bool multiNumber, byte placeholderAlpha, byte notNumberAlpha)
          VB: Public Shared Sub ChangePlaceholderAlpha(textInfo As TMP_TextInfo, multiNumber As Boolean, placeholderAlpha As Byte, notNumberAlpha As Byte)
        parameters:
        - id: textInfo
          type: Global.TMP_TextInfo
          description: TMP Text
        - id: multiNumber
          type: System.Boolean
          description: 是否包含多串数字
        - id: placeholderAlpha
          type: System.Byte
          description: 占位符的alpha(0-255)
        - id: notNumberAlpha
          type: System.Byte
          description: 非数字的alpha(0-255)
      overload: Global.NumberPlaceholderAlpha.ChangePlaceholderAlpha*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Global.SelectTextColor
    commentId: T:Global.SelectTextColor
    language: CSharp
    name:
      CSharp: SelectTextColor
      VB: SelectTextColor
    nameWithType:
      CSharp: SelectTextColor
      VB: SelectTextColor
    qualifiedName:
      CSharp: SelectTextColor
      VB: SelectTextColor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: SelectTextColor
      path: ''
      startLine: 11143
    syntax:
      content:
        CSharp: 'public class SelectTextColor : MonoBehaviour'
        VB: >-
          Public Class SelectTextColor

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.SelectTextColor.SetTextColor(System.Boolean)
      commentId: M:Global.SelectTextColor.SetTextColor(System.Boolean)
      language: CSharp
      name:
        CSharp: SetTextColor(Boolean)
        VB: SetTextColor(Boolean)
      nameWithType:
        CSharp: SelectTextColor.SetTextColor(Boolean)
        VB: SelectTextColor.SetTextColor(Boolean)
      qualifiedName:
        CSharp: SelectTextColor.SetTextColor(System.Boolean)
        VB: SelectTextColor.SetTextColor(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetTextColor
        path: ''
        startLine: 11174
      summary: "\n����Text��ɫ\n"
      example: []
      syntax:
        content:
          CSharp: public void SetTextColor(bool select)
          VB: Public Sub SetTextColor(select As Boolean)
        parameters:
        - id: select
          type: System.Boolean
          description: �Ƿ�ѡ��
      overload: Global.SelectTextColor.SetTextColor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.ToggleTextColor
    commentId: T:Global.ToggleTextColor
    language: CSharp
    name:
      CSharp: ToggleTextColor
      VB: ToggleTextColor
    nameWithType:
      CSharp: ToggleTextColor
      VB: ToggleTextColor
    qualifiedName:
      CSharp: ToggleTextColor
      VB: ToggleTextColor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ToggleTextColor
      path: ''
      startLine: 11193
    syntax:
      content:
        CSharp: 'public class ToggleTextColor : MonoBehaviour'
        VB: >-
          Public Class ToggleTextColor

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ToggleTextColor.SetTextColor(System.Boolean)
      commentId: M:Global.ToggleTextColor.SetTextColor(System.Boolean)
      language: CSharp
      name:
        CSharp: SetTextColor(Boolean)
        VB: SetTextColor(Boolean)
      nameWithType:
        CSharp: ToggleTextColor.SetTextColor(Boolean)
        VB: ToggleTextColor.SetTextColor(Boolean)
      qualifiedName:
        CSharp: ToggleTextColor.SetTextColor(System.Boolean)
        VB: ToggleTextColor.SetTextColor(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetTextColor
        path: ''
        startLine: 11224
      summary: "\n设置Text颜色\n"
      example: []
      syntax:
        content:
          CSharp: public void SetTextColor(bool on)
          VB: Public Sub SetTextColor(on As Boolean)
        parameters:
        - id: on
          type: System.Boolean
          description: 是否开启
      overload: Global.ToggleTextColor.SetTextColor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.BodyStatusDisplay
    commentId: T:Global.BodyStatusDisplay
    language: CSharp
    name:
      CSharp: BodyStatusDisplay
      VB: BodyStatusDisplay
    nameWithType:
      CSharp: BodyStatusDisplay
      VB: BodyStatusDisplay
    qualifiedName:
      CSharp: BodyStatusDisplay
      VB: BodyStatusDisplay
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BodyStatusDisplay
      path: ''
      startLine: 11246
    summary: "\n玩家身体状态显示\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BodyStatusDisplay : MonoBehaviour'
        VB: >-
          Public Class BodyStatusDisplay

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.BodyStatusDisplay.PlayerID
      commentId: P:Global.BodyStatusDisplay.PlayerID
      language: CSharp
      name:
        CSharp: PlayerID
        VB: PlayerID
      nameWithType:
        CSharp: BodyStatusDisplay.PlayerID
        VB: BodyStatusDisplay.PlayerID
      qualifiedName:
        CSharp: BodyStatusDisplay.PlayerID
        VB: BodyStatusDisplay.PlayerID
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PlayerID
        path: ''
        startLine: 11266
      syntax:
        content:
          CSharp: public string PlayerID { get; }
          VB: Public ReadOnly Property PlayerID As String
        parameters: []
        return:
          type: System.String
      overload: Global.BodyStatusDisplay.PlayerID*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.BodyStatusDisplay.HealthBar
      commentId: P:Global.BodyStatusDisplay.HealthBar
      language: CSharp
      name:
        CSharp: HealthBar
        VB: HealthBar
      nameWithType:
        CSharp: BodyStatusDisplay.HealthBar
        VB: BodyStatusDisplay.HealthBar
      qualifiedName:
        CSharp: BodyStatusDisplay.HealthBar
        VB: BodyStatusDisplay.HealthBar
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: HealthBar
        path: ''
        startLine: 11267
      syntax:
        content:
          CSharp: public MMProgressBar HealthBar { get; }
          VB: Public ReadOnly Property HealthBar As MMProgressBar
        parameters: []
        return:
          type: Global.MMProgressBar
      overload: Global.BodyStatusDisplay.HealthBar*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.BodyStatusDisplay.Awake
      commentId: M:Global.BodyStatusDisplay.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: BodyStatusDisplay.Awake()
        VB: BodyStatusDisplay.Awake()
      qualifiedName:
        CSharp: BodyStatusDisplay.Awake()
        VB: BodyStatusDisplay.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Awake
        path: ''
        startLine: 11269
      syntax:
        content:
          CSharp: protected virtual void Awake()
          VB: Protected Overridable Sub Awake
      overload: Global.BodyStatusDisplay.Awake*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: Global.BodyStatusDisplay.Initialization
      commentId: M:Global.BodyStatusDisplay.Initialization
      language: CSharp
      name:
        CSharp: Initialization()
        VB: Initialization()
      nameWithType:
        CSharp: BodyStatusDisplay.Initialization()
        VB: BodyStatusDisplay.Initialization()
      qualifiedName:
        CSharp: BodyStatusDisplay.Initialization()
        VB: BodyStatusDisplay.Initialization()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Initialization
        path: ''
        startLine: 11274
      syntax:
        content:
          CSharp: public virtual void Initialization()
          VB: Public Overridable Sub Initialization
      overload: Global.BodyStatusDisplay.Initialization*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Global.BodyStatusDisplay.UpdateHealthBar(System.Single,System.Single,System.Single,System.String)
      commentId: M:Global.BodyStatusDisplay.UpdateHealthBar(System.Single,System.Single,System.Single,System.String)
      language: CSharp
      name:
        CSharp: UpdateHealthBar(Single, Single, Single, String)
        VB: UpdateHealthBar(Single, Single, Single, String)
      nameWithType:
        CSharp: BodyStatusDisplay.UpdateHealthBar(Single, Single, Single, String)
        VB: BodyStatusDisplay.UpdateHealthBar(Single, Single, Single, String)
      qualifiedName:
        CSharp: BodyStatusDisplay.UpdateHealthBar(System.Single, System.Single, System.Single, System.String)
        VB: BodyStatusDisplay.UpdateHealthBar(System.Single, System.Single, System.Single, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UpdateHealthBar
        path: ''
        startLine: 11286
      summary: "\nUpdates the health bar.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void UpdateHealthBar(float currentHealth, float minHealth, float maxHealth, string playerID)
          VB: Public Overridable Sub UpdateHealthBar(currentHealth As Single, minHealth As Single, maxHealth As Single, playerID As String)
        parameters:
        - id: currentHealth
          type: System.Single
          description: Current health.
        - id: minHealth
          type: System.Single
          description: Minimum health.
        - id: maxHealth
          type: System.Single
          description: Max health.
        - id: playerID
          type: System.String
          description: Player I.
      overload: Global.BodyStatusDisplay.UpdateHealthBar*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: Global.GameplayPanel
    commentId: T:Global.GameplayPanel
    language: CSharp
    name:
      CSharp: GameplayPanel
      VB: GameplayPanel
    nameWithType:
      CSharp: GameplayPanel
      VB: GameplayPanel
    qualifiedName:
      CSharp: GameplayPanel
      VB: GameplayPanel
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: GameplayPanel
      path: ''
      startLine: 11303
    syntax:
      content:
        CSharp: 'public class GameplayPanel : DisplayPanel'
        VB: >-
          Public Class GameplayPanel

              Inherits DisplayPanel
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.GameplayPanel.SetWeaponDisplays(System.Boolean,System.String,System.Int32)
      commentId: M:Global.GameplayPanel.SetWeaponDisplays(System.Boolean,System.String,System.Int32)
      language: CSharp
      name:
        CSharp: SetWeaponDisplays(Boolean, String, Int32)
        VB: SetWeaponDisplays(Boolean, String, Int32)
      nameWithType:
        CSharp: GameplayPanel.SetWeaponDisplays(Boolean, String, Int32)
        VB: GameplayPanel.SetWeaponDisplays(Boolean, String, Int32)
      qualifiedName:
        CSharp: GameplayPanel.SetWeaponDisplays(System.Boolean, System.String, System.Int32)
        VB: GameplayPanel.SetWeaponDisplays(System.Boolean, System.String, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetWeaponDisplays
        path: ''
        startLine: 11317
      summary: "\nSets the weapon displays active or not\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void SetWeaponDisplays(bool state, string playerID, int weaponDisplayID)
          VB: Public Overridable Sub SetWeaponDisplays(state As Boolean, playerID As String, weaponDisplayID As Integer)
        parameters:
        - id: state
          type: System.Boolean
          description: If set to <code>true</code> state.
        - id: playerID
          type: System.String
          description: Player I.
        - id: weaponDisplayID
          type: System.Int32
      overload: Global.GameplayPanel.SetWeaponDisplays*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Global.GameplayPanel.UpdateHealthBar(System.Single,System.Single,System.Single,System.String)
      commentId: M:Global.GameplayPanel.UpdateHealthBar(System.Single,System.Single,System.Single,System.String)
      language: CSharp
      name:
        CSharp: UpdateHealthBar(Single, Single, Single, String)
        VB: UpdateHealthBar(Single, Single, Single, String)
      nameWithType:
        CSharp: GameplayPanel.UpdateHealthBar(Single, Single, Single, String)
        VB: GameplayPanel.UpdateHealthBar(Single, Single, Single, String)
      qualifiedName:
        CSharp: GameplayPanel.UpdateHealthBar(System.Single, System.Single, System.Single, System.String)
        VB: GameplayPanel.UpdateHealthBar(System.Single, System.Single, System.Single, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UpdateHealthBar
        path: ''
        startLine: 11335
      summary: "\nUpdates the health bar.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void UpdateHealthBar(float currentHealth, float minHealth, float maxHealth, string playerID)
          VB: Public Overridable Sub UpdateHealthBar(currentHealth As Single, minHealth As Single, maxHealth As Single, playerID As String)
        parameters:
        - id: currentHealth
          type: System.Single
          description: Current health.
        - id: minHealth
          type: System.Single
          description: Minimum health.
        - id: maxHealth
          type: System.Single
          description: Max health.
        - id: playerID
          type: System.String
          description: Player I.
      overload: Global.GameplayPanel.UpdateHealthBar*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Global.GameplayPanel.UpdateAmmoDisplays(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.String,System.Int32)
      commentId: M:Global.GameplayPanel.UpdateAmmoDisplays(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.String,System.Int32)
      language: CSharp
      name:
        CSharp: UpdateAmmoDisplays(Boolean, Int32, Int32, Int32, Int32, Single, String, Int32)
        VB: UpdateAmmoDisplays(Boolean, Int32, Int32, Int32, Int32, Single, String, Int32)
      nameWithType:
        CSharp: GameplayPanel.UpdateAmmoDisplays(Boolean, Int32, Int32, Int32, Int32, Single, String, Int32)
        VB: GameplayPanel.UpdateAmmoDisplays(Boolean, Int32, Int32, Int32, Int32, Single, String, Int32)
      qualifiedName:
        CSharp: GameplayPanel.UpdateAmmoDisplays(System.Boolean, System.Int32, System.Int32, System.Int32, System.Int32, System.Single, System.String, System.Int32)
        VB: GameplayPanel.UpdateAmmoDisplays(System.Boolean, System.Int32, System.Int32, System.Int32, System.Int32, System.Single, System.String, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UpdateAmmoDisplays
        path: ''
        startLine: 11357
      summary: "\nUpdates the (optional) ammo displays.\n"
      example: []
      syntax:
        content:
          CSharp: public void UpdateAmmoDisplays(bool magazineBased, int totalAmmo, int maxAmmo, int ammoInMagazine, int magazineSize, float CD, string playerID, int weaponDisplayID)
          VB: Public Sub UpdateAmmoDisplays(magazineBased As Boolean, totalAmmo As Integer, maxAmmo As Integer, ammoInMagazine As Integer, magazineSize As Integer, CD As Single, playerID As String, weaponDisplayID As Integer)
        parameters:
        - id: magazineBased
          type: System.Boolean
          description: If set to <code>true</code> magazine based.
        - id: totalAmmo
          type: System.Int32
          description: Total ammo.
        - id: maxAmmo
          type: System.Int32
          description: Max ammo.
        - id: ammoInMagazine
          type: System.Int32
          description: Ammo in magazine.
        - id: magazineSize
          type: System.Int32
          description: Magazine size.
        - id: CD
          type: System.Single
          description: update CD
        - id: playerID
          type: System.String
          description: Player I.
        - id: weaponDisplayID
          type: System.Int32
          description: WeaponDisplay ID
      overload: Global.GameplayPanel.UpdateAmmoDisplays*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.GameplayPanel.UpdateWeaponIcons(Sprite,Sprite,Weapon.TriggerModes,System.String,System.Int32)
      commentId: M:Global.GameplayPanel.UpdateWeaponIcons(Sprite,Sprite,Weapon.TriggerModes,System.String,System.Int32)
      language: CSharp
      name:
        CSharp: UpdateWeaponIcons(Sprite, Sprite, Weapon.TriggerModes, String, Int32)
        VB: UpdateWeaponIcons(Sprite, Sprite, Weapon.TriggerModes, String, Int32)
      nameWithType:
        CSharp: GameplayPanel.UpdateWeaponIcons(Sprite, Sprite, Weapon.TriggerModes, String, Int32)
        VB: GameplayPanel.UpdateWeaponIcons(Sprite, Sprite, Weapon.TriggerModes, String, Int32)
      qualifiedName:
        CSharp: GameplayPanel.UpdateWeaponIcons(Sprite, Sprite, Weapon.TriggerModes, System.String, System.Int32)
        VB: GameplayPanel.UpdateWeaponIcons(Sprite, Sprite, Weapon.TriggerModes, System.String, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UpdateWeaponIcons
        path: ''
        startLine: 11375
      summary: "\n更新武器UI图片\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void UpdateWeaponIcons(Sprite weaponIcon, Sprite ammoTypeIcon, Weapon.TriggerModes weaponTriggerMode, string playerID, int weaponDisplayID)
          VB: Public Overridable Sub UpdateWeaponIcons(weaponIcon As Sprite, ammoTypeIcon As Sprite, weaponTriggerMode As Weapon.TriggerModes, playerID As String, weaponDisplayID As Integer)
        parameters:
        - id: weaponIcon
          type: Global.Sprite
          description: 武器图标
        - id: ammoTypeIcon
          type: Global.Sprite
          description: 弹药类型图标
        - id: weaponTriggerMode
          type: Global.Weapon.TriggerModes
          description: 武器射击模式
        - id: playerID
          type: System.String
          description: 玩家ID
        - id: weaponDisplayID
          type: System.Int32
          description: 武器UI ID
      overload: Global.GameplayPanel.UpdateWeaponIcons*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: Global.WeaponDisplay
    commentId: T:Global.WeaponDisplay
    language: CSharp
    name:
      CSharp: WeaponDisplay
      VB: WeaponDisplay
    nameWithType:
      CSharp: WeaponDisplay
      VB: WeaponDisplay
    qualifiedName:
      CSharp: WeaponDisplay
      VB: WeaponDisplay
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: WeaponDisplay
      path: ''
      startLine: 11398
    summary: "\n武器数据显示\n"
    example: []
    syntax:
      content:
        CSharp: 'public class WeaponDisplay : MonoBehaviour'
        VB: >-
          Public Class WeaponDisplay

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.WeaponDisplay._totalAmmoLastTime
      commentId: F:Global.WeaponDisplay._totalAmmoLastTime
      language: CSharp
      name:
        CSharp: _totalAmmoLastTime
        VB: _totalAmmoLastTime
      nameWithType:
        CSharp: WeaponDisplay._totalAmmoLastTime
        VB: WeaponDisplay._totalAmmoLastTime
      qualifiedName:
        CSharp: WeaponDisplay._totalAmmoLastTime
        VB: WeaponDisplay._totalAmmoLastTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: _totalAmmoLastTime
        path: ''
        startLine: 11461
      syntax:
        content:
          CSharp: protected int _totalAmmoLastTime
          VB: Protected _totalAmmoLastTime As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.WeaponDisplay._maxAmmoLastTime
      commentId: F:Global.WeaponDisplay._maxAmmoLastTime
      language: CSharp
      name:
        CSharp: _maxAmmoLastTime
        VB: _maxAmmoLastTime
      nameWithType:
        CSharp: WeaponDisplay._maxAmmoLastTime
        VB: WeaponDisplay._maxAmmoLastTime
      qualifiedName:
        CSharp: WeaponDisplay._maxAmmoLastTime
        VB: WeaponDisplay._maxAmmoLastTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: _maxAmmoLastTime
        path: ''
        startLine: 11461
      syntax:
        content:
          CSharp: protected int _maxAmmoLastTime
          VB: Protected _maxAmmoLastTime As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.WeaponDisplay._ammoInMagazineLastTime
      commentId: F:Global.WeaponDisplay._ammoInMagazineLastTime
      language: CSharp
      name:
        CSharp: _ammoInMagazineLastTime
        VB: _ammoInMagazineLastTime
      nameWithType:
        CSharp: WeaponDisplay._ammoInMagazineLastTime
        VB: WeaponDisplay._ammoInMagazineLastTime
      qualifiedName:
        CSharp: WeaponDisplay._ammoInMagazineLastTime
        VB: WeaponDisplay._ammoInMagazineLastTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: _ammoInMagazineLastTime
        path: ''
        startLine: 11461
      syntax:
        content:
          CSharp: protected int _ammoInMagazineLastTime
          VB: Protected _ammoInMagazineLastTime As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.WeaponDisplay._magazineSizeLastTime
      commentId: F:Global.WeaponDisplay._magazineSizeLastTime
      language: CSharp
      name:
        CSharp: _magazineSizeLastTime
        VB: _magazineSizeLastTime
      nameWithType:
        CSharp: WeaponDisplay._magazineSizeLastTime
        VB: WeaponDisplay._magazineSizeLastTime
      qualifiedName:
        CSharp: WeaponDisplay._magazineSizeLastTime
        VB: WeaponDisplay._magazineSizeLastTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: _magazineSizeLastTime
        path: ''
        startLine: 11461
      syntax:
        content:
          CSharp: protected int _magazineSizeLastTime
          VB: Protected _magazineSizeLastTime As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.WeaponDisplay.WeaponDisplayID
      commentId: P:Global.WeaponDisplay.WeaponDisplayID
      language: CSharp
      name:
        CSharp: WeaponDisplayID
        VB: WeaponDisplayID
      nameWithType:
        CSharp: WeaponDisplay.WeaponDisplayID
        VB: WeaponDisplay.WeaponDisplayID
      qualifiedName:
        CSharp: WeaponDisplay.WeaponDisplayID
        VB: WeaponDisplay.WeaponDisplayID
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: WeaponDisplayID
        path: ''
        startLine: 11463
      syntax:
        content:
          CSharp: public int WeaponDisplayID { get; }
          VB: Public ReadOnly Property WeaponDisplayID As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Global.WeaponDisplay.WeaponDisplayID*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.WeaponDisplay.PlayerID
      commentId: P:Global.WeaponDisplay.PlayerID
      language: CSharp
      name:
        CSharp: PlayerID
        VB: PlayerID
      nameWithType:
        CSharp: WeaponDisplay.PlayerID
        VB: WeaponDisplay.PlayerID
      qualifiedName:
        CSharp: WeaponDisplay.PlayerID
        VB: WeaponDisplay.PlayerID
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PlayerID
        path: ''
        startLine: 11464
      syntax:
        content:
          CSharp: public string PlayerID { get; }
          VB: Public ReadOnly Property PlayerID As String
        parameters: []
        return:
          type: System.String
      overload: Global.WeaponDisplay.PlayerID*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.WeaponDisplay.Awake
      commentId: M:Global.WeaponDisplay.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: WeaponDisplay.Awake()
        VB: WeaponDisplay.Awake()
      qualifiedName:
        CSharp: WeaponDisplay.Awake()
        VB: WeaponDisplay.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Awake
        path: ''
        startLine: 11466
      syntax:
        content:
          CSharp: protected virtual void Awake()
          VB: Protected Overridable Sub Awake
      overload: Global.WeaponDisplay.Awake*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: Global.WeaponDisplay.Initialization
      commentId: M:Global.WeaponDisplay.Initialization
      language: CSharp
      name:
        CSharp: Initialization()
        VB: Initialization()
      nameWithType:
        CSharp: WeaponDisplay.Initialization()
        VB: WeaponDisplay.Initialization()
      qualifiedName:
        CSharp: WeaponDisplay.Initialization()
        VB: WeaponDisplay.Initialization()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Initialization
        path: ''
        startLine: 11471
      syntax:
        content:
          CSharp: public virtual void Initialization()
          VB: Public Overridable Sub Initialization
      overload: Global.WeaponDisplay.Initialization*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Global.WeaponDisplay.UpdateTextDisplay(System.String,System.String)
      commentId: M:Global.WeaponDisplay.UpdateTextDisplay(System.String,System.String)
      language: CSharp
      name:
        CSharp: UpdateTextDisplay(String, String)
        VB: UpdateTextDisplay(String, String)
      nameWithType:
        CSharp: WeaponDisplay.UpdateTextDisplay(String, String)
        VB: WeaponDisplay.UpdateTextDisplay(String, String)
      qualifiedName:
        CSharp: WeaponDisplay.UpdateTextDisplay(System.String, System.String)
        VB: WeaponDisplay.UpdateTextDisplay(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UpdateTextDisplay
        path: ''
        startLine: 11480
      summary: "\nUpdates the text display with the parameter string\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void UpdateTextDisplay(string currentAmmoNewText, string totalAmmoNewText)
          VB: Public Overridable Sub UpdateTextDisplay(currentAmmoNewText As String, totalAmmoNewText As String)
        parameters:
        - id: currentAmmoNewText
          type: System.String
        - id: totalAmmoNewText
          type: System.String
      overload: Global.WeaponDisplay.UpdateTextDisplay*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Global.WeaponDisplay.UpdateAmmoDisplays(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Single)
      commentId: M:Global.WeaponDisplay.UpdateAmmoDisplays(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Single)
      language: CSharp
      name:
        CSharp: UpdateAmmoDisplays(Boolean, Int32, Int32, Int32, Int32, Single)
        VB: UpdateAmmoDisplays(Boolean, Int32, Int32, Int32, Int32, Single)
      nameWithType:
        CSharp: WeaponDisplay.UpdateAmmoDisplays(Boolean, Int32, Int32, Int32, Int32, Single)
        VB: WeaponDisplay.UpdateAmmoDisplays(Boolean, Int32, Int32, Int32, Int32, Single)
      qualifiedName:
        CSharp: WeaponDisplay.UpdateAmmoDisplays(System.Boolean, System.Int32, System.Int32, System.Int32, System.Int32, System.Single)
        VB: WeaponDisplay.UpdateAmmoDisplays(System.Boolean, System.Int32, System.Int32, System.Int32, System.Int32, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UpdateAmmoDisplays
        path: ''
        startLine: 11501
      summary: "\nUpdates the ammo display&apos;s text and progress bar\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void UpdateAmmoDisplays(bool magazineBased, int totalAmmo, int maxAmmo, int ammoInMagazine, int magazineSize, float CD)
          VB: Public Overridable Sub UpdateAmmoDisplays(magazineBased As Boolean, totalAmmo As Integer, maxAmmo As Integer, ammoInMagazine As Integer, magazineSize As Integer, CD As Single)
        parameters:
        - id: magazineBased
          type: System.Boolean
          description: If set to <code>true</code> magazine based.
        - id: totalAmmo
          type: System.Int32
          description: Total ammo.
        - id: maxAmmo
          type: System.Int32
          description: Max ammo.
        - id: ammoInMagazine
          type: System.Int32
          description: Ammo in magazine.
        - id: magazineSize
          type: System.Int32
          description: Magazine size.
        - id: CD
          type: System.Single
          description: update CD
      overload: Global.WeaponDisplay.UpdateAmmoDisplays*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Global.WeaponDisplay.SetWeaponImage(Sprite)
      commentId: M:Global.WeaponDisplay.SetWeaponImage(Sprite)
      language: CSharp
      name:
        CSharp: SetWeaponImage(Sprite)
        VB: SetWeaponImage(Sprite)
      nameWithType:
        CSharp: WeaponDisplay.SetWeaponImage(Sprite)
        VB: WeaponDisplay.SetWeaponImage(Sprite)
      qualifiedName:
        CSharp: WeaponDisplay.SetWeaponImage(Sprite)
        VB: WeaponDisplay.SetWeaponImage(Sprite)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetWeaponImage
        path: ''
        startLine: 11548
      summary: "\n设置武器图标\n"
      example: []
      syntax:
        content:
          CSharp: public void SetWeaponImage(Sprite icon)
          VB: Public Sub SetWeaponImage(icon As Sprite)
        parameters:
        - id: icon
          type: Global.Sprite
          description: 武器图标
      overload: Global.WeaponDisplay.SetWeaponImage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WeaponDisplay.SetAmmoTypeImage(Sprite)
      commentId: M:Global.WeaponDisplay.SetAmmoTypeImage(Sprite)
      language: CSharp
      name:
        CSharp: SetAmmoTypeImage(Sprite)
        VB: SetAmmoTypeImage(Sprite)
      nameWithType:
        CSharp: WeaponDisplay.SetAmmoTypeImage(Sprite)
        VB: WeaponDisplay.SetAmmoTypeImage(Sprite)
      qualifiedName:
        CSharp: WeaponDisplay.SetAmmoTypeImage(Sprite)
        VB: WeaponDisplay.SetAmmoTypeImage(Sprite)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetAmmoTypeImage
        path: ''
        startLine: 11558
      summary: "\n设置弹药类型图标\n"
      example: []
      syntax:
        content:
          CSharp: public void SetAmmoTypeImage(Sprite icon)
          VB: Public Sub SetAmmoTypeImage(icon As Sprite)
        parameters:
        - id: icon
          type: Global.Sprite
          description: 弹药类型图标
      overload: Global.WeaponDisplay.SetAmmoTypeImage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WeaponDisplay.SetWeaponTriggerModeImage(Weapon.TriggerModes)
      commentId: M:Global.WeaponDisplay.SetWeaponTriggerModeImage(Weapon.TriggerModes)
      language: CSharp
      name:
        CSharp: SetWeaponTriggerModeImage(Weapon.TriggerModes)
        VB: SetWeaponTriggerModeImage(Weapon.TriggerModes)
      nameWithType:
        CSharp: WeaponDisplay.SetWeaponTriggerModeImage(Weapon.TriggerModes)
        VB: WeaponDisplay.SetWeaponTriggerModeImage(Weapon.TriggerModes)
      qualifiedName:
        CSharp: WeaponDisplay.SetWeaponTriggerModeImage(Weapon.TriggerModes)
        VB: WeaponDisplay.SetWeaponTriggerModeImage(Weapon.TriggerModes)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetWeaponTriggerModeImage
        path: ''
        startLine: 11568
      summary: "\n设置射击模式图标\n"
      example: []
      syntax:
        content:
          CSharp: public void SetWeaponTriggerModeImage(Weapon.TriggerModes triggerMode)
          VB: Public Sub SetWeaponTriggerModeImage(triggerMode As Weapon.TriggerModes)
        parameters:
        - id: triggerMode
          type: Global.Weapon.TriggerModes
      overload: Global.WeaponDisplay.SetWeaponTriggerModeImage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.MainMenuPanel
    commentId: T:Global.MainMenuPanel
    language: CSharp
    name:
      CSharp: MainMenuPanel
      VB: MainMenuPanel
    nameWithType:
      CSharp: MainMenuPanel
      VB: MainMenuPanel
    qualifiedName:
      CSharp: MainMenuPanel
      VB: MainMenuPanel
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: MainMenuPanel
      path: ''
      startLine: 11617
    syntax:
      content:
        CSharp: 'public class MainMenuPanel : DisplayPanel'
        VB: >-
          Public Class MainMenuPanel

              Inherits DisplayPanel
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.MainMenuPanel.Awake
      commentId: M:Global.MainMenuPanel.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: MainMenuPanel.Awake()
        VB: MainMenuPanel.Awake()
      qualifiedName:
        CSharp: MainMenuPanel.Awake()
        VB: MainMenuPanel.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Awake
        path: ''
        startLine: 11650
      syntax:
        content:
          CSharp: protected virtual void Awake()
          VB: Protected Overridable Sub Awake
      overload: Global.MainMenuPanel.Awake*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: Global.MainMenuPanel.OnEnable
      commentId: M:Global.MainMenuPanel.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: MainMenuPanel.OnEnable()
        VB: MainMenuPanel.OnEnable()
      qualifiedName:
        CSharp: MainMenuPanel.OnEnable()
        VB: MainMenuPanel.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnEnable
        path: ''
        startLine: 11655
      syntax:
        content:
          CSharp: protected virtual void OnEnable()
          VB: Protected Overridable Sub OnEnable
      overload: Global.MainMenuPanel.OnEnable*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: Global.MainMenuPanel.Initialization
      commentId: M:Global.MainMenuPanel.Initialization
      language: CSharp
      name:
        CSharp: Initialization()
        VB: Initialization()
      nameWithType:
        CSharp: MainMenuPanel.Initialization()
        VB: MainMenuPanel.Initialization()
      qualifiedName:
        CSharp: MainMenuPanel.Initialization()
        VB: MainMenuPanel.Initialization()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Initialization
        path: ''
        startLine: 11659
      syntax:
        content:
          CSharp: public virtual void Initialization()
          VB: Public Overridable Sub Initialization
      overload: Global.MainMenuPanel.Initialization*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Global.MainMenuPanel.UpdateHealthBar(System.Single,System.Single,System.Single,System.String)
      commentId: M:Global.MainMenuPanel.UpdateHealthBar(System.Single,System.Single,System.Single,System.String)
      language: CSharp
      name:
        CSharp: UpdateHealthBar(Single, Single, Single, String)
        VB: UpdateHealthBar(Single, Single, Single, String)
      nameWithType:
        CSharp: MainMenuPanel.UpdateHealthBar(Single, Single, Single, String)
        VB: MainMenuPanel.UpdateHealthBar(Single, Single, Single, String)
      qualifiedName:
        CSharp: MainMenuPanel.UpdateHealthBar(System.Single, System.Single, System.Single, System.String)
        VB: MainMenuPanel.UpdateHealthBar(System.Single, System.Single, System.Single, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UpdateHealthBar
        path: ''
        startLine: 11689
      summary: "\nUpdates the health bar.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void UpdateHealthBar(float currentHealth, float minHealth, float maxHealth, string playerID)
          VB: Public Overridable Sub UpdateHealthBar(currentHealth As Single, minHealth As Single, maxHealth As Single, playerID As String)
        parameters:
        - id: currentHealth
          type: System.Single
          description: Current health.
        - id: minHealth
          type: System.Single
          description: Minimum health.
        - id: maxHealth
          type: System.Single
          description: Max health.
        - id: playerID
          type: System.String
          description: Player I.
      overload: Global.MainMenuPanel.UpdateHealthBar*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: Global.StateOverviewPanel
    commentId: T:Global.StateOverviewPanel
    language: CSharp
    name:
      CSharp: StateOverviewPanel
      VB: StateOverviewPanel
    nameWithType:
      CSharp: StateOverviewPanel
      VB: StateOverviewPanel
    qualifiedName:
      CSharp: StateOverviewPanel
      VB: StateOverviewPanel
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: StateOverviewPanel
      path: ''
      startLine: 11707
    summary: "\n状态总览面板\n"
    example: []
    syntax:
      content:
        CSharp: 'public class StateOverviewPanel : DisplayPanel'
        VB: >-
          Public Class StateOverviewPanel

              Inherits DisplayPanel
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.StateOverviewPanel.UpdateHealthBar(System.Single,System.Single,System.Single,System.String)
      commentId: M:Global.StateOverviewPanel.UpdateHealthBar(System.Single,System.Single,System.Single,System.String)
      language: CSharp
      name:
        CSharp: UpdateHealthBar(Single, Single, Single, String)
        VB: UpdateHealthBar(Single, Single, Single, String)
      nameWithType:
        CSharp: StateOverviewPanel.UpdateHealthBar(Single, Single, Single, String)
        VB: StateOverviewPanel.UpdateHealthBar(Single, Single, Single, String)
      qualifiedName:
        CSharp: StateOverviewPanel.UpdateHealthBar(System.Single, System.Single, System.Single, System.String)
        VB: StateOverviewPanel.UpdateHealthBar(System.Single, System.Single, System.Single, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UpdateHealthBar
        path: ''
        startLine: 11720
      summary: "\nUpdates the health bar.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void UpdateHealthBar(float currentHealth, float minHealth, float maxHealth, string playerID)
          VB: Public Overridable Sub UpdateHealthBar(currentHealth As Single, minHealth As Single, maxHealth As Single, playerID As String)
        parameters:
        - id: currentHealth
          type: System.Single
          description: Current health.
        - id: minHealth
          type: System.Single
          description: Minimum health.
        - id: maxHealth
          type: System.Single
          description: Max health.
        - id: playerID
          type: System.String
          description: Player I.
      overload: Global.StateOverviewPanel.UpdateHealthBar*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: Global.ChatController
    commentId: T:Global.ChatController
    language: CSharp
    name:
      CSharp: ChatController
      VB: ChatController
    nameWithType:
      CSharp: ChatController
      VB: ChatController
    qualifiedName:
      CSharp: ChatController
      VB: ChatController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ChatController
      path: ''
      startLine: 12658
    syntax:
      content:
        CSharp: 'public class ChatController : MonoBehaviour'
        VB: >-
          Public Class ChatController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ChatController.TMP_ChatInput
      commentId: F:Global.ChatController.TMP_ChatInput
      language: CSharp
      name:
        CSharp: TMP_ChatInput
        VB: TMP_ChatInput
      nameWithType:
        CSharp: ChatController.TMP_ChatInput
        VB: ChatController.TMP_ChatInput
      qualifiedName:
        CSharp: ChatController.TMP_ChatInput
        VB: ChatController.TMP_ChatInput
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: TMP_ChatInput
        path: ''
        startLine: 12661
      syntax:
        content:
          CSharp: public TMP_InputField TMP_ChatInput
          VB: Public TMP_ChatInput As TMP_InputField
        return:
          type: Global.TMP_InputField
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChatController.TMP_ChatOutput
      commentId: F:Global.ChatController.TMP_ChatOutput
      language: CSharp
      name:
        CSharp: TMP_ChatOutput
        VB: TMP_ChatOutput
      nameWithType:
        CSharp: ChatController.TMP_ChatOutput
        VB: ChatController.TMP_ChatOutput
      qualifiedName:
        CSharp: ChatController.TMP_ChatOutput
        VB: ChatController.TMP_ChatOutput
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: TMP_ChatOutput
        path: ''
        startLine: 12663
      syntax:
        content:
          CSharp: public TMP_Text TMP_ChatOutput
          VB: Public TMP_ChatOutput As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChatController.ChatScrollbar
      commentId: F:Global.ChatController.ChatScrollbar
      language: CSharp
      name:
        CSharp: ChatScrollbar
        VB: ChatScrollbar
      nameWithType:
        CSharp: ChatController.ChatScrollbar
        VB: ChatController.ChatScrollbar
      qualifiedName:
        CSharp: ChatController.ChatScrollbar
        VB: ChatController.ChatScrollbar
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ChatScrollbar
        path: ''
        startLine: 12665
      syntax:
        content:
          CSharp: public Scrollbar ChatScrollbar
          VB: Public ChatScrollbar As Scrollbar
        return:
          type: Global.Scrollbar
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.DropdownSample
    commentId: T:Global.DropdownSample
    language: CSharp
    name:
      CSharp: DropdownSample
      VB: DropdownSample
    nameWithType:
      CSharp: DropdownSample
      VB: DropdownSample
    qualifiedName:
      CSharp: DropdownSample
      VB: DropdownSample
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: DropdownSample
      path: ''
      startLine: 12701
    syntax:
      content:
        CSharp: 'public class DropdownSample : MonoBehaviour'
        VB: >-
          Public Class DropdownSample

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.DropdownSample.OnButtonClick
      commentId: M:Global.DropdownSample.OnButtonClick
      language: CSharp
      name:
        CSharp: OnButtonClick()
        VB: OnButtonClick()
      nameWithType:
        CSharp: DropdownSample.OnButtonClick()
        VB: DropdownSample.OnButtonClick()
      qualifiedName:
        CSharp: DropdownSample.OnButtonClick()
        VB: DropdownSample.OnButtonClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnButtonClick
        path: ''
        startLine: 12712
      syntax:
        content:
          CSharp: public void OnButtonClick()
          VB: Public Sub OnButtonClick
      overload: Global.DropdownSample.OnButtonClick*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.EnvMapAnimator
    commentId: T:Global.EnvMapAnimator
    language: CSharp
    name:
      CSharp: EnvMapAnimator
      VB: EnvMapAnimator
    nameWithType:
      CSharp: EnvMapAnimator
      VB: EnvMapAnimator
    qualifiedName:
      CSharp: EnvMapAnimator
      VB: EnvMapAnimator
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: EnvMapAnimator
      path: ''
      startLine: 12722
    syntax:
      content:
        CSharp: 'public class EnvMapAnimator : MonoBehaviour'
        VB: >-
          Public Class EnvMapAnimator

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.EnvMapAnimator.RotationSpeeds
      commentId: F:Global.EnvMapAnimator.RotationSpeeds
      language: CSharp
      name:
        CSharp: RotationSpeeds
        VB: RotationSpeeds
      nameWithType:
        CSharp: EnvMapAnimator.RotationSpeeds
        VB: EnvMapAnimator.RotationSpeeds
      qualifiedName:
        CSharp: EnvMapAnimator.RotationSpeeds
        VB: EnvMapAnimator.RotationSpeeds
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: RotationSpeeds
        path: ''
        startLine: 12725
      syntax:
        content:
          CSharp: public Vector3 RotationSpeeds
          VB: Public RotationSpeeds As Vector3
        return:
          type: Global.Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
references:
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  Global.Texture2D:
    name:
      CSharp:
      - id: Global.Texture2D
        name: Texture2D
        nameWithType: Texture2D
        qualifiedName: Texture2D
        isExternal: true
      VB:
      - id: Global.Texture2D
        name: Texture2D
        nameWithType: Texture2D
        qualifiedName: Texture2D
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Texture2D'
  Global.CameraControl_45:
    name:
      CSharp:
      - id: Global.CameraControl_45
        name: CameraControl_45
        nameWithType: CameraControl_45
        qualifiedName: CameraControl_45
      VB:
      - id: Global.CameraControl_45
        name: CameraControl_45
        nameWithType: CameraControl_45
        qualifiedName: CameraControl_45
    isDefinition: true
    commentId: T:Global.CameraControl_45
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  Global.GameConstant:
    name:
      CSharp:
      - id: Global.GameConstant
        name: GameConstant
        nameWithType: GameConstant
        qualifiedName: GameConstant
      VB:
      - id: Global.GameConstant
        name: GameConstant
        nameWithType: GameConstant
        qualifiedName: GameConstant
    isDefinition: true
    commentId: T:Global.GameConstant
  Global.IDisposable:
    name:
      CSharp:
      - id: Global.IDisposable
        name: IDisposable
        nameWithType: IDisposable
        qualifiedName: IDisposable
        isExternal: true
      VB:
      - id: Global.IDisposable
        name: IDisposable
        nameWithType: IDisposable
        qualifiedName: IDisposable
        isExternal: true
    isDefinition: true
  Global.InputActionAsset:
    name:
      CSharp:
      - id: Global.InputActionAsset
        name: InputActionAsset
        nameWithType: InputActionAsset
        qualifiedName: InputActionAsset
        isExternal: true
      VB:
      - id: Global.InputActionAsset
        name: InputActionAsset
        nameWithType: InputActionAsset
        qualifiedName: InputActionAsset
        isExternal: true
    isDefinition: true
  Global.InputMaster.asset*:
    name:
      CSharp:
      - id: Global.InputMaster.asset*
        name: asset
        nameWithType: InputMaster.asset
        qualifiedName: InputMaster.asset
      VB:
      - id: Global.InputMaster.asset*
        name: asset
        nameWithType: InputMaster.asset
        qualifiedName: InputMaster.asset
    isDefinition: true
    commentId: Overload:Global.InputMaster.asset
  Global.InputMaster.#ctor*:
    name:
      CSharp:
      - id: Global.InputMaster.#ctor*
        name: InputMaster
        nameWithType: InputMaster.InputMaster
        qualifiedName: InputMaster.InputMaster
      VB:
      - id: Global.InputMaster.#ctor*
        name: InputMaster
        nameWithType: InputMaster.InputMaster
        qualifiedName: InputMaster.InputMaster
    isDefinition: true
    commentId: Overload:Global.InputMaster.#ctor
  Global.InputMaster.Dispose*:
    name:
      CSharp:
      - id: Global.InputMaster.Dispose*
        name: Dispose
        nameWithType: InputMaster.Dispose
        qualifiedName: InputMaster.Dispose
      VB:
      - id: Global.InputMaster.Dispose*
        name: Dispose
        nameWithType: InputMaster.Dispose
        qualifiedName: InputMaster.Dispose
    isDefinition: true
    commentId: Overload:Global.InputMaster.Dispose
  System.Nullable`1:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Nullable`1
  System.Nullable{InputBinding}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.InputBinding
        name: InputBinding
        nameWithType: InputBinding
        qualifiedName: InputBinding
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.InputBinding
        name: InputBinding
        nameWithType: InputBinding
        qualifiedName: InputBinding
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{InputBinding}
  Global.InputMaster.bindingMask*:
    name:
      CSharp:
      - id: Global.InputMaster.bindingMask*
        name: bindingMask
        nameWithType: InputMaster.bindingMask
        qualifiedName: InputMaster.bindingMask
      VB:
      - id: Global.InputMaster.bindingMask*
        name: bindingMask
        nameWithType: InputMaster.bindingMask
        qualifiedName: InputMaster.bindingMask
    isDefinition: true
    commentId: Overload:Global.InputMaster.bindingMask
  System.Nullable{ReadOnlyArray{InputDevice}}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.ReadOnlyArray`1
        name: ReadOnlyArray
        nameWithType: ReadOnlyArray
        qualifiedName: ReadOnlyArray
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.InputDevice
        name: InputDevice
        nameWithType: InputDevice
        qualifiedName: InputDevice
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.ReadOnlyArray`1
        name: ReadOnlyArray
        nameWithType: ReadOnlyArray
        qualifiedName: ReadOnlyArray
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.InputDevice
        name: InputDevice
        nameWithType: InputDevice
        qualifiedName: InputDevice
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{ReadOnlyArray{InputDevice}}
  Global.InputMaster.devices*:
    name:
      CSharp:
      - id: Global.InputMaster.devices*
        name: devices
        nameWithType: InputMaster.devices
        qualifiedName: InputMaster.devices
      VB:
      - id: Global.InputMaster.devices*
        name: devices
        nameWithType: InputMaster.devices
        qualifiedName: InputMaster.devices
    isDefinition: true
    commentId: Overload:Global.InputMaster.devices
  Global.ReadOnlyArray`1:
    name:
      CSharp:
      - id: Global.ReadOnlyArray`1
        name: ReadOnlyArray
        nameWithType: ReadOnlyArray
        qualifiedName: ReadOnlyArray
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.ReadOnlyArray`1
        name: ReadOnlyArray
        nameWithType: ReadOnlyArray
        qualifiedName: ReadOnlyArray
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  Global.ReadOnlyArray{InputControlScheme}:
    name:
      CSharp:
      - id: Global.ReadOnlyArray`1
        name: ReadOnlyArray
        nameWithType: ReadOnlyArray
        qualifiedName: ReadOnlyArray
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.InputControlScheme
        name: InputControlScheme
        nameWithType: InputControlScheme
        qualifiedName: InputControlScheme
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.ReadOnlyArray`1
        name: ReadOnlyArray
        nameWithType: ReadOnlyArray
        qualifiedName: ReadOnlyArray
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.InputControlScheme
        name: InputControlScheme
        nameWithType: InputControlScheme
        qualifiedName: InputControlScheme
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.ReadOnlyArray`1
    commentId: '!:Global.ReadOnlyArray{InputControlScheme}'
  Global.InputMaster.controlSchemes*:
    name:
      CSharp:
      - id: Global.InputMaster.controlSchemes*
        name: controlSchemes
        nameWithType: InputMaster.controlSchemes
        qualifiedName: InputMaster.controlSchemes
      VB:
      - id: Global.InputMaster.controlSchemes*
        name: controlSchemes
        nameWithType: InputMaster.controlSchemes
        qualifiedName: InputMaster.controlSchemes
    isDefinition: true
    commentId: Overload:Global.InputMaster.controlSchemes
  Global.InputAction:
    name:
      CSharp:
      - id: Global.InputAction
        name: InputAction
        nameWithType: InputAction
        qualifiedName: InputAction
        isExternal: true
      VB:
      - id: Global.InputAction
        name: InputAction
        nameWithType: InputAction
        qualifiedName: InputAction
        isExternal: true
    isDefinition: true
  Global.InputMaster.Contains*:
    name:
      CSharp:
      - id: Global.InputMaster.Contains*
        name: Contains
        nameWithType: InputMaster.Contains
        qualifiedName: InputMaster.Contains
      VB:
      - id: Global.InputMaster.Contains*
        name: Contains
        nameWithType: InputMaster.Contains
        qualifiedName: InputMaster.Contains
    isDefinition: true
    commentId: Overload:Global.InputMaster.Contains
  System.Collections.Generic.IEnumerator`1:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.Generic.IEnumerator
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.Generic.IEnumerator
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.IEnumerator`1
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.IEnumerator{InputAction}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.Generic.IEnumerator
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.InputAction
        name: InputAction
        nameWithType: InputAction
        qualifiedName: InputAction
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.Generic.IEnumerator
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.InputAction
        name: InputAction
        nameWithType: InputAction
        qualifiedName: InputAction
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerator`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerator{InputAction}
  Global.InputMaster.GetEnumerator*:
    name:
      CSharp:
      - id: Global.InputMaster.GetEnumerator*
        name: GetEnumerator
        nameWithType: InputMaster.GetEnumerator
        qualifiedName: InputMaster.GetEnumerator
      VB:
      - id: Global.InputMaster.GetEnumerator*
        name: GetEnumerator
        nameWithType: InputMaster.GetEnumerator
        qualifiedName: InputMaster.GetEnumerator
    isDefinition: true
    commentId: Overload:Global.InputMaster.GetEnumerator
  Global.InputMaster.Enable*:
    name:
      CSharp:
      - id: Global.InputMaster.Enable*
        name: Enable
        nameWithType: InputMaster.Enable
        qualifiedName: InputMaster.Enable
      VB:
      - id: Global.InputMaster.Enable*
        name: Enable
        nameWithType: InputMaster.Enable
        qualifiedName: InputMaster.Enable
    isDefinition: true
    commentId: Overload:Global.InputMaster.Enable
  Global.InputMaster.Disable*:
    name:
      CSharp:
      - id: Global.InputMaster.Disable*
        name: Disable
        nameWithType: InputMaster.Disable
        qualifiedName: InputMaster.Disable
      VB:
      - id: Global.InputMaster.Disable*
        name: Disable
        nameWithType: InputMaster.Disable
        qualifiedName: InputMaster.Disable
    isDefinition: true
    commentId: Overload:Global.InputMaster.Disable
  System.Collections.Generic.IEnumerable`1:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.IEnumerable`1
  System.Collections.Generic.IEnumerable{InputBinding}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.InputBinding
        name: InputBinding
        nameWithType: InputBinding
        qualifiedName: InputBinding
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.InputBinding
        name: InputBinding
        nameWithType: InputBinding
        qualifiedName: InputBinding
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerable{InputBinding}
  Global.InputMaster.bindings*:
    name:
      CSharp:
      - id: Global.InputMaster.bindings*
        name: bindings
        nameWithType: InputMaster.bindings
        qualifiedName: InputMaster.bindings
      VB:
      - id: Global.InputMaster.bindings*
        name: bindings
        nameWithType: InputMaster.bindings
        qualifiedName: InputMaster.bindings
    isDefinition: true
    commentId: Overload:Global.InputMaster.bindings
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  Global.InputMaster.FindAction*:
    name:
      CSharp:
      - id: Global.InputMaster.FindAction*
        name: FindAction
        nameWithType: InputMaster.FindAction
        qualifiedName: InputMaster.FindAction
      VB:
      - id: Global.InputMaster.FindAction*
        name: FindAction
        nameWithType: InputMaster.FindAction
        qualifiedName: InputMaster.FindAction
    isDefinition: true
    commentId: Overload:Global.InputMaster.FindAction
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  Global.InputBinding:
    name:
      CSharp:
      - id: Global.InputBinding
        name: InputBinding
        nameWithType: InputBinding
        qualifiedName: InputBinding
        isExternal: true
      VB:
      - id: Global.InputBinding
        name: InputBinding
        nameWithType: InputBinding
        qualifiedName: InputBinding
        isExternal: true
    isDefinition: true
  Global.InputMaster.FindBinding*:
    name:
      CSharp:
      - id: Global.InputMaster.FindBinding*
        name: FindBinding
        nameWithType: InputMaster.FindBinding
        qualifiedName: InputMaster.FindBinding
      VB:
      - id: Global.InputMaster.FindBinding*
        name: FindBinding
        nameWithType: InputMaster.FindBinding
        qualifiedName: InputMaster.FindBinding
    isDefinition: true
    commentId: Overload:Global.InputMaster.FindBinding
  Global.InputMaster.PlayerActions:
    name:
      CSharp:
      - id: Global.InputMaster.PlayerActions
        name: InputMaster.PlayerActions
        nameWithType: InputMaster.PlayerActions
        qualifiedName: InputMaster.PlayerActions
      VB:
      - id: Global.InputMaster.PlayerActions
        name: InputMaster.PlayerActions
        nameWithType: InputMaster.PlayerActions
        qualifiedName: InputMaster.PlayerActions
    isDefinition: true
    commentId: T:Global.InputMaster.PlayerActions
  Global.InputMaster.Player*:
    name:
      CSharp:
      - id: Global.InputMaster.Player*
        name: Player
        nameWithType: InputMaster.Player
        qualifiedName: InputMaster.Player
      VB:
      - id: Global.InputMaster.Player*
        name: Player
        nameWithType: InputMaster.Player
        qualifiedName: InputMaster.Player
    isDefinition: true
    commentId: Overload:Global.InputMaster.Player
  Global.InputMaster.UIActions:
    name:
      CSharp:
      - id: Global.InputMaster.UIActions
        name: InputMaster.UIActions
        nameWithType: InputMaster.UIActions
        qualifiedName: InputMaster.UIActions
      VB:
      - id: Global.InputMaster.UIActions
        name: InputMaster.UIActions
        nameWithType: InputMaster.UIActions
        qualifiedName: InputMaster.UIActions
    isDefinition: true
    commentId: T:Global.InputMaster.UIActions
  Global.InputMaster.UI*:
    name:
      CSharp:
      - id: Global.InputMaster.UI*
        name: UI
        nameWithType: InputMaster.UI
        qualifiedName: InputMaster.UI
      VB:
      - id: Global.InputMaster.UI*
        name: UI
        nameWithType: InputMaster.UI
        qualifiedName: InputMaster.UI
    isDefinition: true
    commentId: Overload:Global.InputMaster.UI
  Global.InputControlScheme:
    name:
      CSharp:
      - id: Global.InputControlScheme
        name: InputControlScheme
        nameWithType: InputControlScheme
        qualifiedName: InputControlScheme
        isExternal: true
      VB:
      - id: Global.InputControlScheme
        name: InputControlScheme
        nameWithType: InputControlScheme
        qualifiedName: InputControlScheme
        isExternal: true
    isDefinition: true
  Global.InputMaster.KeyboardMouseScheme*:
    name:
      CSharp:
      - id: Global.InputMaster.KeyboardMouseScheme*
        name: KeyboardMouseScheme
        nameWithType: InputMaster.KeyboardMouseScheme
        qualifiedName: InputMaster.KeyboardMouseScheme
      VB:
      - id: Global.InputMaster.KeyboardMouseScheme*
        name: KeyboardMouseScheme
        nameWithType: InputMaster.KeyboardMouseScheme
        qualifiedName: InputMaster.KeyboardMouseScheme
    isDefinition: true
    commentId: Overload:Global.InputMaster.KeyboardMouseScheme
  Global.InputMaster.GamepadScheme*:
    name:
      CSharp:
      - id: Global.InputMaster.GamepadScheme*
        name: GamepadScheme
        nameWithType: InputMaster.GamepadScheme
        qualifiedName: InputMaster.GamepadScheme
      VB:
      - id: Global.InputMaster.GamepadScheme*
        name: GamepadScheme
        nameWithType: InputMaster.GamepadScheme
        qualifiedName: InputMaster.GamepadScheme
    isDefinition: true
    commentId: Overload:Global.InputMaster.GamepadScheme
  Global.InputMaster.TouchScheme*:
    name:
      CSharp:
      - id: Global.InputMaster.TouchScheme*
        name: TouchScheme
        nameWithType: InputMaster.TouchScheme
        qualifiedName: InputMaster.TouchScheme
      VB:
      - id: Global.InputMaster.TouchScheme*
        name: TouchScheme
        nameWithType: InputMaster.TouchScheme
        qualifiedName: InputMaster.TouchScheme
    isDefinition: true
    commentId: Overload:Global.InputMaster.TouchScheme
  Global.InputMaster.JoystickScheme*:
    name:
      CSharp:
      - id: Global.InputMaster.JoystickScheme*
        name: JoystickScheme
        nameWithType: InputMaster.JoystickScheme
        qualifiedName: InputMaster.JoystickScheme
      VB:
      - id: Global.InputMaster.JoystickScheme*
        name: JoystickScheme
        nameWithType: InputMaster.JoystickScheme
        qualifiedName: InputMaster.JoystickScheme
    isDefinition: true
    commentId: Overload:Global.InputMaster.JoystickScheme
  Global.InputMaster.XRScheme*:
    name:
      CSharp:
      - id: Global.InputMaster.XRScheme*
        name: XRScheme
        nameWithType: InputMaster.XRScheme
        qualifiedName: InputMaster.XRScheme
      VB:
      - id: Global.InputMaster.XRScheme*
        name: XRScheme
        nameWithType: InputMaster.XRScheme
        qualifiedName: InputMaster.XRScheme
    isDefinition: true
    commentId: Overload:Global.InputMaster.XRScheme
  Global.InputMaster:
    name:
      CSharp:
      - id: Global.InputMaster
        name: InputMaster
        nameWithType: InputMaster
        qualifiedName: InputMaster
      VB:
      - id: Global.InputMaster
        name: InputMaster
        nameWithType: InputMaster
        qualifiedName: InputMaster
    isDefinition: true
    commentId: T:Global.InputMaster
  System.ValueType:
    name:
      CSharp:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
      VB:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.ValueType
  Global.InputMaster.PlayerActions.#ctor*:
    name:
      CSharp:
      - id: Global.InputMaster.PlayerActions.#ctor*
        name: PlayerActions
        nameWithType: InputMaster.PlayerActions.PlayerActions
        qualifiedName: InputMaster.PlayerActions.PlayerActions
      VB:
      - id: Global.InputMaster.PlayerActions.#ctor*
        name: PlayerActions
        nameWithType: InputMaster.PlayerActions.PlayerActions
        qualifiedName: InputMaster.PlayerActions.PlayerActions
    isDefinition: true
    commentId: Overload:Global.InputMaster.PlayerActions.#ctor
  Global.InputMaster.PlayerActions.Move*:
    name:
      CSharp:
      - id: Global.InputMaster.PlayerActions.Move*
        name: Move
        nameWithType: InputMaster.PlayerActions.Move
        qualifiedName: InputMaster.PlayerActions.Move
      VB:
      - id: Global.InputMaster.PlayerActions.Move*
        name: Move
        nameWithType: InputMaster.PlayerActions.Move
        qualifiedName: InputMaster.PlayerActions.Move
    isDefinition: true
    commentId: Overload:Global.InputMaster.PlayerActions.Move
  Global.InputMaster.PlayerActions.Look*:
    name:
      CSharp:
      - id: Global.InputMaster.PlayerActions.Look*
        name: Look
        nameWithType: InputMaster.PlayerActions.Look
        qualifiedName: InputMaster.PlayerActions.Look
      VB:
      - id: Global.InputMaster.PlayerActions.Look*
        name: Look
        nameWithType: InputMaster.PlayerActions.Look
        qualifiedName: InputMaster.PlayerActions.Look
    isDefinition: true
    commentId: Overload:Global.InputMaster.PlayerActions.Look
  Global.InputMaster.PlayerActions.Fire*:
    name:
      CSharp:
      - id: Global.InputMaster.PlayerActions.Fire*
        name: Fire
        nameWithType: InputMaster.PlayerActions.Fire
        qualifiedName: InputMaster.PlayerActions.Fire
      VB:
      - id: Global.InputMaster.PlayerActions.Fire*
        name: Fire
        nameWithType: InputMaster.PlayerActions.Fire
        qualifiedName: InputMaster.PlayerActions.Fire
    isDefinition: true
    commentId: Overload:Global.InputMaster.PlayerActions.Fire
  Global.InputMaster.PlayerActions.Sprint*:
    name:
      CSharp:
      - id: Global.InputMaster.PlayerActions.Sprint*
        name: Sprint
        nameWithType: InputMaster.PlayerActions.Sprint
        qualifiedName: InputMaster.PlayerActions.Sprint
      VB:
      - id: Global.InputMaster.PlayerActions.Sprint*
        name: Sprint
        nameWithType: InputMaster.PlayerActions.Sprint
        qualifiedName: InputMaster.PlayerActions.Sprint
    isDefinition: true
    commentId: Overload:Global.InputMaster.PlayerActions.Sprint
  Global.InputMaster.PlayerActions.Crouch*:
    name:
      CSharp:
      - id: Global.InputMaster.PlayerActions.Crouch*
        name: Crouch
        nameWithType: InputMaster.PlayerActions.Crouch
        qualifiedName: InputMaster.PlayerActions.Crouch
      VB:
      - id: Global.InputMaster.PlayerActions.Crouch*
        name: Crouch
        nameWithType: InputMaster.PlayerActions.Crouch
        qualifiedName: InputMaster.PlayerActions.Crouch
    isDefinition: true
    commentId: Overload:Global.InputMaster.PlayerActions.Crouch
  Global.InputMaster.PlayerActions.Aim*:
    name:
      CSharp:
      - id: Global.InputMaster.PlayerActions.Aim*
        name: Aim
        nameWithType: InputMaster.PlayerActions.Aim
        qualifiedName: InputMaster.PlayerActions.Aim
      VB:
      - id: Global.InputMaster.PlayerActions.Aim*
        name: Aim
        nameWithType: InputMaster.PlayerActions.Aim
        qualifiedName: InputMaster.PlayerActions.Aim
    isDefinition: true
    commentId: Overload:Global.InputMaster.PlayerActions.Aim
  Global.InputActionMap:
    name:
      CSharp:
      - id: Global.InputActionMap
        name: InputActionMap
        nameWithType: InputActionMap
        qualifiedName: InputActionMap
        isExternal: true
      VB:
      - id: Global.InputActionMap
        name: InputActionMap
        nameWithType: InputActionMap
        qualifiedName: InputActionMap
        isExternal: true
    isDefinition: true
  Global.InputMaster.PlayerActions.Get*:
    name:
      CSharp:
      - id: Global.InputMaster.PlayerActions.Get*
        name: Get
        nameWithType: InputMaster.PlayerActions.Get
        qualifiedName: InputMaster.PlayerActions.Get
      VB:
      - id: Global.InputMaster.PlayerActions.Get*
        name: Get
        nameWithType: InputMaster.PlayerActions.Get
        qualifiedName: InputMaster.PlayerActions.Get
    isDefinition: true
    commentId: Overload:Global.InputMaster.PlayerActions.Get
  Global.InputMaster.PlayerActions.Enable*:
    name:
      CSharp:
      - id: Global.InputMaster.PlayerActions.Enable*
        name: Enable
        nameWithType: InputMaster.PlayerActions.Enable
        qualifiedName: InputMaster.PlayerActions.Enable
      VB:
      - id: Global.InputMaster.PlayerActions.Enable*
        name: Enable
        nameWithType: InputMaster.PlayerActions.Enable
        qualifiedName: InputMaster.PlayerActions.Enable
    isDefinition: true
    commentId: Overload:Global.InputMaster.PlayerActions.Enable
  Global.InputMaster.PlayerActions.Disable*:
    name:
      CSharp:
      - id: Global.InputMaster.PlayerActions.Disable*
        name: Disable
        nameWithType: InputMaster.PlayerActions.Disable
        qualifiedName: InputMaster.PlayerActions.Disable
      VB:
      - id: Global.InputMaster.PlayerActions.Disable*
        name: Disable
        nameWithType: InputMaster.PlayerActions.Disable
        qualifiedName: InputMaster.PlayerActions.Disable
    isDefinition: true
    commentId: Overload:Global.InputMaster.PlayerActions.Disable
  Global.InputMaster.PlayerActions.enabled*:
    name:
      CSharp:
      - id: Global.InputMaster.PlayerActions.enabled*
        name: enabled
        nameWithType: InputMaster.PlayerActions.enabled
        qualifiedName: InputMaster.PlayerActions.enabled
      VB:
      - id: Global.InputMaster.PlayerActions.enabled*
        name: enabled
        nameWithType: InputMaster.PlayerActions.enabled
        qualifiedName: InputMaster.PlayerActions.enabled
    isDefinition: true
    commentId: Overload:Global.InputMaster.PlayerActions.enabled
  Global.InputMaster.PlayerActions.op_Implicit*:
    name:
      CSharp:
      - id: Global.InputMaster.PlayerActions.op_Implicit*
        name: Implicit
        nameWithType: InputMaster.PlayerActions.Implicit
        qualifiedName: InputMaster.PlayerActions.Implicit
      VB:
      - id: Global.InputMaster.PlayerActions.op_Implicit*
        name: Widening
        nameWithType: InputMaster.PlayerActions.Widening
        qualifiedName: InputMaster.PlayerActions.Widening
    isDefinition: true
    commentId: Overload:Global.InputMaster.PlayerActions.op_Implicit
  Global.InputMaster.IPlayerActions:
    name:
      CSharp:
      - id: Global.InputMaster.IPlayerActions
        name: InputMaster.IPlayerActions
        nameWithType: InputMaster.IPlayerActions
        qualifiedName: InputMaster.IPlayerActions
      VB:
      - id: Global.InputMaster.IPlayerActions
        name: InputMaster.IPlayerActions
        nameWithType: InputMaster.IPlayerActions
        qualifiedName: InputMaster.IPlayerActions
    isDefinition: true
    commentId: T:Global.InputMaster.IPlayerActions
  Global.InputMaster.PlayerActions.SetCallbacks*:
    name:
      CSharp:
      - id: Global.InputMaster.PlayerActions.SetCallbacks*
        name: SetCallbacks
        nameWithType: InputMaster.PlayerActions.SetCallbacks
        qualifiedName: InputMaster.PlayerActions.SetCallbacks
      VB:
      - id: Global.InputMaster.PlayerActions.SetCallbacks*
        name: SetCallbacks
        nameWithType: InputMaster.PlayerActions.SetCallbacks
        qualifiedName: InputMaster.PlayerActions.SetCallbacks
    isDefinition: true
    commentId: Overload:Global.InputMaster.PlayerActions.SetCallbacks
  Global.InputMaster.UIActions.#ctor*:
    name:
      CSharp:
      - id: Global.InputMaster.UIActions.#ctor*
        name: UIActions
        nameWithType: InputMaster.UIActions.UIActions
        qualifiedName: InputMaster.UIActions.UIActions
      VB:
      - id: Global.InputMaster.UIActions.#ctor*
        name: UIActions
        nameWithType: InputMaster.UIActions.UIActions
        qualifiedName: InputMaster.UIActions.UIActions
    isDefinition: true
    commentId: Overload:Global.InputMaster.UIActions.#ctor
  Global.InputMaster.UIActions.Navigate*:
    name:
      CSharp:
      - id: Global.InputMaster.UIActions.Navigate*
        name: Navigate
        nameWithType: InputMaster.UIActions.Navigate
        qualifiedName: InputMaster.UIActions.Navigate
      VB:
      - id: Global.InputMaster.UIActions.Navigate*
        name: Navigate
        nameWithType: InputMaster.UIActions.Navigate
        qualifiedName: InputMaster.UIActions.Navigate
    isDefinition: true
    commentId: Overload:Global.InputMaster.UIActions.Navigate
  Global.InputMaster.UIActions.Submit*:
    name:
      CSharp:
      - id: Global.InputMaster.UIActions.Submit*
        name: Submit
        nameWithType: InputMaster.UIActions.Submit
        qualifiedName: InputMaster.UIActions.Submit
      VB:
      - id: Global.InputMaster.UIActions.Submit*
        name: Submit
        nameWithType: InputMaster.UIActions.Submit
        qualifiedName: InputMaster.UIActions.Submit
    isDefinition: true
    commentId: Overload:Global.InputMaster.UIActions.Submit
  Global.InputMaster.UIActions.Cancel*:
    name:
      CSharp:
      - id: Global.InputMaster.UIActions.Cancel*
        name: Cancel
        nameWithType: InputMaster.UIActions.Cancel
        qualifiedName: InputMaster.UIActions.Cancel
      VB:
      - id: Global.InputMaster.UIActions.Cancel*
        name: Cancel
        nameWithType: InputMaster.UIActions.Cancel
        qualifiedName: InputMaster.UIActions.Cancel
    isDefinition: true
    commentId: Overload:Global.InputMaster.UIActions.Cancel
  Global.InputMaster.UIActions.Point*:
    name:
      CSharp:
      - id: Global.InputMaster.UIActions.Point*
        name: Point
        nameWithType: InputMaster.UIActions.Point
        qualifiedName: InputMaster.UIActions.Point
      VB:
      - id: Global.InputMaster.UIActions.Point*
        name: Point
        nameWithType: InputMaster.UIActions.Point
        qualifiedName: InputMaster.UIActions.Point
    isDefinition: true
    commentId: Overload:Global.InputMaster.UIActions.Point
  Global.InputMaster.UIActions.Click*:
    name:
      CSharp:
      - id: Global.InputMaster.UIActions.Click*
        name: Click
        nameWithType: InputMaster.UIActions.Click
        qualifiedName: InputMaster.UIActions.Click
      VB:
      - id: Global.InputMaster.UIActions.Click*
        name: Click
        nameWithType: InputMaster.UIActions.Click
        qualifiedName: InputMaster.UIActions.Click
    isDefinition: true
    commentId: Overload:Global.InputMaster.UIActions.Click
  Global.InputMaster.UIActions.ScrollWheel*:
    name:
      CSharp:
      - id: Global.InputMaster.UIActions.ScrollWheel*
        name: ScrollWheel
        nameWithType: InputMaster.UIActions.ScrollWheel
        qualifiedName: InputMaster.UIActions.ScrollWheel
      VB:
      - id: Global.InputMaster.UIActions.ScrollWheel*
        name: ScrollWheel
        nameWithType: InputMaster.UIActions.ScrollWheel
        qualifiedName: InputMaster.UIActions.ScrollWheel
    isDefinition: true
    commentId: Overload:Global.InputMaster.UIActions.ScrollWheel
  Global.InputMaster.UIActions.MiddleClick*:
    name:
      CSharp:
      - id: Global.InputMaster.UIActions.MiddleClick*
        name: MiddleClick
        nameWithType: InputMaster.UIActions.MiddleClick
        qualifiedName: InputMaster.UIActions.MiddleClick
      VB:
      - id: Global.InputMaster.UIActions.MiddleClick*
        name: MiddleClick
        nameWithType: InputMaster.UIActions.MiddleClick
        qualifiedName: InputMaster.UIActions.MiddleClick
    isDefinition: true
    commentId: Overload:Global.InputMaster.UIActions.MiddleClick
  Global.InputMaster.UIActions.RightClick*:
    name:
      CSharp:
      - id: Global.InputMaster.UIActions.RightClick*
        name: RightClick
        nameWithType: InputMaster.UIActions.RightClick
        qualifiedName: InputMaster.UIActions.RightClick
      VB:
      - id: Global.InputMaster.UIActions.RightClick*
        name: RightClick
        nameWithType: InputMaster.UIActions.RightClick
        qualifiedName: InputMaster.UIActions.RightClick
    isDefinition: true
    commentId: Overload:Global.InputMaster.UIActions.RightClick
  Global.InputMaster.UIActions.TrackedDevicePosition*:
    name:
      CSharp:
      - id: Global.InputMaster.UIActions.TrackedDevicePosition*
        name: TrackedDevicePosition
        nameWithType: InputMaster.UIActions.TrackedDevicePosition
        qualifiedName: InputMaster.UIActions.TrackedDevicePosition
      VB:
      - id: Global.InputMaster.UIActions.TrackedDevicePosition*
        name: TrackedDevicePosition
        nameWithType: InputMaster.UIActions.TrackedDevicePosition
        qualifiedName: InputMaster.UIActions.TrackedDevicePosition
    isDefinition: true
    commentId: Overload:Global.InputMaster.UIActions.TrackedDevicePosition
  Global.InputMaster.UIActions.TrackedDeviceOrientation*:
    name:
      CSharp:
      - id: Global.InputMaster.UIActions.TrackedDeviceOrientation*
        name: TrackedDeviceOrientation
        nameWithType: InputMaster.UIActions.TrackedDeviceOrientation
        qualifiedName: InputMaster.UIActions.TrackedDeviceOrientation
      VB:
      - id: Global.InputMaster.UIActions.TrackedDeviceOrientation*
        name: TrackedDeviceOrientation
        nameWithType: InputMaster.UIActions.TrackedDeviceOrientation
        qualifiedName: InputMaster.UIActions.TrackedDeviceOrientation
    isDefinition: true
    commentId: Overload:Global.InputMaster.UIActions.TrackedDeviceOrientation
  Global.InputMaster.UIActions.Get*:
    name:
      CSharp:
      - id: Global.InputMaster.UIActions.Get*
        name: Get
        nameWithType: InputMaster.UIActions.Get
        qualifiedName: InputMaster.UIActions.Get
      VB:
      - id: Global.InputMaster.UIActions.Get*
        name: Get
        nameWithType: InputMaster.UIActions.Get
        qualifiedName: InputMaster.UIActions.Get
    isDefinition: true
    commentId: Overload:Global.InputMaster.UIActions.Get
  Global.InputMaster.UIActions.Enable*:
    name:
      CSharp:
      - id: Global.InputMaster.UIActions.Enable*
        name: Enable
        nameWithType: InputMaster.UIActions.Enable
        qualifiedName: InputMaster.UIActions.Enable
      VB:
      - id: Global.InputMaster.UIActions.Enable*
        name: Enable
        nameWithType: InputMaster.UIActions.Enable
        qualifiedName: InputMaster.UIActions.Enable
    isDefinition: true
    commentId: Overload:Global.InputMaster.UIActions.Enable
  Global.InputMaster.UIActions.Disable*:
    name:
      CSharp:
      - id: Global.InputMaster.UIActions.Disable*
        name: Disable
        nameWithType: InputMaster.UIActions.Disable
        qualifiedName: InputMaster.UIActions.Disable
      VB:
      - id: Global.InputMaster.UIActions.Disable*
        name: Disable
        nameWithType: InputMaster.UIActions.Disable
        qualifiedName: InputMaster.UIActions.Disable
    isDefinition: true
    commentId: Overload:Global.InputMaster.UIActions.Disable
  Global.InputMaster.UIActions.enabled*:
    name:
      CSharp:
      - id: Global.InputMaster.UIActions.enabled*
        name: enabled
        nameWithType: InputMaster.UIActions.enabled
        qualifiedName: InputMaster.UIActions.enabled
      VB:
      - id: Global.InputMaster.UIActions.enabled*
        name: enabled
        nameWithType: InputMaster.UIActions.enabled
        qualifiedName: InputMaster.UIActions.enabled
    isDefinition: true
    commentId: Overload:Global.InputMaster.UIActions.enabled
  Global.InputMaster.UIActions.op_Implicit*:
    name:
      CSharp:
      - id: Global.InputMaster.UIActions.op_Implicit*
        name: Implicit
        nameWithType: InputMaster.UIActions.Implicit
        qualifiedName: InputMaster.UIActions.Implicit
      VB:
      - id: Global.InputMaster.UIActions.op_Implicit*
        name: Widening
        nameWithType: InputMaster.UIActions.Widening
        qualifiedName: InputMaster.UIActions.Widening
    isDefinition: true
    commentId: Overload:Global.InputMaster.UIActions.op_Implicit
  Global.InputMaster.IUIActions:
    name:
      CSharp:
      - id: Global.InputMaster.IUIActions
        name: InputMaster.IUIActions
        nameWithType: InputMaster.IUIActions
        qualifiedName: InputMaster.IUIActions
      VB:
      - id: Global.InputMaster.IUIActions
        name: InputMaster.IUIActions
        nameWithType: InputMaster.IUIActions
        qualifiedName: InputMaster.IUIActions
    isDefinition: true
    commentId: T:Global.InputMaster.IUIActions
  Global.InputMaster.UIActions.SetCallbacks*:
    name:
      CSharp:
      - id: Global.InputMaster.UIActions.SetCallbacks*
        name: SetCallbacks
        nameWithType: InputMaster.UIActions.SetCallbacks
        qualifiedName: InputMaster.UIActions.SetCallbacks
      VB:
      - id: Global.InputMaster.UIActions.SetCallbacks*
        name: SetCallbacks
        nameWithType: InputMaster.UIActions.SetCallbacks
        qualifiedName: InputMaster.UIActions.SetCallbacks
    isDefinition: true
    commentId: Overload:Global.InputMaster.UIActions.SetCallbacks
  Global.InputAction.CallbackContext:
    name:
      CSharp:
      - id: Global.InputAction.CallbackContext
        name: InputAction.CallbackContext
        nameWithType: InputAction.CallbackContext
        qualifiedName: InputAction.CallbackContext
        isExternal: true
      VB:
      - id: Global.InputAction.CallbackContext
        name: InputAction.CallbackContext
        nameWithType: InputAction.CallbackContext
        qualifiedName: InputAction.CallbackContext
        isExternal: true
    isDefinition: true
  Global.InputMaster.IPlayerActions.OnMove*:
    name:
      CSharp:
      - id: Global.InputMaster.IPlayerActions.OnMove*
        name: OnMove
        nameWithType: InputMaster.IPlayerActions.OnMove
        qualifiedName: InputMaster.IPlayerActions.OnMove
      VB:
      - id: Global.InputMaster.IPlayerActions.OnMove*
        name: OnMove
        nameWithType: InputMaster.IPlayerActions.OnMove
        qualifiedName: InputMaster.IPlayerActions.OnMove
    isDefinition: true
    commentId: Overload:Global.InputMaster.IPlayerActions.OnMove
  Global.InputMaster.IPlayerActions.OnLook*:
    name:
      CSharp:
      - id: Global.InputMaster.IPlayerActions.OnLook*
        name: OnLook
        nameWithType: InputMaster.IPlayerActions.OnLook
        qualifiedName: InputMaster.IPlayerActions.OnLook
      VB:
      - id: Global.InputMaster.IPlayerActions.OnLook*
        name: OnLook
        nameWithType: InputMaster.IPlayerActions.OnLook
        qualifiedName: InputMaster.IPlayerActions.OnLook
    isDefinition: true
    commentId: Overload:Global.InputMaster.IPlayerActions.OnLook
  Global.InputMaster.IPlayerActions.OnFire*:
    name:
      CSharp:
      - id: Global.InputMaster.IPlayerActions.OnFire*
        name: OnFire
        nameWithType: InputMaster.IPlayerActions.OnFire
        qualifiedName: InputMaster.IPlayerActions.OnFire
      VB:
      - id: Global.InputMaster.IPlayerActions.OnFire*
        name: OnFire
        nameWithType: InputMaster.IPlayerActions.OnFire
        qualifiedName: InputMaster.IPlayerActions.OnFire
    isDefinition: true
    commentId: Overload:Global.InputMaster.IPlayerActions.OnFire
  Global.InputMaster.IPlayerActions.OnSprint*:
    name:
      CSharp:
      - id: Global.InputMaster.IPlayerActions.OnSprint*
        name: OnSprint
        nameWithType: InputMaster.IPlayerActions.OnSprint
        qualifiedName: InputMaster.IPlayerActions.OnSprint
      VB:
      - id: Global.InputMaster.IPlayerActions.OnSprint*
        name: OnSprint
        nameWithType: InputMaster.IPlayerActions.OnSprint
        qualifiedName: InputMaster.IPlayerActions.OnSprint
    isDefinition: true
    commentId: Overload:Global.InputMaster.IPlayerActions.OnSprint
  Global.InputMaster.IPlayerActions.OnCrouch*:
    name:
      CSharp:
      - id: Global.InputMaster.IPlayerActions.OnCrouch*
        name: OnCrouch
        nameWithType: InputMaster.IPlayerActions.OnCrouch
        qualifiedName: InputMaster.IPlayerActions.OnCrouch
      VB:
      - id: Global.InputMaster.IPlayerActions.OnCrouch*
        name: OnCrouch
        nameWithType: InputMaster.IPlayerActions.OnCrouch
        qualifiedName: InputMaster.IPlayerActions.OnCrouch
    isDefinition: true
    commentId: Overload:Global.InputMaster.IPlayerActions.OnCrouch
  Global.InputMaster.IPlayerActions.OnAim*:
    name:
      CSharp:
      - id: Global.InputMaster.IPlayerActions.OnAim*
        name: OnAim
        nameWithType: InputMaster.IPlayerActions.OnAim
        qualifiedName: InputMaster.IPlayerActions.OnAim
      VB:
      - id: Global.InputMaster.IPlayerActions.OnAim*
        name: OnAim
        nameWithType: InputMaster.IPlayerActions.OnAim
        qualifiedName: InputMaster.IPlayerActions.OnAim
    isDefinition: true
    commentId: Overload:Global.InputMaster.IPlayerActions.OnAim
  Global.InputMaster.IUIActions.OnNavigate*:
    name:
      CSharp:
      - id: Global.InputMaster.IUIActions.OnNavigate*
        name: OnNavigate
        nameWithType: InputMaster.IUIActions.OnNavigate
        qualifiedName: InputMaster.IUIActions.OnNavigate
      VB:
      - id: Global.InputMaster.IUIActions.OnNavigate*
        name: OnNavigate
        nameWithType: InputMaster.IUIActions.OnNavigate
        qualifiedName: InputMaster.IUIActions.OnNavigate
    isDefinition: true
    commentId: Overload:Global.InputMaster.IUIActions.OnNavigate
  Global.InputMaster.IUIActions.OnSubmit*:
    name:
      CSharp:
      - id: Global.InputMaster.IUIActions.OnSubmit*
        name: OnSubmit
        nameWithType: InputMaster.IUIActions.OnSubmit
        qualifiedName: InputMaster.IUIActions.OnSubmit
      VB:
      - id: Global.InputMaster.IUIActions.OnSubmit*
        name: OnSubmit
        nameWithType: InputMaster.IUIActions.OnSubmit
        qualifiedName: InputMaster.IUIActions.OnSubmit
    isDefinition: true
    commentId: Overload:Global.InputMaster.IUIActions.OnSubmit
  Global.InputMaster.IUIActions.OnCancel*:
    name:
      CSharp:
      - id: Global.InputMaster.IUIActions.OnCancel*
        name: OnCancel
        nameWithType: InputMaster.IUIActions.OnCancel
        qualifiedName: InputMaster.IUIActions.OnCancel
      VB:
      - id: Global.InputMaster.IUIActions.OnCancel*
        name: OnCancel
        nameWithType: InputMaster.IUIActions.OnCancel
        qualifiedName: InputMaster.IUIActions.OnCancel
    isDefinition: true
    commentId: Overload:Global.InputMaster.IUIActions.OnCancel
  Global.InputMaster.IUIActions.OnPoint*:
    name:
      CSharp:
      - id: Global.InputMaster.IUIActions.OnPoint*
        name: OnPoint
        nameWithType: InputMaster.IUIActions.OnPoint
        qualifiedName: InputMaster.IUIActions.OnPoint
      VB:
      - id: Global.InputMaster.IUIActions.OnPoint*
        name: OnPoint
        nameWithType: InputMaster.IUIActions.OnPoint
        qualifiedName: InputMaster.IUIActions.OnPoint
    isDefinition: true
    commentId: Overload:Global.InputMaster.IUIActions.OnPoint
  Global.InputMaster.IUIActions.OnClick*:
    name:
      CSharp:
      - id: Global.InputMaster.IUIActions.OnClick*
        name: OnClick
        nameWithType: InputMaster.IUIActions.OnClick
        qualifiedName: InputMaster.IUIActions.OnClick
      VB:
      - id: Global.InputMaster.IUIActions.OnClick*
        name: OnClick
        nameWithType: InputMaster.IUIActions.OnClick
        qualifiedName: InputMaster.IUIActions.OnClick
    isDefinition: true
    commentId: Overload:Global.InputMaster.IUIActions.OnClick
  Global.InputMaster.IUIActions.OnScrollWheel*:
    name:
      CSharp:
      - id: Global.InputMaster.IUIActions.OnScrollWheel*
        name: OnScrollWheel
        nameWithType: InputMaster.IUIActions.OnScrollWheel
        qualifiedName: InputMaster.IUIActions.OnScrollWheel
      VB:
      - id: Global.InputMaster.IUIActions.OnScrollWheel*
        name: OnScrollWheel
        nameWithType: InputMaster.IUIActions.OnScrollWheel
        qualifiedName: InputMaster.IUIActions.OnScrollWheel
    isDefinition: true
    commentId: Overload:Global.InputMaster.IUIActions.OnScrollWheel
  Global.InputMaster.IUIActions.OnMiddleClick*:
    name:
      CSharp:
      - id: Global.InputMaster.IUIActions.OnMiddleClick*
        name: OnMiddleClick
        nameWithType: InputMaster.IUIActions.OnMiddleClick
        qualifiedName: InputMaster.IUIActions.OnMiddleClick
      VB:
      - id: Global.InputMaster.IUIActions.OnMiddleClick*
        name: OnMiddleClick
        nameWithType: InputMaster.IUIActions.OnMiddleClick
        qualifiedName: InputMaster.IUIActions.OnMiddleClick
    isDefinition: true
    commentId: Overload:Global.InputMaster.IUIActions.OnMiddleClick
  Global.InputMaster.IUIActions.OnRightClick*:
    name:
      CSharp:
      - id: Global.InputMaster.IUIActions.OnRightClick*
        name: OnRightClick
        nameWithType: InputMaster.IUIActions.OnRightClick
        qualifiedName: InputMaster.IUIActions.OnRightClick
      VB:
      - id: Global.InputMaster.IUIActions.OnRightClick*
        name: OnRightClick
        nameWithType: InputMaster.IUIActions.OnRightClick
        qualifiedName: InputMaster.IUIActions.OnRightClick
    isDefinition: true
    commentId: Overload:Global.InputMaster.IUIActions.OnRightClick
  Global.InputMaster.IUIActions.OnTrackedDevicePosition*:
    name:
      CSharp:
      - id: Global.InputMaster.IUIActions.OnTrackedDevicePosition*
        name: OnTrackedDevicePosition
        nameWithType: InputMaster.IUIActions.OnTrackedDevicePosition
        qualifiedName: InputMaster.IUIActions.OnTrackedDevicePosition
      VB:
      - id: Global.InputMaster.IUIActions.OnTrackedDevicePosition*
        name: OnTrackedDevicePosition
        nameWithType: InputMaster.IUIActions.OnTrackedDevicePosition
        qualifiedName: InputMaster.IUIActions.OnTrackedDevicePosition
    isDefinition: true
    commentId: Overload:Global.InputMaster.IUIActions.OnTrackedDevicePosition
  Global.InputMaster.IUIActions.OnTrackedDeviceOrientation*:
    name:
      CSharp:
      - id: Global.InputMaster.IUIActions.OnTrackedDeviceOrientation*
        name: OnTrackedDeviceOrientation
        nameWithType: InputMaster.IUIActions.OnTrackedDeviceOrientation
        qualifiedName: InputMaster.IUIActions.OnTrackedDeviceOrientation
      VB:
      - id: Global.InputMaster.IUIActions.OnTrackedDeviceOrientation*
        name: OnTrackedDeviceOrientation
        nameWithType: InputMaster.IUIActions.OnTrackedDeviceOrientation
        qualifiedName: InputMaster.IUIActions.OnTrackedDeviceOrientation
    isDefinition: true
    commentId: Overload:Global.InputMaster.IUIActions.OnTrackedDeviceOrientation
  Global.Transform:
    name:
      CSharp:
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      VB:
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
    isDefinition: true
  Global.CamProperty:
    name:
      CSharp:
      - id: Global.CamProperty
        name: CamProperty
        nameWithType: CamProperty
        qualifiedName: CamProperty
      VB:
      - id: Global.CamProperty
        name: CamProperty
        nameWithType: CamProperty
        qualifiedName: CamProperty
    isDefinition: true
    commentId: T:Global.CamProperty
  Global.TagProperty:
    name:
      CSharp:
      - id: Global.TagProperty
        name: TagProperty
        nameWithType: TagProperty
        qualifiedName: TagProperty
      VB:
      - id: Global.TagProperty
        name: TagProperty
        nameWithType: TagProperty
        qualifiedName: TagProperty
    isDefinition: true
    commentId: T:Global.TagProperty
  Global.InputData:
    name:
      CSharp:
      - id: Global.InputData
        name: InputData
        nameWithType: InputData
        qualifiedName: InputData
      VB:
      - id: Global.InputData
        name: InputData
        nameWithType: InputData
        qualifiedName: InputData
    isDefinition: true
    commentId: T:Global.InputData
  Global.MainCamControl.getEvent*:
    name:
      CSharp:
      - id: Global.MainCamControl.getEvent*
        name: getEvent
        nameWithType: MainCamControl.getEvent
        qualifiedName: MainCamControl.getEvent
      VB:
      - id: Global.MainCamControl.getEvent*
        name: getEvent
        nameWithType: MainCamControl.getEvent
        qualifiedName: MainCamControl.getEvent
    isDefinition: true
    commentId: Overload:Global.MainCamControl.getEvent
  Global.MainCamControl.LookAtHitPoint*:
    name:
      CSharp:
      - id: Global.MainCamControl.LookAtHitPoint*
        name: LookAtHitPoint
        nameWithType: MainCamControl.LookAtHitPoint
        qualifiedName: MainCamControl.LookAtHitPoint
      VB:
      - id: Global.MainCamControl.LookAtHitPoint*
        name: LookAtHitPoint
        nameWithType: MainCamControl.LookAtHitPoint
        qualifiedName: MainCamControl.LookAtHitPoint
    isDefinition: true
    commentId: Overload:Global.MainCamControl.LookAtHitPoint
  Global.MainCamControl.getHit*:
    name:
      CSharp:
      - id: Global.MainCamControl.getHit*
        name: getHit
        nameWithType: MainCamControl.getHit
        qualifiedName: MainCamControl.getHit
      VB:
      - id: Global.MainCamControl.getHit*
        name: getHit
        nameWithType: MainCamControl.getHit
        qualifiedName: MainCamControl.getHit
    isDefinition: true
    commentId: Overload:Global.MainCamControl.getHit
  Global.RaycastHit:
    name:
      CSharp:
      - id: Global.RaycastHit
        name: RaycastHit
        nameWithType: RaycastHit
        qualifiedName: RaycastHit
        isExternal: true
      VB:
      - id: Global.RaycastHit
        name: RaycastHit
        nameWithType: RaycastHit
        qualifiedName: RaycastHit
        isExternal: true
    isDefinition: true
  Global.Vector3:
    name:
      CSharp:
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      VB:
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
    isDefinition: true
  Global.MainCamControl.getClickHit*:
    name:
      CSharp:
      - id: Global.MainCamControl.getClickHit*
        name: getClickHit
        nameWithType: MainCamControl.getClickHit
        qualifiedName: MainCamControl.getClickHit
      VB:
      - id: Global.MainCamControl.getClickHit*
        name: getClickHit
        nameWithType: MainCamControl.getClickHit
        qualifiedName: MainCamControl.getClickHit
    isDefinition: true
    commentId: Overload:Global.MainCamControl.getClickHit
  Global.MainCamControl.getdoubleHit*:
    name:
      CSharp:
      - id: Global.MainCamControl.getdoubleHit*
        name: getdoubleHit
        nameWithType: MainCamControl.getdoubleHit
        qualifiedName: MainCamControl.getdoubleHit
      VB:
      - id: Global.MainCamControl.getdoubleHit*
        name: getdoubleHit
        nameWithType: MainCamControl.getdoubleHit
        qualifiedName: MainCamControl.getdoubleHit
    isDefinition: true
    commentId: Overload:Global.MainCamControl.getdoubleHit
  Global.MainCamControl.TagRotate*:
    name:
      CSharp:
      - id: Global.MainCamControl.TagRotate*
        name: TagRotate
        nameWithType: MainCamControl.TagRotate
        qualifiedName: MainCamControl.TagRotate
      VB:
      - id: Global.MainCamControl.TagRotate*
        name: TagRotate
        nameWithType: MainCamControl.TagRotate
        qualifiedName: MainCamControl.TagRotate
    isDefinition: true
    commentId: Overload:Global.MainCamControl.TagRotate
  Global.MainCamControl.playerMove*:
    name:
      CSharp:
      - id: Global.MainCamControl.playerMove*
        name: playerMove
        nameWithType: MainCamControl.playerMove
        qualifiedName: MainCamControl.playerMove
      VB:
      - id: Global.MainCamControl.playerMove*
        name: playerMove
        nameWithType: MainCamControl.playerMove
        qualifiedName: MainCamControl.playerMove
    isDefinition: true
    commentId: Overload:Global.MainCamControl.playerMove
  Global.MainCamControl.tagMove*:
    name:
      CSharp:
      - id: Global.MainCamControl.tagMove*
        name: tagMove
        nameWithType: MainCamControl.tagMove
        qualifiedName: MainCamControl.tagMove
      VB:
      - id: Global.MainCamControl.tagMove*
        name: tagMove
        nameWithType: MainCamControl.tagMove
        qualifiedName: MainCamControl.tagMove
    isDefinition: true
    commentId: Overload:Global.MainCamControl.tagMove
  Global.MainCamControl.tagReset*:
    name:
      CSharp:
      - id: Global.MainCamControl.tagReset*
        name: tagReset
        nameWithType: MainCamControl.tagReset
        qualifiedName: MainCamControl.tagReset
      VB:
      - id: Global.MainCamControl.tagReset*
        name: tagReset
        nameWithType: MainCamControl.tagReset
        qualifiedName: MainCamControl.tagReset
    isDefinition: true
    commentId: Overload:Global.MainCamControl.tagReset
  Global.MainCamControl.CamReset*:
    name:
      CSharp:
      - id: Global.MainCamControl.CamReset*
        name: CamReset
        nameWithType: MainCamControl.CamReset
        qualifiedName: MainCamControl.CamReset
      VB:
      - id: Global.MainCamControl.CamReset*
        name: CamReset
        nameWithType: MainCamControl.CamReset
        qualifiedName: MainCamControl.CamReset
    isDefinition: true
    commentId: Overload:Global.MainCamControl.CamReset
  Global.MainCamControl.ViewHight*:
    name:
      CSharp:
      - id: Global.MainCamControl.ViewHight*
        name: ViewHight
        nameWithType: MainCamControl.ViewHight
        qualifiedName: MainCamControl.ViewHight
      VB:
      - id: Global.MainCamControl.ViewHight*
        name: ViewHight
        nameWithType: MainCamControl.ViewHight
        qualifiedName: MainCamControl.ViewHight
    isDefinition: true
    commentId: Overload:Global.MainCamControl.ViewHight
  Global.MainCamControl:
    name:
      CSharp:
      - id: Global.MainCamControl
        name: MainCamControl
        nameWithType: MainCamControl
        qualifiedName: MainCamControl
      VB:
      - id: Global.MainCamControl
        name: MainCamControl
        nameWithType: MainCamControl
        qualifiedName: MainCamControl
    isDefinition: true
    commentId: T:Global.MainCamControl
  Global.Quaternion:
    name:
      CSharp:
      - id: Global.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: Quaternion
        isExternal: true
      VB:
      - id: Global.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: Quaternion
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Quaternion'
  Global.CamState:
    name:
      CSharp:
      - id: Global.CamState
        name: CamState
        nameWithType: CamState
        qualifiedName: CamState
      VB:
      - id: Global.CamState
        name: CamState
        nameWithType: CamState
        qualifiedName: CamState
    isDefinition: true
    commentId: T:Global.CamState
  Global.hitCillderType:
    name:
      CSharp:
      - id: Global.hitCillderType
        name: hitCillderType
        nameWithType: hitCillderType
        qualifiedName: hitCillderType
      VB:
      - id: Global.hitCillderType
        name: hitCillderType
        nameWithType: hitCillderType
        qualifiedName: hitCillderType
    isDefinition: true
    commentId: T:Global.hitCillderType
  Global.Animator:
    name:
      CSharp:
      - id: Global.Animator
        name: Animator
        nameWithType: Animator
        qualifiedName: Animator
        isExternal: true
      VB:
      - id: Global.Animator
        name: Animator
        nameWithType: Animator
        qualifiedName: Animator
        isExternal: true
    isDefinition: true
  Global.PlayerAnimatorController.#ctor*:
    name:
      CSharp:
      - id: Global.PlayerAnimatorController.#ctor*
        name: PlayerAnimatorController
        nameWithType: PlayerAnimatorController.PlayerAnimatorController
        qualifiedName: PlayerAnimatorController.PlayerAnimatorController
      VB:
      - id: Global.PlayerAnimatorController.#ctor*
        name: PlayerAnimatorController
        nameWithType: PlayerAnimatorController.PlayerAnimatorController
        qualifiedName: PlayerAnimatorController.PlayerAnimatorController
    isDefinition: true
    commentId: Overload:Global.PlayerAnimatorController.#ctor
  Global.PlayerAnimatorController.LowerBodyState:
    name:
      CSharp:
      - id: Global.PlayerAnimatorController.LowerBodyState
        name: PlayerAnimatorController.LowerBodyState
        nameWithType: PlayerAnimatorController.LowerBodyState
        qualifiedName: PlayerAnimatorController.LowerBodyState
      VB:
      - id: Global.PlayerAnimatorController.LowerBodyState
        name: PlayerAnimatorController.LowerBodyState
        nameWithType: PlayerAnimatorController.LowerBodyState
        qualifiedName: PlayerAnimatorController.LowerBodyState
    isDefinition: true
    commentId: T:Global.PlayerAnimatorController.LowerBodyState
  Global.PlayerAnimatorController.SetLowerBodyState*:
    name:
      CSharp:
      - id: Global.PlayerAnimatorController.SetLowerBodyState*
        name: SetLowerBodyState
        nameWithType: PlayerAnimatorController.SetLowerBodyState
        qualifiedName: PlayerAnimatorController.SetLowerBodyState
      VB:
      - id: Global.PlayerAnimatorController.SetLowerBodyState*
        name: SetLowerBodyState
        nameWithType: PlayerAnimatorController.SetLowerBodyState
        qualifiedName: PlayerAnimatorController.SetLowerBodyState
    isDefinition: true
    commentId: Overload:Global.PlayerAnimatorController.SetLowerBodyState
  Global.PlayerAnimatorController.InvertStandMode*:
    name:
      CSharp:
      - id: Global.PlayerAnimatorController.InvertStandMode*
        name: InvertStandMode
        nameWithType: PlayerAnimatorController.InvertStandMode
        qualifiedName: PlayerAnimatorController.InvertStandMode
      VB:
      - id: Global.PlayerAnimatorController.InvertStandMode*
        name: InvertStandMode
        nameWithType: PlayerAnimatorController.InvertStandMode
        qualifiedName: PlayerAnimatorController.InvertStandMode
    isDefinition: true
    commentId: Overload:Global.PlayerAnimatorController.InvertStandMode
  Global.PlayerAnimatorController:
    name:
      CSharp:
      - id: Global.PlayerAnimatorController
        name: PlayerAnimatorController
        nameWithType: PlayerAnimatorController
        qualifiedName: PlayerAnimatorController
      VB:
      - id: Global.PlayerAnimatorController
        name: PlayerAnimatorController
        nameWithType: PlayerAnimatorController
        qualifiedName: PlayerAnimatorController
    isDefinition: true
    commentId: T:Global.PlayerAnimatorController
  Global.Vector2:
    name:
      CSharp:
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      VB:
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
    isDefinition: true
  Global.CursorLockMode:
    name:
      CSharp:
      - id: Global.CursorLockMode
        name: CursorLockMode
        nameWithType: CursorLockMode
        qualifiedName: CursorLockMode
        isExternal: true
      VB:
      - id: Global.CursorLockMode
        name: CursorLockMode
        nameWithType: CursorLockMode
        qualifiedName: CursorLockMode
        isExternal: true
    isDefinition: true
    commentId: '!:Global.CursorLockMode'
  Global.PlayerCameraController.CalcAbsolutePoint*:
    name:
      CSharp:
      - id: Global.PlayerCameraController.CalcAbsolutePoint*
        name: CalcAbsolutePoint
        nameWithType: PlayerCameraController.CalcAbsolutePoint
        qualifiedName: PlayerCameraController.CalcAbsolutePoint
      VB:
      - id: Global.PlayerCameraController.CalcAbsolutePoint*
        name: CalcAbsolutePoint
        nameWithType: PlayerCameraController.CalcAbsolutePoint
        qualifiedName: PlayerCameraController.CalcAbsolutePoint
    isDefinition: true
    commentId: Overload:Global.PlayerCameraController.CalcAbsolutePoint
  Global.PlayerCameraController:
    name:
      CSharp:
      - id: Global.PlayerCameraController
        name: PlayerCameraController
        nameWithType: PlayerCameraController
        qualifiedName: PlayerCameraController
      VB:
      - id: Global.PlayerCameraController
        name: PlayerCameraController
        nameWithType: PlayerCameraController
        qualifiedName: PlayerCameraController
    isDefinition: true
    commentId: T:Global.PlayerCameraController
  Global.PlayerMoveController:
    name:
      CSharp:
      - id: Global.PlayerMoveController
        name: PlayerMoveController
        nameWithType: PlayerMoveController
        qualifiedName: PlayerMoveController
      VB:
      - id: Global.PlayerMoveController
        name: PlayerMoveController
        nameWithType: PlayerMoveController
        qualifiedName: PlayerMoveController
    isDefinition: true
    commentId: T:Global.PlayerMoveController
  Global.UnityEvent`1:
    name:
      CSharp:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:Global.UnityEvent`1'
  Global.UnityEvent{InputData}:
    name:
      CSharp:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.InputData
        name: InputData
        nameWithType: InputData
        qualifiedName: InputData
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.InputData
        name: InputData
        nameWithType: InputData
        qualifiedName: InputData
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.UnityEvent`1
    commentId: '!:Global.UnityEvent{InputData}'
  Global.GameObject:
    name:
      CSharp:
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      VB:
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
    isDefinition: true
  Global.inputEvent:
    name:
      CSharp:
      - id: Global.inputEvent
        name: inputEvent
        nameWithType: inputEvent
        qualifiedName: inputEvent
      VB:
      - id: Global.inputEvent
        name: inputEvent
        nameWithType: inputEvent
        qualifiedName: inputEvent
    isDefinition: true
    commentId: T:Global.inputEvent
  Global.inputEvent.Instance*:
    name:
      CSharp:
      - id: Global.inputEvent.Instance*
        name: Instance
        nameWithType: inputEvent.Instance
        qualifiedName: inputEvent.Instance
      VB:
      - id: Global.inputEvent.Instance*
        name: Instance
        nameWithType: inputEvent.Instance
        qualifiedName: inputEvent.Instance
    isDefinition: true
    commentId: Overload:Global.inputEvent.Instance
  Global.EinputType:
    name:
      CSharp:
      - id: Global.EinputType
        name: EinputType
        nameWithType: EinputType
        qualifiedName: EinputType
      VB:
      - id: Global.EinputType
        name: EinputType
        nameWithType: EinputType
        qualifiedName: EinputType
    isDefinition: true
    commentId: T:Global.EinputType
  Global.inputEvent.sendEvent*:
    name:
      CSharp:
      - id: Global.inputEvent.sendEvent*
        name: sendEvent
        nameWithType: inputEvent.sendEvent
        qualifiedName: inputEvent.sendEvent
      VB:
      - id: Global.inputEvent.sendEvent*
        name: sendEvent
        nameWithType: inputEvent.sendEvent
        qualifiedName: inputEvent.sendEvent
    isDefinition: true
    commentId: Overload:Global.inputEvent.sendEvent
  Global.Rigidbody:
    name:
      CSharp:
      - id: Global.Rigidbody
        name: Rigidbody
        nameWithType: Rigidbody
        qualifiedName: Rigidbody
        isExternal: true
      VB:
      - id: Global.Rigidbody
        name: Rigidbody
        nameWithType: Rigidbody
        qualifiedName: Rigidbody
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Rigidbody'
  Global.CapsuleCollider:
    name:
      CSharp:
      - id: Global.CapsuleCollider
        name: CapsuleCollider
        nameWithType: CapsuleCollider
        qualifiedName: CapsuleCollider
        isExternal: true
      VB:
      - id: Global.CapsuleCollider
        name: CapsuleCollider
        nameWithType: CapsuleCollider
        qualifiedName: CapsuleCollider
        isExternal: true
    isDefinition: true
    commentId: '!:Global.CapsuleCollider'
  Global.LineRenderer:
    name:
      CSharp:
      - id: Global.LineRenderer
        name: LineRenderer
        nameWithType: LineRenderer
        qualifiedName: LineRenderer
        isExternal: true
      VB:
      - id: Global.LineRenderer
        name: LineRenderer
        nameWithType: LineRenderer
        qualifiedName: LineRenderer
        isExternal: true
    isDefinition: true
    commentId: '!:Global.LineRenderer'
  Global.Mesh:
    name:
      CSharp:
      - id: Global.Mesh
        name: Mesh
        nameWithType: Mesh
        qualifiedName: Mesh
        isExternal: true
      VB:
      - id: Global.Mesh
        name: Mesh
        nameWithType: Mesh
        qualifiedName: Mesh
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Mesh'
  Global.Material:
    name:
      CSharp:
      - id: Global.Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
      VB:
      - id: Global.Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Material'
  Global.GrenadesThrow.throwGrenades*:
    name:
      CSharp:
      - id: Global.GrenadesThrow.throwGrenades*
        name: throwGrenades
        nameWithType: GrenadesThrow.throwGrenades
        qualifiedName: GrenadesThrow.throwGrenades
      VB:
      - id: Global.GrenadesThrow.throwGrenades*
        name: throwGrenades
        nameWithType: GrenadesThrow.throwGrenades
        qualifiedName: GrenadesThrow.throwGrenades
    isDefinition: true
    commentId: Overload:Global.GrenadesThrow.throwGrenades
  Global.GrenadesThrow.beginBoom*:
    name:
      CSharp:
      - id: Global.GrenadesThrow.beginBoom*
        name: beginBoom
        nameWithType: GrenadesThrow.beginBoom
        qualifiedName: GrenadesThrow.beginBoom
      VB:
      - id: Global.GrenadesThrow.beginBoom*
        name: beginBoom
        nameWithType: GrenadesThrow.beginBoom
        qualifiedName: GrenadesThrow.beginBoom
    isDefinition: true
    commentId: Overload:Global.GrenadesThrow.beginBoom
  Global.GrenadesThrow:
    name:
      CSharp:
      - id: Global.GrenadesThrow
        name: GrenadesThrow
        nameWithType: GrenadesThrow
        qualifiedName: GrenadesThrow
      VB:
      - id: Global.GrenadesThrow
        name: GrenadesThrow
        nameWithType: GrenadesThrow
        qualifiedName: GrenadesThrow
    isDefinition: true
    commentId: T:Global.GrenadesThrow
  Global.grenadesOntach:
    name:
      CSharp:
      - id: Global.grenadesOntach
        name: grenadesOntach
        nameWithType: grenadesOntach
        qualifiedName: grenadesOntach
      VB:
      - id: Global.grenadesOntach
        name: grenadesOntach
        nameWithType: grenadesOntach
        qualifiedName: grenadesOntach
    isDefinition: true
    commentId: T:Global.grenadesOntach
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  System.Collections.Generic.List{System.String}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.String}
  Global.damageContor:
    name:
      CSharp:
      - id: Global.damageContor
        name: damageContor
        nameWithType: damageContor
        qualifiedName: damageContor
      VB:
      - id: Global.damageContor
        name: damageContor
        nameWithType: damageContor
        qualifiedName: damageContor
    isDefinition: true
    commentId: T:Global.damageContor
  System.Collections.Generic.List{System.Single}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Single}
  Global.BulletGo:
    name:
      CSharp:
      - id: Global.BulletGo
        name: BulletGo
        nameWithType: BulletGo
        qualifiedName: BulletGo
      VB:
      - id: Global.BulletGo
        name: BulletGo
        nameWithType: BulletGo
        qualifiedName: BulletGo
    isDefinition: true
    commentId: T:Global.BulletGo
  Global.MyGobal:
    name:
      CSharp:
      - id: Global.MyGobal
        name: MyGobal
        nameWithType: MyGobal
        qualifiedName: MyGobal
      VB:
      - id: Global.MyGobal
        name: MyGobal
        nameWithType: MyGobal
        qualifiedName: MyGobal
    isDefinition: true
    commentId: T:Global.MyGobal
  Global.MyGobal.GetInstance*:
    name:
      CSharp:
      - id: Global.MyGobal.GetInstance*
        name: GetInstance
        nameWithType: MyGobal.GetInstance
        qualifiedName: MyGobal.GetInstance
      VB:
      - id: Global.MyGobal.GetInstance*
        name: GetInstance
        nameWithType: MyGobal.GetInstance
        qualifiedName: MyGobal.GetInstance
    isDefinition: true
    commentId: Overload:Global.MyGobal.GetInstance
  Global.Ray:
    name:
      CSharp:
      - id: Global.Ray
        name: Ray
        nameWithType: Ray
        qualifiedName: Ray
        isExternal: true
      VB:
      - id: Global.Ray
        name: Ray
        nameWithType: Ray
        qualifiedName: Ray
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Ray'
  Global.MyGobal.HitRay*:
    name:
      CSharp:
      - id: Global.MyGobal.HitRay*
        name: HitRay
        nameWithType: MyGobal.HitRay
        qualifiedName: MyGobal.HitRay
      VB:
      - id: Global.MyGobal.HitRay*
        name: HitRay
        nameWithType: MyGobal.HitRay
        qualifiedName: MyGobal.HitRay
    isDefinition: true
    commentId: Overload:Global.MyGobal.HitRay
  Global.MyGobal.HitInfo*:
    name:
      CSharp:
      - id: Global.MyGobal.HitInfo*
        name: HitInfo
        nameWithType: MyGobal.HitInfo
        qualifiedName: MyGobal.HitInfo
      VB:
      - id: Global.MyGobal.HitInfo*
        name: HitInfo
        nameWithType: MyGobal.HitInfo
        qualifiedName: MyGobal.HitInfo
    isDefinition: true
    commentId: Overload:Global.MyGobal.HitInfo
  Global.Camera:
    name:
      CSharp:
      - id: Global.Camera
        name: Camera
        nameWithType: Camera
        qualifiedName: Camera
        isExternal: true
      VB:
      - id: Global.Camera
        name: Camera
        nameWithType: Camera
        qualifiedName: Camera
        isExternal: true
    isDefinition: true
  Global.MyGobal.getHitTag*:
    name:
      CSharp:
      - id: Global.MyGobal.getHitTag*
        name: getHitTag
        nameWithType: MyGobal.getHitTag
        qualifiedName: MyGobal.getHitTag
      VB:
      - id: Global.MyGobal.getHitTag*
        name: getHitTag
        nameWithType: MyGobal.getHitTag
        qualifiedName: MyGobal.getHitTag
    isDefinition: true
    commentId: Overload:Global.MyGobal.getHitTag
  Global.MyGobal.getAimTag*:
    name:
      CSharp:
      - id: Global.MyGobal.getAimTag*
        name: getAimTag
        nameWithType: MyGobal.getAimTag
        qualifiedName: MyGobal.getAimTag
      VB:
      - id: Global.MyGobal.getAimTag*
        name: getAimTag
        nameWithType: MyGobal.getAimTag
        qualifiedName: MyGobal.getAimTag
    isDefinition: true
    commentId: Overload:Global.MyGobal.getAimTag
  System.Collections.Generic.List{GameObject}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{GameObject}
  Global.bullet_Generator.gunType:
    name:
      CSharp:
      - id: Global.bullet_Generator.gunType
        name: bullet_Generator.gunType
        nameWithType: bullet_Generator.gunType
        qualifiedName: bullet_Generator.gunType
      VB:
      - id: Global.bullet_Generator.gunType
        name: bullet_Generator.gunType
        nameWithType: bullet_Generator.gunType
        qualifiedName: bullet_Generator.gunType
    isDefinition: true
    commentId: T:Global.bullet_Generator.gunType
  Global.bullet_Generator.shoot*:
    name:
      CSharp:
      - id: Global.bullet_Generator.shoot*
        name: shoot
        nameWithType: bullet_Generator.shoot
        qualifiedName: bullet_Generator.shoot
      VB:
      - id: Global.bullet_Generator.shoot*
        name: shoot
        nameWithType: bullet_Generator.shoot
        qualifiedName: bullet_Generator.shoot
    isDefinition: true
    commentId: Overload:Global.bullet_Generator.shoot
  Global.bullet_Generator.BulletInstance*:
    name:
      CSharp:
      - id: Global.bullet_Generator.BulletInstance*
        name: BulletInstance
        nameWithType: bullet_Generator.BulletInstance
        qualifiedName: bullet_Generator.BulletInstance
      VB:
      - id: Global.bullet_Generator.BulletInstance*
        name: BulletInstance
        nameWithType: bullet_Generator.BulletInstance
        qualifiedName: bullet_Generator.BulletInstance
    isDefinition: true
    commentId: Overload:Global.bullet_Generator.BulletInstance
  Global.bullet_Generator.RandomTagSet*:
    name:
      CSharp:
      - id: Global.bullet_Generator.RandomTagSet*
        name: RandomTagSet
        nameWithType: bullet_Generator.RandomTagSet
        qualifiedName: bullet_Generator.RandomTagSet
      VB:
      - id: Global.bullet_Generator.RandomTagSet*
        name: RandomTagSet
        nameWithType: bullet_Generator.RandomTagSet
        qualifiedName: bullet_Generator.RandomTagSet
    isDefinition: true
    commentId: Overload:Global.bullet_Generator.RandomTagSet
  Global.bullet_Generator:
    name:
      CSharp:
      - id: Global.bullet_Generator
        name: bullet_Generator
        nameWithType: bullet_Generator
        qualifiedName: bullet_Generator
      VB:
      - id: Global.bullet_Generator
        name: bullet_Generator
        nameWithType: bullet_Generator
        qualifiedName: bullet_Generator
    isDefinition: true
    commentId: T:Global.bullet_Generator
  Global.bullet_Generator.bulletTpye:
    name:
      CSharp:
      - id: Global.bullet_Generator.bulletTpye
        name: bullet_Generator.bulletTpye
        nameWithType: bullet_Generator.bulletTpye
        qualifiedName: bullet_Generator.bulletTpye
      VB:
      - id: Global.bullet_Generator.bulletTpye
        name: bullet_Generator.bulletTpye
        nameWithType: bullet_Generator.bulletTpye
        qualifiedName: bullet_Generator.bulletTpye
    isDefinition: true
    commentId: T:Global.bullet_Generator.bulletTpye
  Global.bullet_Generator.GunInfo:
    name:
      CSharp:
      - id: Global.bullet_Generator.GunInfo
        name: bullet_Generator.GunInfo
        nameWithType: bullet_Generator.GunInfo
        qualifiedName: bullet_Generator.GunInfo
      VB:
      - id: Global.bullet_Generator.GunInfo
        name: bullet_Generator.GunInfo
        nameWithType: bullet_Generator.GunInfo
        qualifiedName: bullet_Generator.GunInfo
    isDefinition: true
    commentId: T:Global.bullet_Generator.GunInfo
  Global.damageContor.gethurt*:
    name:
      CSharp:
      - id: Global.damageContor.gethurt*
        name: gethurt
        nameWithType: damageContor.gethurt
        qualifiedName: damageContor.gethurt
      VB:
      - id: Global.damageContor.gethurt*
        name: gethurt
        nameWithType: damageContor.gethurt
        qualifiedName: damageContor.gethurt
    isDefinition: true
    commentId: Overload:Global.damageContor.gethurt
  Global.RectTransform:
    name:
      CSharp:
      - id: Global.RectTransform
        name: RectTransform
        nameWithType: RectTransform
        qualifiedName: RectTransform
        isExternal: true
      VB:
      - id: Global.RectTransform
        name: RectTransform
        nameWithType: RectTransform
        qualifiedName: RectTransform
        isExternal: true
    isDefinition: true
    commentId: '!:Global.RectTransform'
  Global.Canvas:
    name:
      CSharp:
      - id: Global.Canvas
        name: Canvas
        nameWithType: Canvas
        qualifiedName: Canvas
        isExternal: true
      VB:
      - id: Global.Canvas
        name: Canvas
        nameWithType: Canvas
        qualifiedName: Canvas
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Canvas'
  Global.shoot_test.shootType:
    name:
      CSharp:
      - id: Global.shoot_test.shootType
        name: shoot_test.shootType
        nameWithType: shoot_test.shootType
        qualifiedName: shoot_test.shootType
      VB:
      - id: Global.shoot_test.shootType
        name: shoot_test.shootType
        nameWithType: shoot_test.shootType
        qualifiedName: shoot_test.shootType
    isDefinition: true
    commentId: T:Global.shoot_test.shootType
  Global.shoot_test.getRayCamHit*:
    name:
      CSharp:
      - id: Global.shoot_test.getRayCamHit*
        name: getRayCamHit
        nameWithType: shoot_test.getRayCamHit
        qualifiedName: shoot_test.getRayCamHit
      VB:
      - id: Global.shoot_test.getRayCamHit*
        name: getRayCamHit
        nameWithType: shoot_test.getRayCamHit
        qualifiedName: shoot_test.getRayCamHit
    isDefinition: true
    commentId: Overload:Global.shoot_test.getRayCamHit
  Global.shoot_test.shooting*:
    name:
      CSharp:
      - id: Global.shoot_test.shooting*
        name: shooting
        nameWithType: shoot_test.shooting
        qualifiedName: shoot_test.shooting
      VB:
      - id: Global.shoot_test.shooting*
        name: shooting
        nameWithType: shoot_test.shooting
        qualifiedName: shoot_test.shooting
    isDefinition: true
    commentId: Overload:Global.shoot_test.shooting
  Global.shoot_test.changeGun*:
    name:
      CSharp:
      - id: Global.shoot_test.changeGun*
        name: changeGun
        nameWithType: shoot_test.changeGun
        qualifiedName: shoot_test.changeGun
      VB:
      - id: Global.shoot_test.changeGun*
        name: changeGun
        nameWithType: shoot_test.changeGun
        qualifiedName: shoot_test.changeGun
    isDefinition: true
    commentId: Overload:Global.shoot_test.changeGun
  Global.shoot_test.reloadClip*:
    name:
      CSharp:
      - id: Global.shoot_test.reloadClip*
        name: reloadClip
        nameWithType: shoot_test.reloadClip
        qualifiedName: shoot_test.reloadClip
      VB:
      - id: Global.shoot_test.reloadClip*
        name: reloadClip
        nameWithType: shoot_test.reloadClip
        qualifiedName: shoot_test.reloadClip
    isDefinition: true
    commentId: Overload:Global.shoot_test.reloadClip
  Global.shoot_test.pointTO*:
    name:
      CSharp:
      - id: Global.shoot_test.pointTO*
        name: pointTO
        nameWithType: shoot_test.pointTO
        qualifiedName: shoot_test.pointTO
      VB:
      - id: Global.shoot_test.pointTO*
        name: pointTO
        nameWithType: shoot_test.pointTO
        qualifiedName: shoot_test.pointTO
    isDefinition: true
    commentId: Overload:Global.shoot_test.pointTO
  Global.shoot_test.RandomTagSet*:
    name:
      CSharp:
      - id: Global.shoot_test.RandomTagSet*
        name: RandomTagSet
        nameWithType: shoot_test.RandomTagSet
        qualifiedName: shoot_test.RandomTagSet
      VB:
      - id: Global.shoot_test.RandomTagSet*
        name: RandomTagSet
        nameWithType: shoot_test.RandomTagSet
        qualifiedName: shoot_test.RandomTagSet
    isDefinition: true
    commentId: Overload:Global.shoot_test.RandomTagSet
  Global.shoot_test.PlayLooKAt*:
    name:
      CSharp:
      - id: Global.shoot_test.PlayLooKAt*
        name: PlayLooKAt
        nameWithType: shoot_test.PlayLooKAt
        qualifiedName: shoot_test.PlayLooKAt
      VB:
      - id: Global.shoot_test.PlayLooKAt*
        name: PlayLooKAt
        nameWithType: shoot_test.PlayLooKAt
        qualifiedName: shoot_test.PlayLooKAt
    isDefinition: true
    commentId: Overload:Global.shoot_test.PlayLooKAt
  Global.shoot_test.changAimCam*:
    name:
      CSharp:
      - id: Global.shoot_test.changAimCam*
        name: changAimCam
        nameWithType: shoot_test.changAimCam
        qualifiedName: shoot_test.changAimCam
      VB:
      - id: Global.shoot_test.changAimCam*
        name: changAimCam
        nameWithType: shoot_test.changAimCam
        qualifiedName: shoot_test.changAimCam
    isDefinition: true
    commentId: Overload:Global.shoot_test.changAimCam
  Global.shoot_test.placeAimCamUI*:
    name:
      CSharp:
      - id: Global.shoot_test.placeAimCamUI*
        name: placeAimCamUI
        nameWithType: shoot_test.placeAimCamUI
        qualifiedName: shoot_test.placeAimCamUI
      VB:
      - id: Global.shoot_test.placeAimCamUI*
        name: placeAimCamUI
        nameWithType: shoot_test.placeAimCamUI
        qualifiedName: shoot_test.placeAimCamUI
    isDefinition: true
    commentId: Overload:Global.shoot_test.placeAimCamUI
  Global.shoot_test:
    name:
      CSharp:
      - id: Global.shoot_test
        name: shoot_test
        nameWithType: shoot_test
        qualifiedName: shoot_test
      VB:
      - id: Global.shoot_test
        name: shoot_test
        nameWithType: shoot_test
        qualifiedName: shoot_test
    isDefinition: true
    commentId: T:Global.shoot_test
  Global.templist:
    name:
      CSharp:
      - id: Global.templist
        name: templist
        nameWithType: templist
        qualifiedName: templist
      VB:
      - id: Global.templist
        name: templist
        nameWithType: templist
        qualifiedName: templist
    isDefinition: true
    commentId: T:Global.templist
  Global.ActorAnimControl.AnimP_OnGround*:
    name:
      CSharp:
      - id: Global.ActorAnimControl.AnimP_OnGround*
        name: AnimP_OnGround
        nameWithType: ActorAnimControl.AnimP_OnGround
        qualifiedName: ActorAnimControl.AnimP_OnGround
      VB:
      - id: Global.ActorAnimControl.AnimP_OnGround*
        name: AnimP_OnGround
        nameWithType: ActorAnimControl.AnimP_OnGround
        qualifiedName: ActorAnimControl.AnimP_OnGround
    isDefinition: true
    commentId: Overload:Global.ActorAnimControl.AnimP_OnGround
  Global.ActorAnimControl.AnimP_Velocity*:
    name:
      CSharp:
      - id: Global.ActorAnimControl.AnimP_Velocity*
        name: AnimP_Velocity
        nameWithType: ActorAnimControl.AnimP_Velocity
        qualifiedName: ActorAnimControl.AnimP_Velocity
      VB:
      - id: Global.ActorAnimControl.AnimP_Velocity*
        name: AnimP_Velocity
        nameWithType: ActorAnimControl.AnimP_Velocity
        qualifiedName: ActorAnimControl.AnimP_Velocity
    isDefinition: true
    commentId: Overload:Global.ActorAnimControl.AnimP_Velocity
  Global.ActorAnimControl.AnimP_Trigger_Jump*:
    name:
      CSharp:
      - id: Global.ActorAnimControl.AnimP_Trigger_Jump*
        name: AnimP_Trigger_Jump
        nameWithType: ActorAnimControl.AnimP_Trigger_Jump
        qualifiedName: ActorAnimControl.AnimP_Trigger_Jump
      VB:
      - id: Global.ActorAnimControl.AnimP_Trigger_Jump*
        name: AnimP_Trigger_Jump
        nameWithType: ActorAnimControl.AnimP_Trigger_Jump
        qualifiedName: ActorAnimControl.AnimP_Trigger_Jump
    isDefinition: true
    commentId: Overload:Global.ActorAnimControl.AnimP_Trigger_Jump
  Global.ActorAnimControl:
    name:
      CSharp:
      - id: Global.ActorAnimControl
        name: ActorAnimControl
        nameWithType: ActorAnimControl
        qualifiedName: ActorAnimControl
      VB:
      - id: Global.ActorAnimControl
        name: ActorAnimControl
        nameWithType: ActorAnimControl
        qualifiedName: ActorAnimControl
    isDefinition: true
    commentId: T:Global.ActorAnimControl
  Global.ActorIKMotionControl:
    name:
      CSharp:
      - id: Global.ActorIKMotionControl
        name: ActorIKMotionControl
        nameWithType: ActorIKMotionControl
        qualifiedName: ActorIKMotionControl
      VB:
      - id: Global.ActorIKMotionControl
        name: ActorIKMotionControl
        nameWithType: ActorIKMotionControl
        qualifiedName: ActorIKMotionControl
    isDefinition: true
    commentId: T:Global.ActorIKMotionControl
  Global.ActorMoveControl.ActorLookType:
    name:
      CSharp:
      - id: Global.ActorMoveControl.ActorLookType
        name: ActorMoveControl.ActorLookType
        nameWithType: ActorMoveControl.ActorLookType
        qualifiedName: ActorMoveControl.ActorLookType
      VB:
      - id: Global.ActorMoveControl.ActorLookType
        name: ActorMoveControl.ActorLookType
        nameWithType: ActorMoveControl.ActorLookType
        qualifiedName: ActorMoveControl.ActorLookType
    isDefinition: true
    commentId: T:Global.ActorMoveControl.ActorLookType
  Global.LayerMask:
    name:
      CSharp:
      - id: Global.LayerMask
        name: LayerMask
        nameWithType: LayerMask
        qualifiedName: LayerMask
        isExternal: true
      VB:
      - id: Global.LayerMask
        name: LayerMask
        nameWithType: LayerMask
        qualifiedName: LayerMask
        isExternal: true
    isDefinition: true
    commentId: '!:Global.LayerMask'
  Global.ActorMoveControl.m_BeCanByInputControl*:
    name:
      CSharp:
      - id: Global.ActorMoveControl.m_BeCanByInputControl*
        name: m_BeCanByInputControl
        nameWithType: ActorMoveControl.m_BeCanByInputControl
        qualifiedName: ActorMoveControl.m_BeCanByInputControl
      VB:
      - id: Global.ActorMoveControl.m_BeCanByInputControl*
        name: m_BeCanByInputControl
        nameWithType: ActorMoveControl.m_BeCanByInputControl
        qualifiedName: ActorMoveControl.m_BeCanByInputControl
    isDefinition: true
    commentId: Overload:Global.ActorMoveControl.m_BeCanByInputControl
  Global.ActorMoveControl.AnimP_OnGround*:
    name:
      CSharp:
      - id: Global.ActorMoveControl.AnimP_OnGround*
        name: AnimP_OnGround
        nameWithType: ActorMoveControl.AnimP_OnGround
        qualifiedName: ActorMoveControl.AnimP_OnGround
      VB:
      - id: Global.ActorMoveControl.AnimP_OnGround*
        name: AnimP_OnGround
        nameWithType: ActorMoveControl.AnimP_OnGround
        qualifiedName: ActorMoveControl.AnimP_OnGround
    isDefinition: true
    commentId: Overload:Global.ActorMoveControl.AnimP_OnGround
  Global.ActorMoveControl.AnimP_Velocity*:
    name:
      CSharp:
      - id: Global.ActorMoveControl.AnimP_Velocity*
        name: AnimP_Velocity
        nameWithType: ActorMoveControl.AnimP_Velocity
        qualifiedName: ActorMoveControl.AnimP_Velocity
      VB:
      - id: Global.ActorMoveControl.AnimP_Velocity*
        name: AnimP_Velocity
        nameWithType: ActorMoveControl.AnimP_Velocity
        qualifiedName: ActorMoveControl.AnimP_Velocity
    isDefinition: true
    commentId: Overload:Global.ActorMoveControl.AnimP_Velocity
  Global.ActorMoveControl.LostControlByPhysics*:
    name:
      CSharp:
      - id: Global.ActorMoveControl.LostControlByPhysics*
        name: LostControlByPhysics
        nameWithType: ActorMoveControl.LostControlByPhysics
        qualifiedName: ActorMoveControl.LostControlByPhysics
      VB:
      - id: Global.ActorMoveControl.LostControlByPhysics*
        name: LostControlByPhysics
        nameWithType: ActorMoveControl.LostControlByPhysics
        qualifiedName: ActorMoveControl.LostControlByPhysics
    isDefinition: true
    commentId: Overload:Global.ActorMoveControl.LostControlByPhysics
  Global.ActorMoveControl.LostControlByMoveDir*:
    name:
      CSharp:
      - id: Global.ActorMoveControl.LostControlByMoveDir*
        name: LostControlByMoveDir
        nameWithType: ActorMoveControl.LostControlByMoveDir
        qualifiedName: ActorMoveControl.LostControlByMoveDir
      VB:
      - id: Global.ActorMoveControl.LostControlByMoveDir*
        name: LostControlByMoveDir
        nameWithType: ActorMoveControl.LostControlByMoveDir
        qualifiedName: ActorMoveControl.LostControlByMoveDir
    isDefinition: true
    commentId: Overload:Global.ActorMoveControl.LostControlByMoveDir
  Global.AnimationCurve:
    name:
      CSharp:
      - id: Global.AnimationCurve
        name: AnimationCurve
        nameWithType: AnimationCurve
        qualifiedName: AnimationCurve
        isExternal: true
      VB:
      - id: Global.AnimationCurve
        name: AnimationCurve
        nameWithType: AnimationCurve
        qualifiedName: AnimationCurve
        isExternal: true
    isDefinition: true
  Global.ActorMoveControl.LostControlByCurvs*:
    name:
      CSharp:
      - id: Global.ActorMoveControl.LostControlByCurvs*
        name: LostControlByCurvs
        nameWithType: ActorMoveControl.LostControlByCurvs
        qualifiedName: ActorMoveControl.LostControlByCurvs
      VB:
      - id: Global.ActorMoveControl.LostControlByCurvs*
        name: LostControlByCurvs
        nameWithType: ActorMoveControl.LostControlByCurvs
        qualifiedName: ActorMoveControl.LostControlByCurvs
    isDefinition: true
    commentId: Overload:Global.ActorMoveControl.LostControlByCurvs
  Global.ActorMoveControl:
    name:
      CSharp:
      - id: Global.ActorMoveControl
        name: ActorMoveControl
        nameWithType: ActorMoveControl
        qualifiedName: ActorMoveControl
      VB:
      - id: Global.ActorMoveControl
        name: ActorMoveControl
        nameWithType: ActorMoveControl
        qualifiedName: ActorMoveControl
    isDefinition: true
    commentId: T:Global.ActorMoveControl
  Global.ActorMoveControl.PlayerMoveType:
    name:
      CSharp:
      - id: Global.ActorMoveControl.PlayerMoveType
        name: ActorMoveControl.PlayerMoveType
        nameWithType: ActorMoveControl.PlayerMoveType
        qualifiedName: ActorMoveControl.PlayerMoveType
      VB:
      - id: Global.ActorMoveControl.PlayerMoveType
        name: ActorMoveControl.PlayerMoveType
        nameWithType: ActorMoveControl.PlayerMoveType
        qualifiedName: ActorMoveControl.PlayerMoveType
    isDefinition: true
    commentId: T:Global.ActorMoveControl.PlayerMoveType
  Global.ActorMoveControl.LostControlType:
    name:
      CSharp:
      - id: Global.ActorMoveControl.LostControlType
        name: ActorMoveControl.LostControlType
        nameWithType: ActorMoveControl.LostControlType
        qualifiedName: ActorMoveControl.LostControlType
      VB:
      - id: Global.ActorMoveControl.LostControlType
        name: ActorMoveControl.LostControlType
        nameWithType: ActorMoveControl.LostControlType
        qualifiedName: ActorMoveControl.LostControlType
    isDefinition: true
    commentId: T:Global.ActorMoveControl.LostControlType
  Global.CameraControl.UpdateType:
    name:
      CSharp:
      - id: Global.CameraControl.UpdateType
        name: CameraControl.UpdateType
        nameWithType: CameraControl.UpdateType
        qualifiedName: CameraControl.UpdateType
      VB:
      - id: Global.CameraControl.UpdateType
        name: CameraControl.UpdateType
        nameWithType: CameraControl.UpdateType
        qualifiedName: CameraControl.UpdateType
    isDefinition: true
    commentId: T:Global.CameraControl.UpdateType
  Global.CameraControl:
    name:
      CSharp:
      - id: Global.CameraControl
        name: CameraControl
        nameWithType: CameraControl
        qualifiedName: CameraControl
      VB:
      - id: Global.CameraControl
        name: CameraControl
        nameWithType: CameraControl
        qualifiedName: CameraControl
    isDefinition: true
    commentId: T:Global.CameraControl
  Global.TopDownController3DOverride.ResizeColliderHeight*:
    name:
      CSharp:
      - id: Global.TopDownController3DOverride.ResizeColliderHeight*
        name: ResizeColliderHeight
        nameWithType: TopDownController3DOverride.ResizeColliderHeight
        qualifiedName: TopDownController3DOverride.ResizeColliderHeight
      VB:
      - id: Global.TopDownController3DOverride.ResizeColliderHeight*
        name: ResizeColliderHeight
        nameWithType: TopDownController3DOverride.ResizeColliderHeight
        qualifiedName: TopDownController3DOverride.ResizeColliderHeight
    isDefinition: true
    commentId: Overload:Global.TopDownController3DOverride.ResizeColliderHeight
  Global.TopDownController3DOverride:
    name:
      CSharp:
      - id: Global.TopDownController3DOverride
        name: TopDownController3DOverride
        nameWithType: TopDownController3DOverride
        qualifiedName: TopDownController3DOverride
      VB:
      - id: Global.TopDownController3DOverride
        name: TopDownController3DOverride
        nameWithType: TopDownController3DOverride
        qualifiedName: TopDownController3DOverride
    isDefinition: true
    commentId: T:Global.TopDownController3DOverride
  Global.TopDownEngineInputActionsOverride.asset*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.asset*
        name: asset
        nameWithType: TopDownEngineInputActionsOverride.asset
        qualifiedName: TopDownEngineInputActionsOverride.asset
      VB:
      - id: Global.TopDownEngineInputActionsOverride.asset*
        name: asset
        nameWithType: TopDownEngineInputActionsOverride.asset
        qualifiedName: TopDownEngineInputActionsOverride.asset
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.asset
  Global.TopDownEngineInputActionsOverride.#ctor*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.#ctor*
        name: TopDownEngineInputActionsOverride
        nameWithType: TopDownEngineInputActionsOverride.TopDownEngineInputActionsOverride
        qualifiedName: TopDownEngineInputActionsOverride.TopDownEngineInputActionsOverride
      VB:
      - id: Global.TopDownEngineInputActionsOverride.#ctor*
        name: TopDownEngineInputActionsOverride
        nameWithType: TopDownEngineInputActionsOverride.TopDownEngineInputActionsOverride
        qualifiedName: TopDownEngineInputActionsOverride.TopDownEngineInputActionsOverride
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.#ctor
  Global.TopDownEngineInputActionsOverride.Dispose*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.Dispose*
        name: Dispose
        nameWithType: TopDownEngineInputActionsOverride.Dispose
        qualifiedName: TopDownEngineInputActionsOverride.Dispose
      VB:
      - id: Global.TopDownEngineInputActionsOverride.Dispose*
        name: Dispose
        nameWithType: TopDownEngineInputActionsOverride.Dispose
        qualifiedName: TopDownEngineInputActionsOverride.Dispose
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.Dispose
  Global.TopDownEngineInputActionsOverride.bindingMask*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.bindingMask*
        name: bindingMask
        nameWithType: TopDownEngineInputActionsOverride.bindingMask
        qualifiedName: TopDownEngineInputActionsOverride.bindingMask
      VB:
      - id: Global.TopDownEngineInputActionsOverride.bindingMask*
        name: bindingMask
        nameWithType: TopDownEngineInputActionsOverride.bindingMask
        qualifiedName: TopDownEngineInputActionsOverride.bindingMask
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.bindingMask
  Global.TopDownEngineInputActionsOverride.devices*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.devices*
        name: devices
        nameWithType: TopDownEngineInputActionsOverride.devices
        qualifiedName: TopDownEngineInputActionsOverride.devices
      VB:
      - id: Global.TopDownEngineInputActionsOverride.devices*
        name: devices
        nameWithType: TopDownEngineInputActionsOverride.devices
        qualifiedName: TopDownEngineInputActionsOverride.devices
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.devices
  Global.TopDownEngineInputActionsOverride.controlSchemes*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.controlSchemes*
        name: controlSchemes
        nameWithType: TopDownEngineInputActionsOverride.controlSchemes
        qualifiedName: TopDownEngineInputActionsOverride.controlSchemes
      VB:
      - id: Global.TopDownEngineInputActionsOverride.controlSchemes*
        name: controlSchemes
        nameWithType: TopDownEngineInputActionsOverride.controlSchemes
        qualifiedName: TopDownEngineInputActionsOverride.controlSchemes
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.controlSchemes
  Global.TopDownEngineInputActionsOverride.Contains*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.Contains*
        name: Contains
        nameWithType: TopDownEngineInputActionsOverride.Contains
        qualifiedName: TopDownEngineInputActionsOverride.Contains
      VB:
      - id: Global.TopDownEngineInputActionsOverride.Contains*
        name: Contains
        nameWithType: TopDownEngineInputActionsOverride.Contains
        qualifiedName: TopDownEngineInputActionsOverride.Contains
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.Contains
  Global.TopDownEngineInputActionsOverride.GetEnumerator*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.GetEnumerator*
        name: GetEnumerator
        nameWithType: TopDownEngineInputActionsOverride.GetEnumerator
        qualifiedName: TopDownEngineInputActionsOverride.GetEnumerator
      VB:
      - id: Global.TopDownEngineInputActionsOverride.GetEnumerator*
        name: GetEnumerator
        nameWithType: TopDownEngineInputActionsOverride.GetEnumerator
        qualifiedName: TopDownEngineInputActionsOverride.GetEnumerator
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.GetEnumerator
  Global.TopDownEngineInputActionsOverride.Enable*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.Enable*
        name: Enable
        nameWithType: TopDownEngineInputActionsOverride.Enable
        qualifiedName: TopDownEngineInputActionsOverride.Enable
      VB:
      - id: Global.TopDownEngineInputActionsOverride.Enable*
        name: Enable
        nameWithType: TopDownEngineInputActionsOverride.Enable
        qualifiedName: TopDownEngineInputActionsOverride.Enable
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.Enable
  Global.TopDownEngineInputActionsOverride.Disable*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.Disable*
        name: Disable
        nameWithType: TopDownEngineInputActionsOverride.Disable
        qualifiedName: TopDownEngineInputActionsOverride.Disable
      VB:
      - id: Global.TopDownEngineInputActionsOverride.Disable*
        name: Disable
        nameWithType: TopDownEngineInputActionsOverride.Disable
        qualifiedName: TopDownEngineInputActionsOverride.Disable
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.Disable
  Global.TopDownEngineInputActionsOverride.bindings*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.bindings*
        name: bindings
        nameWithType: TopDownEngineInputActionsOverride.bindings
        qualifiedName: TopDownEngineInputActionsOverride.bindings
      VB:
      - id: Global.TopDownEngineInputActionsOverride.bindings*
        name: bindings
        nameWithType: TopDownEngineInputActionsOverride.bindings
        qualifiedName: TopDownEngineInputActionsOverride.bindings
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.bindings
  Global.TopDownEngineInputActionsOverride.FindAction*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.FindAction*
        name: FindAction
        nameWithType: TopDownEngineInputActionsOverride.FindAction
        qualifiedName: TopDownEngineInputActionsOverride.FindAction
      VB:
      - id: Global.TopDownEngineInputActionsOverride.FindAction*
        name: FindAction
        nameWithType: TopDownEngineInputActionsOverride.FindAction
        qualifiedName: TopDownEngineInputActionsOverride.FindAction
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.FindAction
  Global.TopDownEngineInputActionsOverride.FindBinding*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.FindBinding*
        name: FindBinding
        nameWithType: TopDownEngineInputActionsOverride.FindBinding
        qualifiedName: TopDownEngineInputActionsOverride.FindBinding
      VB:
      - id: Global.TopDownEngineInputActionsOverride.FindBinding*
        name: FindBinding
        nameWithType: TopDownEngineInputActionsOverride.FindBinding
        qualifiedName: TopDownEngineInputActionsOverride.FindBinding
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.FindBinding
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions
        name: TopDownEngineInputActionsOverride.PlayerControlsActions
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions
        name: TopDownEngineInputActionsOverride.PlayerControlsActions
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions
    isDefinition: true
    commentId: T:Global.TopDownEngineInputActionsOverride.PlayerControlsActions
  Global.TopDownEngineInputActionsOverride.PlayerControls*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControls*
        name: PlayerControls
        nameWithType: TopDownEngineInputActionsOverride.PlayerControls
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControls
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControls*
        name: PlayerControls
        nameWithType: TopDownEngineInputActionsOverride.PlayerControls
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControls
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControls
  Global.TopDownEngineInputActionsOverride.UIActions:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.UIActions
        name: TopDownEngineInputActionsOverride.UIActions
        nameWithType: TopDownEngineInputActionsOverride.UIActions
        qualifiedName: TopDownEngineInputActionsOverride.UIActions
      VB:
      - id: Global.TopDownEngineInputActionsOverride.UIActions
        name: TopDownEngineInputActionsOverride.UIActions
        nameWithType: TopDownEngineInputActionsOverride.UIActions
        qualifiedName: TopDownEngineInputActionsOverride.UIActions
    isDefinition: true
    commentId: T:Global.TopDownEngineInputActionsOverride.UIActions
  Global.TopDownEngineInputActionsOverride.UI*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.UI*
        name: UI
        nameWithType: TopDownEngineInputActionsOverride.UI
        qualifiedName: TopDownEngineInputActionsOverride.UI
      VB:
      - id: Global.TopDownEngineInputActionsOverride.UI*
        name: UI
        nameWithType: TopDownEngineInputActionsOverride.UI
        qualifiedName: TopDownEngineInputActionsOverride.UI
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.UI
  Global.TopDownEngineInputActionsOverride.KeyboardScheme*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.KeyboardScheme*
        name: KeyboardScheme
        nameWithType: TopDownEngineInputActionsOverride.KeyboardScheme
        qualifiedName: TopDownEngineInputActionsOverride.KeyboardScheme
      VB:
      - id: Global.TopDownEngineInputActionsOverride.KeyboardScheme*
        name: KeyboardScheme
        nameWithType: TopDownEngineInputActionsOverride.KeyboardScheme
        qualifiedName: TopDownEngineInputActionsOverride.KeyboardScheme
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.KeyboardScheme
  Global.TopDownEngineInputActionsOverride.GamepadScheme*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.GamepadScheme*
        name: GamepadScheme
        nameWithType: TopDownEngineInputActionsOverride.GamepadScheme
        qualifiedName: TopDownEngineInputActionsOverride.GamepadScheme
      VB:
      - id: Global.TopDownEngineInputActionsOverride.GamepadScheme*
        name: GamepadScheme
        nameWithType: TopDownEngineInputActionsOverride.GamepadScheme
        qualifiedName: TopDownEngineInputActionsOverride.GamepadScheme
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.GamepadScheme
  Global.TopDownEngineInputActionsOverride:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride
        name: TopDownEngineInputActionsOverride
        nameWithType: TopDownEngineInputActionsOverride
        qualifiedName: TopDownEngineInputActionsOverride
      VB:
      - id: Global.TopDownEngineInputActionsOverride
        name: TopDownEngineInputActionsOverride
        nameWithType: TopDownEngineInputActionsOverride
        qualifiedName: TopDownEngineInputActionsOverride
    isDefinition: true
    commentId: T:Global.TopDownEngineInputActionsOverride
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.#ctor*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.#ctor*
        name: PlayerControlsActions
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.PlayerControlsActions
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.PlayerControlsActions
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.#ctor*
        name: PlayerControlsActions
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.PlayerControlsActions
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.PlayerControlsActions
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.#ctor
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.PrimaryMovement*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.PrimaryMovement*
        name: PrimaryMovement
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.PrimaryMovement
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.PrimaryMovement
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.PrimaryMovement*
        name: PrimaryMovement
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.PrimaryMovement
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.PrimaryMovement
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.PrimaryMovement
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SecondaryMovement*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SecondaryMovement*
        name: SecondaryMovement
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.SecondaryMovement
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.SecondaryMovement
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SecondaryMovement*
        name: SecondaryMovement
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.SecondaryMovement
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.SecondaryMovement
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SecondaryMovement
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Jump*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Jump*
        name: Jump
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.Jump
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.Jump
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Jump*
        name: Jump
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.Jump
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.Jump
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Jump
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Run*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Run*
        name: Run
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.Run
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.Run
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Run*
        name: Run
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.Run
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.Run
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Run
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Dash*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Dash*
        name: Dash
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.Dash
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.Dash
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Dash*
        name: Dash
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.Dash
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.Dash
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Dash
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Crouch*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Crouch*
        name: Crouch
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.Crouch
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.Crouch
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Crouch*
        name: Crouch
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.Crouch
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.Crouch
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Crouch
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Aim*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Aim*
        name: Aim
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.Aim
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.Aim
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Aim*
        name: Aim
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.Aim
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.Aim
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Aim
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Shoot*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Shoot*
        name: Shoot
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.Shoot
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.Shoot
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Shoot*
        name: Shoot
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.Shoot
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.Shoot
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Shoot
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SecondaryShoot*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SecondaryShoot*
        name: SecondaryShoot
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.SecondaryShoot
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.SecondaryShoot
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SecondaryShoot*
        name: SecondaryShoot
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.SecondaryShoot
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.SecondaryShoot
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SecondaryShoot
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Interact*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Interact*
        name: Interact
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.Interact
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.Interact
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Interact*
        name: Interact
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.Interact
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.Interact
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Interact
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Reload*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Reload*
        name: Reload
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.Reload
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.Reload
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Reload*
        name: Reload
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.Reload
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.Reload
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Reload
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SwitchWeapon*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SwitchWeapon*
        name: SwitchWeapon
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.SwitchWeapon
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.SwitchWeapon
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SwitchWeapon*
        name: SwitchWeapon
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.SwitchWeapon
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.SwitchWeapon
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SwitchWeapon
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SwitchCharacter*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SwitchCharacter*
        name: SwitchCharacter
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.SwitchCharacter
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.SwitchCharacter
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SwitchCharacter*
        name: SwitchCharacter
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.SwitchCharacter
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.SwitchCharacter
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SwitchCharacter
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.TimeControl*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.TimeControl*
        name: TimeControl
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.TimeControl
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.TimeControl
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.TimeControl*
        name: TimeControl
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.TimeControl
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.TimeControl
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.TimeControl
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.CameraInputActive*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.CameraInputActive*
        name: CameraInputActive
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.CameraInputActive
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.CameraInputActive
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.CameraInputActive*
        name: CameraInputActive
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.CameraInputActive
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.CameraInputActive
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.CameraInputActive
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.CameraMove*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.CameraMove*
        name: CameraMove
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.CameraMove
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.CameraMove
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.CameraMove*
        name: CameraMove
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.CameraMove
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.CameraMove
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.CameraMove
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.CameraScale*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.CameraScale*
        name: CameraScale
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.CameraScale
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.CameraScale
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.CameraScale*
        name: CameraScale
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.CameraScale
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.CameraScale
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.CameraScale
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Throw*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Throw*
        name: Throw
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.Throw
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.Throw
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Throw*
        name: Throw
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.Throw
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.Throw
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Throw
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.MousePosition*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.MousePosition*
        name: MousePosition
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.MousePosition
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.MousePosition
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.MousePosition*
        name: MousePosition
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.MousePosition
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.MousePosition
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.MousePosition
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFirstItem*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFirstItem*
        name: EquipFirstItem
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFirstItem
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFirstItem
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFirstItem*
        name: EquipFirstItem
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFirstItem
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFirstItem
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFirstItem
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSecondItem*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSecondItem*
        name: EquipSecondItem
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSecondItem
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSecondItem
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSecondItem*
        name: EquipSecondItem
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSecondItem
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSecondItem
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSecondItem
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipThirdItem*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipThirdItem*
        name: EquipThirdItem
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipThirdItem
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipThirdItem
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipThirdItem*
        name: EquipThirdItem
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipThirdItem
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipThirdItem
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipThirdItem
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFourthItem*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFourthItem*
        name: EquipFourthItem
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFourthItem
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFourthItem
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFourthItem*
        name: EquipFourthItem
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFourthItem
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFourthItem
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFourthItem
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFifthItem*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFifthItem*
        name: EquipFifthItem
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFifthItem
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFifthItem
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFifthItem*
        name: EquipFifthItem
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFifthItem
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFifthItem
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipFifthItem
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSixthItem*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSixthItem*
        name: EquipSixthItem
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSixthItem
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSixthItem
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSixthItem*
        name: EquipSixthItem
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSixthItem
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSixthItem
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSixthItem
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSeventhItem*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSeventhItem*
        name: EquipSeventhItem
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSeventhItem
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSeventhItem
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSeventhItem*
        name: EquipSeventhItem
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSeventhItem
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSeventhItem
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipSeventhItem
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipEighthItem*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipEighthItem*
        name: EquipEighthItem
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipEighthItem
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipEighthItem
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipEighthItem*
        name: EquipEighthItem
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipEighthItem
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipEighthItem
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipEighthItem
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipNinthItem*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipNinthItem*
        name: EquipNinthItem
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipNinthItem
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipNinthItem
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipNinthItem*
        name: EquipNinthItem
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipNinthItem
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipNinthItem
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipNinthItem
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipNextItem*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipNextItem*
        name: EquipNextItem
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipNextItem
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipNextItem
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipNextItem*
        name: EquipNextItem
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipNextItem
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipNextItem
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipNextItem
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipTenthItem*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipTenthItem*
        name: EquipTenthItem
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipTenthItem
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipTenthItem
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipTenthItem*
        name: EquipTenthItem
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipTenthItem
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipTenthItem
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipTenthItem
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipPreviousItem*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipPreviousItem*
        name: EquipPreviousItem
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipPreviousItem
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipPreviousItem
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipPreviousItem*
        name: EquipPreviousItem
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipPreviousItem
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.EquipPreviousItem
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.EquipPreviousItem
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Get*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Get*
        name: Get
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.Get
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.Get
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Get*
        name: Get
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.Get
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.Get
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Get
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Enable*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Enable*
        name: Enable
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.Enable
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.Enable
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Enable*
        name: Enable
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.Enable
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.Enable
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Enable
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Disable*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Disable*
        name: Disable
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.Disable
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.Disable
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Disable*
        name: Disable
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.Disable
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.Disable
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.Disable
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.enabled*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.enabled*
        name: enabled
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.enabled
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.enabled
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.enabled*
        name: enabled
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.enabled
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.enabled
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.enabled
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.op_Implicit*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.op_Implicit*
        name: Implicit
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.Implicit
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.Implicit
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.op_Implicit*
        name: Widening
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.Widening
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.Widening
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.op_Implicit
  Global.TopDownEngineInputActionsOverride.IPlayerControlsActions:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions
        name: TopDownEngineInputActionsOverride.IPlayerControlsActions
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions
        name: TopDownEngineInputActionsOverride.IPlayerControlsActions
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions
    isDefinition: true
    commentId: T:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions
  Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SetCallbacks*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SetCallbacks*
        name: SetCallbacks
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.SetCallbacks
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.SetCallbacks
      VB:
      - id: Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SetCallbacks*
        name: SetCallbacks
        nameWithType: TopDownEngineInputActionsOverride.PlayerControlsActions.SetCallbacks
        qualifiedName: TopDownEngineInputActionsOverride.PlayerControlsActions.SetCallbacks
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.PlayerControlsActions.SetCallbacks
  Global.TopDownEngineInputActionsOverride.UIActions.#ctor*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.#ctor*
        name: UIActions
        nameWithType: TopDownEngineInputActionsOverride.UIActions.UIActions
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.UIActions
      VB:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.#ctor*
        name: UIActions
        nameWithType: TopDownEngineInputActionsOverride.UIActions.UIActions
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.UIActions
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.UIActions.#ctor
  Global.TopDownEngineInputActionsOverride.UIActions.Navigate*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.Navigate*
        name: Navigate
        nameWithType: TopDownEngineInputActionsOverride.UIActions.Navigate
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.Navigate
      VB:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.Navigate*
        name: Navigate
        nameWithType: TopDownEngineInputActionsOverride.UIActions.Navigate
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.Navigate
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.UIActions.Navigate
  Global.TopDownEngineInputActionsOverride.UIActions.Submit*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.Submit*
        name: Submit
        nameWithType: TopDownEngineInputActionsOverride.UIActions.Submit
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.Submit
      VB:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.Submit*
        name: Submit
        nameWithType: TopDownEngineInputActionsOverride.UIActions.Submit
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.Submit
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.UIActions.Submit
  Global.TopDownEngineInputActionsOverride.UIActions.Cancel*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.Cancel*
        name: Cancel
        nameWithType: TopDownEngineInputActionsOverride.UIActions.Cancel
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.Cancel
      VB:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.Cancel*
        name: Cancel
        nameWithType: TopDownEngineInputActionsOverride.UIActions.Cancel
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.Cancel
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.UIActions.Cancel
  Global.TopDownEngineInputActionsOverride.UIActions.Point*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.Point*
        name: Point
        nameWithType: TopDownEngineInputActionsOverride.UIActions.Point
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.Point
      VB:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.Point*
        name: Point
        nameWithType: TopDownEngineInputActionsOverride.UIActions.Point
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.Point
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.UIActions.Point
  Global.TopDownEngineInputActionsOverride.UIActions.Click*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.Click*
        name: Click
        nameWithType: TopDownEngineInputActionsOverride.UIActions.Click
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.Click
      VB:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.Click*
        name: Click
        nameWithType: TopDownEngineInputActionsOverride.UIActions.Click
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.Click
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.UIActions.Click
  Global.TopDownEngineInputActionsOverride.UIActions.ScrollWheel*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.ScrollWheel*
        name: ScrollWheel
        nameWithType: TopDownEngineInputActionsOverride.UIActions.ScrollWheel
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.ScrollWheel
      VB:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.ScrollWheel*
        name: ScrollWheel
        nameWithType: TopDownEngineInputActionsOverride.UIActions.ScrollWheel
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.ScrollWheel
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.UIActions.ScrollWheel
  Global.TopDownEngineInputActionsOverride.UIActions.MiddleClick*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.MiddleClick*
        name: MiddleClick
        nameWithType: TopDownEngineInputActionsOverride.UIActions.MiddleClick
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.MiddleClick
      VB:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.MiddleClick*
        name: MiddleClick
        nameWithType: TopDownEngineInputActionsOverride.UIActions.MiddleClick
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.MiddleClick
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.UIActions.MiddleClick
  Global.TopDownEngineInputActionsOverride.UIActions.RightClick*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.RightClick*
        name: RightClick
        nameWithType: TopDownEngineInputActionsOverride.UIActions.RightClick
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.RightClick
      VB:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.RightClick*
        name: RightClick
        nameWithType: TopDownEngineInputActionsOverride.UIActions.RightClick
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.RightClick
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.UIActions.RightClick
  Global.TopDownEngineInputActionsOverride.UIActions.TrackedDevicePosition*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.TrackedDevicePosition*
        name: TrackedDevicePosition
        nameWithType: TopDownEngineInputActionsOverride.UIActions.TrackedDevicePosition
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.TrackedDevicePosition
      VB:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.TrackedDevicePosition*
        name: TrackedDevicePosition
        nameWithType: TopDownEngineInputActionsOverride.UIActions.TrackedDevicePosition
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.TrackedDevicePosition
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.UIActions.TrackedDevicePosition
  Global.TopDownEngineInputActionsOverride.UIActions.TrackedDeviceOrientation*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.TrackedDeviceOrientation*
        name: TrackedDeviceOrientation
        nameWithType: TopDownEngineInputActionsOverride.UIActions.TrackedDeviceOrientation
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.TrackedDeviceOrientation
      VB:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.TrackedDeviceOrientation*
        name: TrackedDeviceOrientation
        nameWithType: TopDownEngineInputActionsOverride.UIActions.TrackedDeviceOrientation
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.TrackedDeviceOrientation
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.UIActions.TrackedDeviceOrientation
  Global.TopDownEngineInputActionsOverride.UIActions.ToggleMenuPanel*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.ToggleMenuPanel*
        name: ToggleMenuPanel
        nameWithType: TopDownEngineInputActionsOverride.UIActions.ToggleMenuPanel
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.ToggleMenuPanel
      VB:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.ToggleMenuPanel*
        name: ToggleMenuPanel
        nameWithType: TopDownEngineInputActionsOverride.UIActions.ToggleMenuPanel
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.ToggleMenuPanel
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.UIActions.ToggleMenuPanel
  Global.TopDownEngineInputActionsOverride.UIActions.Pause*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.Pause*
        name: Pause
        nameWithType: TopDownEngineInputActionsOverride.UIActions.Pause
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.Pause
      VB:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.Pause*
        name: Pause
        nameWithType: TopDownEngineInputActionsOverride.UIActions.Pause
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.Pause
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.UIActions.Pause
  Global.TopDownEngineInputActionsOverride.UIActions.Next*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.Next*
        name: Next
        nameWithType: TopDownEngineInputActionsOverride.UIActions.Next
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.Next
      VB:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.Next*
        name: Next
        nameWithType: TopDownEngineInputActionsOverride.UIActions.Next
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.Next
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.UIActions.Next
  Global.TopDownEngineInputActionsOverride.UIActions.Previous*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.Previous*
        name: Previous
        nameWithType: TopDownEngineInputActionsOverride.UIActions.Previous
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.Previous
      VB:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.Previous*
        name: Previous
        nameWithType: TopDownEngineInputActionsOverride.UIActions.Previous
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.Previous
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.UIActions.Previous
  Global.TopDownEngineInputActionsOverride.UIActions.Get*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.Get*
        name: Get
        nameWithType: TopDownEngineInputActionsOverride.UIActions.Get
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.Get
      VB:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.Get*
        name: Get
        nameWithType: TopDownEngineInputActionsOverride.UIActions.Get
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.Get
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.UIActions.Get
  Global.TopDownEngineInputActionsOverride.UIActions.Enable*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.Enable*
        name: Enable
        nameWithType: TopDownEngineInputActionsOverride.UIActions.Enable
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.Enable
      VB:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.Enable*
        name: Enable
        nameWithType: TopDownEngineInputActionsOverride.UIActions.Enable
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.Enable
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.UIActions.Enable
  Global.TopDownEngineInputActionsOverride.UIActions.Disable*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.Disable*
        name: Disable
        nameWithType: TopDownEngineInputActionsOverride.UIActions.Disable
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.Disable
      VB:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.Disable*
        name: Disable
        nameWithType: TopDownEngineInputActionsOverride.UIActions.Disable
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.Disable
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.UIActions.Disable
  Global.TopDownEngineInputActionsOverride.UIActions.enabled*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.enabled*
        name: enabled
        nameWithType: TopDownEngineInputActionsOverride.UIActions.enabled
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.enabled
      VB:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.enabled*
        name: enabled
        nameWithType: TopDownEngineInputActionsOverride.UIActions.enabled
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.enabled
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.UIActions.enabled
  Global.TopDownEngineInputActionsOverride.UIActions.op_Implicit*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.op_Implicit*
        name: Implicit
        nameWithType: TopDownEngineInputActionsOverride.UIActions.Implicit
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.Implicit
      VB:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.op_Implicit*
        name: Widening
        nameWithType: TopDownEngineInputActionsOverride.UIActions.Widening
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.Widening
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.UIActions.op_Implicit
  Global.TopDownEngineInputActionsOverride.IUIActions:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IUIActions
        name: TopDownEngineInputActionsOverride.IUIActions
        nameWithType: TopDownEngineInputActionsOverride.IUIActions
        qualifiedName: TopDownEngineInputActionsOverride.IUIActions
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IUIActions
        name: TopDownEngineInputActionsOverride.IUIActions
        nameWithType: TopDownEngineInputActionsOverride.IUIActions
        qualifiedName: TopDownEngineInputActionsOverride.IUIActions
    isDefinition: true
    commentId: T:Global.TopDownEngineInputActionsOverride.IUIActions
  Global.TopDownEngineInputActionsOverride.UIActions.SetCallbacks*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.SetCallbacks*
        name: SetCallbacks
        nameWithType: TopDownEngineInputActionsOverride.UIActions.SetCallbacks
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.SetCallbacks
      VB:
      - id: Global.TopDownEngineInputActionsOverride.UIActions.SetCallbacks*
        name: SetCallbacks
        nameWithType: TopDownEngineInputActionsOverride.UIActions.SetCallbacks
        qualifiedName: TopDownEngineInputActionsOverride.UIActions.SetCallbacks
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.UIActions.SetCallbacks
  Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnPrimaryMovement*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnPrimaryMovement*
        name: OnPrimaryMovement
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnPrimaryMovement
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnPrimaryMovement
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnPrimaryMovement*
        name: OnPrimaryMovement
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnPrimaryMovement
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnPrimaryMovement
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnPrimaryMovement
  Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSecondaryMovement*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSecondaryMovement*
        name: OnSecondaryMovement
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSecondaryMovement
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSecondaryMovement
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSecondaryMovement*
        name: OnSecondaryMovement
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSecondaryMovement
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSecondaryMovement
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSecondaryMovement
  Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnJump*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnJump*
        name: OnJump
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnJump
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnJump
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnJump*
        name: OnJump
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnJump
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnJump
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnJump
  Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnRun*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnRun*
        name: OnRun
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnRun
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnRun
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnRun*
        name: OnRun
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnRun
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnRun
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnRun
  Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnDash*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnDash*
        name: OnDash
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnDash
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnDash
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnDash*
        name: OnDash
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnDash
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnDash
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnDash
  Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCrouch*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCrouch*
        name: OnCrouch
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCrouch
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCrouch
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCrouch*
        name: OnCrouch
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCrouch
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCrouch
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCrouch
  Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnAim*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnAim*
        name: OnAim
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnAim
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnAim
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnAim*
        name: OnAim
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnAim
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnAim
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnAim
  Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnShoot*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnShoot*
        name: OnShoot
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnShoot
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnShoot
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnShoot*
        name: OnShoot
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnShoot
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnShoot
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnShoot
  Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSecondaryShoot*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSecondaryShoot*
        name: OnSecondaryShoot
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSecondaryShoot
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSecondaryShoot
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSecondaryShoot*
        name: OnSecondaryShoot
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSecondaryShoot
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSecondaryShoot
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSecondaryShoot
  Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnInteract*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnInteract*
        name: OnInteract
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnInteract
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnInteract
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnInteract*
        name: OnInteract
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnInteract
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnInteract
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnInteract
  Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnReload*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnReload*
        name: OnReload
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnReload
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnReload
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnReload*
        name: OnReload
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnReload
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnReload
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnReload
  Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSwitchWeapon*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSwitchWeapon*
        name: OnSwitchWeapon
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSwitchWeapon
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSwitchWeapon
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSwitchWeapon*
        name: OnSwitchWeapon
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSwitchWeapon
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSwitchWeapon
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSwitchWeapon
  Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSwitchCharacter*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSwitchCharacter*
        name: OnSwitchCharacter
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSwitchCharacter
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSwitchCharacter
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSwitchCharacter*
        name: OnSwitchCharacter
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSwitchCharacter
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSwitchCharacter
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnSwitchCharacter
  Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnTimeControl*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnTimeControl*
        name: OnTimeControl
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnTimeControl
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnTimeControl
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnTimeControl*
        name: OnTimeControl
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnTimeControl
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnTimeControl
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnTimeControl
  Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraInputActive*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraInputActive*
        name: OnCameraInputActive
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraInputActive
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraInputActive
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraInputActive*
        name: OnCameraInputActive
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraInputActive
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraInputActive
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraInputActive
  Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraMove*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraMove*
        name: OnCameraMove
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraMove
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraMove
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraMove*
        name: OnCameraMove
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraMove
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraMove
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraMove
  Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraScale*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraScale*
        name: OnCameraScale
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraScale
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraScale
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraScale*
        name: OnCameraScale
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraScale
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraScale
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnCameraScale
  Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnThrow*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnThrow*
        name: OnThrow
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnThrow
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnThrow
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnThrow*
        name: OnThrow
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnThrow
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnThrow
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnThrow
  Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnMousePosition*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnMousePosition*
        name: OnMousePosition
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnMousePosition
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnMousePosition
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnMousePosition*
        name: OnMousePosition
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnMousePosition
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnMousePosition
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnMousePosition
  Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFirstItem*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFirstItem*
        name: OnEquipFirstItem
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFirstItem
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFirstItem
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFirstItem*
        name: OnEquipFirstItem
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFirstItem
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFirstItem
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFirstItem
  Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSecondItem*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSecondItem*
        name: OnEquipSecondItem
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSecondItem
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSecondItem
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSecondItem*
        name: OnEquipSecondItem
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSecondItem
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSecondItem
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSecondItem
  Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipThirdItem*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipThirdItem*
        name: OnEquipThirdItem
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipThirdItem
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipThirdItem
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipThirdItem*
        name: OnEquipThirdItem
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipThirdItem
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipThirdItem
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipThirdItem
  Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFourthItem*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFourthItem*
        name: OnEquipFourthItem
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFourthItem
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFourthItem
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFourthItem*
        name: OnEquipFourthItem
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFourthItem
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFourthItem
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFourthItem
  Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFifthItem*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFifthItem*
        name: OnEquipFifthItem
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFifthItem
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFifthItem
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFifthItem*
        name: OnEquipFifthItem
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFifthItem
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFifthItem
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipFifthItem
  Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSixthItem*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSixthItem*
        name: OnEquipSixthItem
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSixthItem
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSixthItem
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSixthItem*
        name: OnEquipSixthItem
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSixthItem
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSixthItem
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSixthItem
  Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSeventhItem*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSeventhItem*
        name: OnEquipSeventhItem
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSeventhItem
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSeventhItem
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSeventhItem*
        name: OnEquipSeventhItem
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSeventhItem
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSeventhItem
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipSeventhItem
  Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipEighthItem*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipEighthItem*
        name: OnEquipEighthItem
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipEighthItem
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipEighthItem
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipEighthItem*
        name: OnEquipEighthItem
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipEighthItem
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipEighthItem
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipEighthItem
  Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipNinthItem*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipNinthItem*
        name: OnEquipNinthItem
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipNinthItem
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipNinthItem
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipNinthItem*
        name: OnEquipNinthItem
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipNinthItem
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipNinthItem
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipNinthItem
  Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipNextItem*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipNextItem*
        name: OnEquipNextItem
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipNextItem
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipNextItem
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipNextItem*
        name: OnEquipNextItem
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipNextItem
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipNextItem
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipNextItem
  Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipTenthItem*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipTenthItem*
        name: OnEquipTenthItem
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipTenthItem
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipTenthItem
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipTenthItem*
        name: OnEquipTenthItem
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipTenthItem
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipTenthItem
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipTenthItem
  Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipPreviousItem*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipPreviousItem*
        name: OnEquipPreviousItem
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipPreviousItem
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipPreviousItem
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipPreviousItem*
        name: OnEquipPreviousItem
        nameWithType: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipPreviousItem
        qualifiedName: TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipPreviousItem
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IPlayerControlsActions.OnEquipPreviousItem
  Global.TopDownEngineInputActionsOverride.IUIActions.OnNavigate*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnNavigate*
        name: OnNavigate
        nameWithType: TopDownEngineInputActionsOverride.IUIActions.OnNavigate
        qualifiedName: TopDownEngineInputActionsOverride.IUIActions.OnNavigate
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnNavigate*
        name: OnNavigate
        nameWithType: TopDownEngineInputActionsOverride.IUIActions.OnNavigate
        qualifiedName: TopDownEngineInputActionsOverride.IUIActions.OnNavigate
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IUIActions.OnNavigate
  Global.TopDownEngineInputActionsOverride.IUIActions.OnSubmit*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnSubmit*
        name: OnSubmit
        nameWithType: TopDownEngineInputActionsOverride.IUIActions.OnSubmit
        qualifiedName: TopDownEngineInputActionsOverride.IUIActions.OnSubmit
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnSubmit*
        name: OnSubmit
        nameWithType: TopDownEngineInputActionsOverride.IUIActions.OnSubmit
        qualifiedName: TopDownEngineInputActionsOverride.IUIActions.OnSubmit
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IUIActions.OnSubmit
  Global.TopDownEngineInputActionsOverride.IUIActions.OnCancel*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnCancel*
        name: OnCancel
        nameWithType: TopDownEngineInputActionsOverride.IUIActions.OnCancel
        qualifiedName: TopDownEngineInputActionsOverride.IUIActions.OnCancel
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnCancel*
        name: OnCancel
        nameWithType: TopDownEngineInputActionsOverride.IUIActions.OnCancel
        qualifiedName: TopDownEngineInputActionsOverride.IUIActions.OnCancel
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IUIActions.OnCancel
  Global.TopDownEngineInputActionsOverride.IUIActions.OnPoint*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnPoint*
        name: OnPoint
        nameWithType: TopDownEngineInputActionsOverride.IUIActions.OnPoint
        qualifiedName: TopDownEngineInputActionsOverride.IUIActions.OnPoint
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnPoint*
        name: OnPoint
        nameWithType: TopDownEngineInputActionsOverride.IUIActions.OnPoint
        qualifiedName: TopDownEngineInputActionsOverride.IUIActions.OnPoint
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IUIActions.OnPoint
  Global.TopDownEngineInputActionsOverride.IUIActions.OnClick*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnClick*
        name: OnClick
        nameWithType: TopDownEngineInputActionsOverride.IUIActions.OnClick
        qualifiedName: TopDownEngineInputActionsOverride.IUIActions.OnClick
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnClick*
        name: OnClick
        nameWithType: TopDownEngineInputActionsOverride.IUIActions.OnClick
        qualifiedName: TopDownEngineInputActionsOverride.IUIActions.OnClick
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IUIActions.OnClick
  Global.TopDownEngineInputActionsOverride.IUIActions.OnScrollWheel*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnScrollWheel*
        name: OnScrollWheel
        nameWithType: TopDownEngineInputActionsOverride.IUIActions.OnScrollWheel
        qualifiedName: TopDownEngineInputActionsOverride.IUIActions.OnScrollWheel
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnScrollWheel*
        name: OnScrollWheel
        nameWithType: TopDownEngineInputActionsOverride.IUIActions.OnScrollWheel
        qualifiedName: TopDownEngineInputActionsOverride.IUIActions.OnScrollWheel
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IUIActions.OnScrollWheel
  Global.TopDownEngineInputActionsOverride.IUIActions.OnMiddleClick*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnMiddleClick*
        name: OnMiddleClick
        nameWithType: TopDownEngineInputActionsOverride.IUIActions.OnMiddleClick
        qualifiedName: TopDownEngineInputActionsOverride.IUIActions.OnMiddleClick
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnMiddleClick*
        name: OnMiddleClick
        nameWithType: TopDownEngineInputActionsOverride.IUIActions.OnMiddleClick
        qualifiedName: TopDownEngineInputActionsOverride.IUIActions.OnMiddleClick
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IUIActions.OnMiddleClick
  Global.TopDownEngineInputActionsOverride.IUIActions.OnRightClick*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnRightClick*
        name: OnRightClick
        nameWithType: TopDownEngineInputActionsOverride.IUIActions.OnRightClick
        qualifiedName: TopDownEngineInputActionsOverride.IUIActions.OnRightClick
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnRightClick*
        name: OnRightClick
        nameWithType: TopDownEngineInputActionsOverride.IUIActions.OnRightClick
        qualifiedName: TopDownEngineInputActionsOverride.IUIActions.OnRightClick
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IUIActions.OnRightClick
  Global.TopDownEngineInputActionsOverride.IUIActions.OnTrackedDevicePosition*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnTrackedDevicePosition*
        name: OnTrackedDevicePosition
        nameWithType: TopDownEngineInputActionsOverride.IUIActions.OnTrackedDevicePosition
        qualifiedName: TopDownEngineInputActionsOverride.IUIActions.OnTrackedDevicePosition
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnTrackedDevicePosition*
        name: OnTrackedDevicePosition
        nameWithType: TopDownEngineInputActionsOverride.IUIActions.OnTrackedDevicePosition
        qualifiedName: TopDownEngineInputActionsOverride.IUIActions.OnTrackedDevicePosition
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IUIActions.OnTrackedDevicePosition
  Global.TopDownEngineInputActionsOverride.IUIActions.OnTrackedDeviceOrientation*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnTrackedDeviceOrientation*
        name: OnTrackedDeviceOrientation
        nameWithType: TopDownEngineInputActionsOverride.IUIActions.OnTrackedDeviceOrientation
        qualifiedName: TopDownEngineInputActionsOverride.IUIActions.OnTrackedDeviceOrientation
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnTrackedDeviceOrientation*
        name: OnTrackedDeviceOrientation
        nameWithType: TopDownEngineInputActionsOverride.IUIActions.OnTrackedDeviceOrientation
        qualifiedName: TopDownEngineInputActionsOverride.IUIActions.OnTrackedDeviceOrientation
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IUIActions.OnTrackedDeviceOrientation
  Global.TopDownEngineInputActionsOverride.IUIActions.OnToggleMenuPanel*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnToggleMenuPanel*
        name: OnToggleMenuPanel
        nameWithType: TopDownEngineInputActionsOverride.IUIActions.OnToggleMenuPanel
        qualifiedName: TopDownEngineInputActionsOverride.IUIActions.OnToggleMenuPanel
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnToggleMenuPanel*
        name: OnToggleMenuPanel
        nameWithType: TopDownEngineInputActionsOverride.IUIActions.OnToggleMenuPanel
        qualifiedName: TopDownEngineInputActionsOverride.IUIActions.OnToggleMenuPanel
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IUIActions.OnToggleMenuPanel
  Global.TopDownEngineInputActionsOverride.IUIActions.OnPause*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnPause*
        name: OnPause
        nameWithType: TopDownEngineInputActionsOverride.IUIActions.OnPause
        qualifiedName: TopDownEngineInputActionsOverride.IUIActions.OnPause
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnPause*
        name: OnPause
        nameWithType: TopDownEngineInputActionsOverride.IUIActions.OnPause
        qualifiedName: TopDownEngineInputActionsOverride.IUIActions.OnPause
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IUIActions.OnPause
  Global.TopDownEngineInputActionsOverride.IUIActions.OnNext*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnNext*
        name: OnNext
        nameWithType: TopDownEngineInputActionsOverride.IUIActions.OnNext
        qualifiedName: TopDownEngineInputActionsOverride.IUIActions.OnNext
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnNext*
        name: OnNext
        nameWithType: TopDownEngineInputActionsOverride.IUIActions.OnNext
        qualifiedName: TopDownEngineInputActionsOverride.IUIActions.OnNext
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IUIActions.OnNext
  Global.TopDownEngineInputActionsOverride.IUIActions.OnPrevious*:
    name:
      CSharp:
      - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnPrevious*
        name: OnPrevious
        nameWithType: TopDownEngineInputActionsOverride.IUIActions.OnPrevious
        qualifiedName: TopDownEngineInputActionsOverride.IUIActions.OnPrevious
      VB:
      - id: Global.TopDownEngineInputActionsOverride.IUIActions.OnPrevious*
        name: OnPrevious
        nameWithType: TopDownEngineInputActionsOverride.IUIActions.OnPrevious
        qualifiedName: TopDownEngineInputActionsOverride.IUIActions.OnPrevious
    isDefinition: true
    commentId: Overload:Global.TopDownEngineInputActionsOverride.IUIActions.OnPrevious
  Global.GammaPostProcess:
    name:
      CSharp:
      - id: Global.GammaPostProcess
        name: GammaPostProcess
        nameWithType: GammaPostProcess
        qualifiedName: GammaPostProcess
      VB:
      - id: Global.GammaPostProcess
        name: GammaPostProcess
        nameWithType: GammaPostProcess
        qualifiedName: GammaPostProcess
    isDefinition: true
    commentId: T:Global.GammaPostProcess
  Global.WeaponParamDebug:
    name:
      CSharp:
      - id: Global.WeaponParamDebug
        name: WeaponParamDebug
        nameWithType: WeaponParamDebug
        qualifiedName: WeaponParamDebug
      VB:
      - id: Global.WeaponParamDebug
        name: WeaponParamDebug
        nameWithType: WeaponParamDebug
        qualifiedName: WeaponParamDebug
    isDefinition: true
    commentId: T:Global.WeaponParamDebug
  Global.WeaponRecoilDisplay:
    name:
      CSharp:
      - id: Global.WeaponRecoilDisplay
        name: WeaponRecoilDisplay
        nameWithType: WeaponRecoilDisplay
        qualifiedName: WeaponRecoilDisplay
      VB:
      - id: Global.WeaponRecoilDisplay
        name: WeaponRecoilDisplay
        nameWithType: WeaponRecoilDisplay
        qualifiedName: WeaponRecoilDisplay
    isDefinition: true
    commentId: T:Global.WeaponRecoilDisplay
  Global.TabToggleEditor.OnEnable*:
    name:
      CSharp:
      - id: Global.TabToggleEditor.OnEnable*
        name: OnEnable
        nameWithType: TabToggleEditor.OnEnable
        qualifiedName: TabToggleEditor.OnEnable
      VB:
      - id: Global.TabToggleEditor.OnEnable*
        name: OnEnable
        nameWithType: TabToggleEditor.OnEnable
        qualifiedName: TabToggleEditor.OnEnable
    isDefinition: true
    commentId: Overload:Global.TabToggleEditor.OnEnable
  Global.TabToggleEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: Global.TabToggleEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: TabToggleEditor.OnInspectorGUI
        qualifiedName: TabToggleEditor.OnInspectorGUI
      VB:
      - id: Global.TabToggleEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: TabToggleEditor.OnInspectorGUI
        qualifiedName: TabToggleEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:Global.TabToggleEditor.OnInspectorGUI
  Global.TabToggleEditor:
    name:
      CSharp:
      - id: Global.TabToggleEditor
        name: TabToggleEditor
        nameWithType: TabToggleEditor
        qualifiedName: TabToggleEditor
      VB:
      - id: Global.TabToggleEditor
        name: TabToggleEditor
        nameWithType: TabToggleEditor
        qualifiedName: TabToggleEditor
    isDefinition: true
    commentId: T:Global.TabToggleEditor
  Global.HUDSway:
    name:
      CSharp:
      - id: Global.HUDSway
        name: HUDSway
        nameWithType: HUDSway
        qualifiedName: HUDSway
      VB:
      - id: Global.HUDSway
        name: HUDSway
        nameWithType: HUDSway
        qualifiedName: HUDSway
    isDefinition: true
    commentId: T:Global.HUDSway
  System.Byte:
    name:
      CSharp:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      VB:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Byte
  Global.TMP_TextInfo:
    name:
      CSharp:
      - id: Global.TMP_TextInfo
        name: TMP_TextInfo
        nameWithType: TMP_TextInfo
        qualifiedName: TMP_TextInfo
        isExternal: true
      VB:
      - id: Global.TMP_TextInfo
        name: TMP_TextInfo
        nameWithType: TMP_TextInfo
        qualifiedName: TMP_TextInfo
        isExternal: true
    isDefinition: true
    commentId: '!:Global.TMP_TextInfo'
  Global.NumberPlaceholderAlpha.ChangePlaceholderAlpha*:
    name:
      CSharp:
      - id: Global.NumberPlaceholderAlpha.ChangePlaceholderAlpha*
        name: ChangePlaceholderAlpha
        nameWithType: NumberPlaceholderAlpha.ChangePlaceholderAlpha
        qualifiedName: NumberPlaceholderAlpha.ChangePlaceholderAlpha
      VB:
      - id: Global.NumberPlaceholderAlpha.ChangePlaceholderAlpha*
        name: ChangePlaceholderAlpha
        nameWithType: NumberPlaceholderAlpha.ChangePlaceholderAlpha
        qualifiedName: NumberPlaceholderAlpha.ChangePlaceholderAlpha
    isDefinition: true
    commentId: Overload:Global.NumberPlaceholderAlpha.ChangePlaceholderAlpha
  Global.NumberPlaceholderAlpha:
    name:
      CSharp:
      - id: Global.NumberPlaceholderAlpha
        name: NumberPlaceholderAlpha
        nameWithType: NumberPlaceholderAlpha
        qualifiedName: NumberPlaceholderAlpha
      VB:
      - id: Global.NumberPlaceholderAlpha
        name: NumberPlaceholderAlpha
        nameWithType: NumberPlaceholderAlpha
        qualifiedName: NumberPlaceholderAlpha
    isDefinition: true
    commentId: T:Global.NumberPlaceholderAlpha
  Global.SelectTextColor.SetTextColor*:
    name:
      CSharp:
      - id: Global.SelectTextColor.SetTextColor*
        name: SetTextColor
        nameWithType: SelectTextColor.SetTextColor
        qualifiedName: SelectTextColor.SetTextColor
      VB:
      - id: Global.SelectTextColor.SetTextColor*
        name: SetTextColor
        nameWithType: SelectTextColor.SetTextColor
        qualifiedName: SelectTextColor.SetTextColor
    isDefinition: true
    commentId: Overload:Global.SelectTextColor.SetTextColor
  Global.SelectTextColor:
    name:
      CSharp:
      - id: Global.SelectTextColor
        name: SelectTextColor
        nameWithType: SelectTextColor
        qualifiedName: SelectTextColor
      VB:
      - id: Global.SelectTextColor
        name: SelectTextColor
        nameWithType: SelectTextColor
        qualifiedName: SelectTextColor
    isDefinition: true
    commentId: T:Global.SelectTextColor
  Global.ToggleTextColor.SetTextColor*:
    name:
      CSharp:
      - id: Global.ToggleTextColor.SetTextColor*
        name: SetTextColor
        nameWithType: ToggleTextColor.SetTextColor
        qualifiedName: ToggleTextColor.SetTextColor
      VB:
      - id: Global.ToggleTextColor.SetTextColor*
        name: SetTextColor
        nameWithType: ToggleTextColor.SetTextColor
        qualifiedName: ToggleTextColor.SetTextColor
    isDefinition: true
    commentId: Overload:Global.ToggleTextColor.SetTextColor
  Global.ToggleTextColor:
    name:
      CSharp:
      - id: Global.ToggleTextColor
        name: ToggleTextColor
        nameWithType: ToggleTextColor
        qualifiedName: ToggleTextColor
      VB:
      - id: Global.ToggleTextColor
        name: ToggleTextColor
        nameWithType: ToggleTextColor
        qualifiedName: ToggleTextColor
    isDefinition: true
    commentId: T:Global.ToggleTextColor
  Global.BodyStatusDisplay.PlayerID*:
    name:
      CSharp:
      - id: Global.BodyStatusDisplay.PlayerID*
        name: PlayerID
        nameWithType: BodyStatusDisplay.PlayerID
        qualifiedName: BodyStatusDisplay.PlayerID
      VB:
      - id: Global.BodyStatusDisplay.PlayerID*
        name: PlayerID
        nameWithType: BodyStatusDisplay.PlayerID
        qualifiedName: BodyStatusDisplay.PlayerID
    isDefinition: true
    commentId: Overload:Global.BodyStatusDisplay.PlayerID
  Global.MMProgressBar:
    name:
      CSharp:
      - id: Global.MMProgressBar
        name: MMProgressBar
        nameWithType: MMProgressBar
        qualifiedName: MMProgressBar
        isExternal: true
      VB:
      - id: Global.MMProgressBar
        name: MMProgressBar
        nameWithType: MMProgressBar
        qualifiedName: MMProgressBar
        isExternal: true
    isDefinition: true
    commentId: '!:Global.MMProgressBar'
  Global.BodyStatusDisplay.HealthBar*:
    name:
      CSharp:
      - id: Global.BodyStatusDisplay.HealthBar*
        name: HealthBar
        nameWithType: BodyStatusDisplay.HealthBar
        qualifiedName: BodyStatusDisplay.HealthBar
      VB:
      - id: Global.BodyStatusDisplay.HealthBar*
        name: HealthBar
        nameWithType: BodyStatusDisplay.HealthBar
        qualifiedName: BodyStatusDisplay.HealthBar
    isDefinition: true
    commentId: Overload:Global.BodyStatusDisplay.HealthBar
  Global.BodyStatusDisplay.Awake*:
    name:
      CSharp:
      - id: Global.BodyStatusDisplay.Awake*
        name: Awake
        nameWithType: BodyStatusDisplay.Awake
        qualifiedName: BodyStatusDisplay.Awake
      VB:
      - id: Global.BodyStatusDisplay.Awake*
        name: Awake
        nameWithType: BodyStatusDisplay.Awake
        qualifiedName: BodyStatusDisplay.Awake
    isDefinition: true
    commentId: Overload:Global.BodyStatusDisplay.Awake
  Global.BodyStatusDisplay.Initialization*:
    name:
      CSharp:
      - id: Global.BodyStatusDisplay.Initialization*
        name: Initialization
        nameWithType: BodyStatusDisplay.Initialization
        qualifiedName: BodyStatusDisplay.Initialization
      VB:
      - id: Global.BodyStatusDisplay.Initialization*
        name: Initialization
        nameWithType: BodyStatusDisplay.Initialization
        qualifiedName: BodyStatusDisplay.Initialization
    isDefinition: true
    commentId: Overload:Global.BodyStatusDisplay.Initialization
  Global.BodyStatusDisplay.UpdateHealthBar*:
    name:
      CSharp:
      - id: Global.BodyStatusDisplay.UpdateHealthBar*
        name: UpdateHealthBar
        nameWithType: BodyStatusDisplay.UpdateHealthBar
        qualifiedName: BodyStatusDisplay.UpdateHealthBar
      VB:
      - id: Global.BodyStatusDisplay.UpdateHealthBar*
        name: UpdateHealthBar
        nameWithType: BodyStatusDisplay.UpdateHealthBar
        qualifiedName: BodyStatusDisplay.UpdateHealthBar
    isDefinition: true
    commentId: Overload:Global.BodyStatusDisplay.UpdateHealthBar
  Global.BodyStatusDisplay:
    name:
      CSharp:
      - id: Global.BodyStatusDisplay
        name: BodyStatusDisplay
        nameWithType: BodyStatusDisplay
        qualifiedName: BodyStatusDisplay
      VB:
      - id: Global.BodyStatusDisplay
        name: BodyStatusDisplay
        nameWithType: BodyStatusDisplay
        qualifiedName: BodyStatusDisplay
    isDefinition: true
    commentId: T:Global.BodyStatusDisplay
  Global.GameplayPanel.SetWeaponDisplays*:
    name:
      CSharp:
      - id: Global.GameplayPanel.SetWeaponDisplays*
        name: SetWeaponDisplays
        nameWithType: GameplayPanel.SetWeaponDisplays
        qualifiedName: GameplayPanel.SetWeaponDisplays
      VB:
      - id: Global.GameplayPanel.SetWeaponDisplays*
        name: SetWeaponDisplays
        nameWithType: GameplayPanel.SetWeaponDisplays
        qualifiedName: GameplayPanel.SetWeaponDisplays
    isDefinition: true
    commentId: Overload:Global.GameplayPanel.SetWeaponDisplays
  Global.GameplayPanel.UpdateHealthBar*:
    name:
      CSharp:
      - id: Global.GameplayPanel.UpdateHealthBar*
        name: UpdateHealthBar
        nameWithType: GameplayPanel.UpdateHealthBar
        qualifiedName: GameplayPanel.UpdateHealthBar
      VB:
      - id: Global.GameplayPanel.UpdateHealthBar*
        name: UpdateHealthBar
        nameWithType: GameplayPanel.UpdateHealthBar
        qualifiedName: GameplayPanel.UpdateHealthBar
    isDefinition: true
    commentId: Overload:Global.GameplayPanel.UpdateHealthBar
  Global.GameplayPanel.UpdateAmmoDisplays*:
    name:
      CSharp:
      - id: Global.GameplayPanel.UpdateAmmoDisplays*
        name: UpdateAmmoDisplays
        nameWithType: GameplayPanel.UpdateAmmoDisplays
        qualifiedName: GameplayPanel.UpdateAmmoDisplays
      VB:
      - id: Global.GameplayPanel.UpdateAmmoDisplays*
        name: UpdateAmmoDisplays
        nameWithType: GameplayPanel.UpdateAmmoDisplays
        qualifiedName: GameplayPanel.UpdateAmmoDisplays
    isDefinition: true
    commentId: Overload:Global.GameplayPanel.UpdateAmmoDisplays
  Global.Sprite:
    name:
      CSharp:
      - id: Global.Sprite
        name: Sprite
        nameWithType: Sprite
        qualifiedName: Sprite
        isExternal: true
      VB:
      - id: Global.Sprite
        name: Sprite
        nameWithType: Sprite
        qualifiedName: Sprite
        isExternal: true
    isDefinition: true
  Global.Weapon.TriggerModes:
    name:
      CSharp:
      - id: Global.Weapon.TriggerModes
        name: Weapon.TriggerModes
        nameWithType: Weapon.TriggerModes
        qualifiedName: Weapon.TriggerModes
        isExternal: true
      VB:
      - id: Global.Weapon.TriggerModes
        name: Weapon.TriggerModes
        nameWithType: Weapon.TriggerModes
        qualifiedName: Weapon.TriggerModes
        isExternal: true
    isDefinition: true
  Global.GameplayPanel.UpdateWeaponIcons*:
    name:
      CSharp:
      - id: Global.GameplayPanel.UpdateWeaponIcons*
        name: UpdateWeaponIcons
        nameWithType: GameplayPanel.UpdateWeaponIcons
        qualifiedName: GameplayPanel.UpdateWeaponIcons
      VB:
      - id: Global.GameplayPanel.UpdateWeaponIcons*
        name: UpdateWeaponIcons
        nameWithType: GameplayPanel.UpdateWeaponIcons
        qualifiedName: GameplayPanel.UpdateWeaponIcons
    isDefinition: true
    commentId: Overload:Global.GameplayPanel.UpdateWeaponIcons
  Global.GameplayPanel:
    name:
      CSharp:
      - id: Global.GameplayPanel
        name: GameplayPanel
        nameWithType: GameplayPanel
        qualifiedName: GameplayPanel
      VB:
      - id: Global.GameplayPanel
        name: GameplayPanel
        nameWithType: GameplayPanel
        qualifiedName: GameplayPanel
    isDefinition: true
    commentId: T:Global.GameplayPanel
  Global.WeaponDisplay.WeaponDisplayID*:
    name:
      CSharp:
      - id: Global.WeaponDisplay.WeaponDisplayID*
        name: WeaponDisplayID
        nameWithType: WeaponDisplay.WeaponDisplayID
        qualifiedName: WeaponDisplay.WeaponDisplayID
      VB:
      - id: Global.WeaponDisplay.WeaponDisplayID*
        name: WeaponDisplayID
        nameWithType: WeaponDisplay.WeaponDisplayID
        qualifiedName: WeaponDisplay.WeaponDisplayID
    isDefinition: true
    commentId: Overload:Global.WeaponDisplay.WeaponDisplayID
  Global.WeaponDisplay.PlayerID*:
    name:
      CSharp:
      - id: Global.WeaponDisplay.PlayerID*
        name: PlayerID
        nameWithType: WeaponDisplay.PlayerID
        qualifiedName: WeaponDisplay.PlayerID
      VB:
      - id: Global.WeaponDisplay.PlayerID*
        name: PlayerID
        nameWithType: WeaponDisplay.PlayerID
        qualifiedName: WeaponDisplay.PlayerID
    isDefinition: true
    commentId: Overload:Global.WeaponDisplay.PlayerID
  Global.WeaponDisplay.Awake*:
    name:
      CSharp:
      - id: Global.WeaponDisplay.Awake*
        name: Awake
        nameWithType: WeaponDisplay.Awake
        qualifiedName: WeaponDisplay.Awake
      VB:
      - id: Global.WeaponDisplay.Awake*
        name: Awake
        nameWithType: WeaponDisplay.Awake
        qualifiedName: WeaponDisplay.Awake
    isDefinition: true
    commentId: Overload:Global.WeaponDisplay.Awake
  Global.WeaponDisplay.Initialization*:
    name:
      CSharp:
      - id: Global.WeaponDisplay.Initialization*
        name: Initialization
        nameWithType: WeaponDisplay.Initialization
        qualifiedName: WeaponDisplay.Initialization
      VB:
      - id: Global.WeaponDisplay.Initialization*
        name: Initialization
        nameWithType: WeaponDisplay.Initialization
        qualifiedName: WeaponDisplay.Initialization
    isDefinition: true
    commentId: Overload:Global.WeaponDisplay.Initialization
  Global.WeaponDisplay.UpdateTextDisplay*:
    name:
      CSharp:
      - id: Global.WeaponDisplay.UpdateTextDisplay*
        name: UpdateTextDisplay
        nameWithType: WeaponDisplay.UpdateTextDisplay
        qualifiedName: WeaponDisplay.UpdateTextDisplay
      VB:
      - id: Global.WeaponDisplay.UpdateTextDisplay*
        name: UpdateTextDisplay
        nameWithType: WeaponDisplay.UpdateTextDisplay
        qualifiedName: WeaponDisplay.UpdateTextDisplay
    isDefinition: true
    commentId: Overload:Global.WeaponDisplay.UpdateTextDisplay
  Global.WeaponDisplay.UpdateAmmoDisplays*:
    name:
      CSharp:
      - id: Global.WeaponDisplay.UpdateAmmoDisplays*
        name: UpdateAmmoDisplays
        nameWithType: WeaponDisplay.UpdateAmmoDisplays
        qualifiedName: WeaponDisplay.UpdateAmmoDisplays
      VB:
      - id: Global.WeaponDisplay.UpdateAmmoDisplays*
        name: UpdateAmmoDisplays
        nameWithType: WeaponDisplay.UpdateAmmoDisplays
        qualifiedName: WeaponDisplay.UpdateAmmoDisplays
    isDefinition: true
    commentId: Overload:Global.WeaponDisplay.UpdateAmmoDisplays
  Global.WeaponDisplay.SetWeaponImage*:
    name:
      CSharp:
      - id: Global.WeaponDisplay.SetWeaponImage*
        name: SetWeaponImage
        nameWithType: WeaponDisplay.SetWeaponImage
        qualifiedName: WeaponDisplay.SetWeaponImage
      VB:
      - id: Global.WeaponDisplay.SetWeaponImage*
        name: SetWeaponImage
        nameWithType: WeaponDisplay.SetWeaponImage
        qualifiedName: WeaponDisplay.SetWeaponImage
    isDefinition: true
    commentId: Overload:Global.WeaponDisplay.SetWeaponImage
  Global.WeaponDisplay.SetAmmoTypeImage*:
    name:
      CSharp:
      - id: Global.WeaponDisplay.SetAmmoTypeImage*
        name: SetAmmoTypeImage
        nameWithType: WeaponDisplay.SetAmmoTypeImage
        qualifiedName: WeaponDisplay.SetAmmoTypeImage
      VB:
      - id: Global.WeaponDisplay.SetAmmoTypeImage*
        name: SetAmmoTypeImage
        nameWithType: WeaponDisplay.SetAmmoTypeImage
        qualifiedName: WeaponDisplay.SetAmmoTypeImage
    isDefinition: true
    commentId: Overload:Global.WeaponDisplay.SetAmmoTypeImage
  Global.WeaponDisplay.SetWeaponTriggerModeImage*:
    name:
      CSharp:
      - id: Global.WeaponDisplay.SetWeaponTriggerModeImage*
        name: SetWeaponTriggerModeImage
        nameWithType: WeaponDisplay.SetWeaponTriggerModeImage
        qualifiedName: WeaponDisplay.SetWeaponTriggerModeImage
      VB:
      - id: Global.WeaponDisplay.SetWeaponTriggerModeImage*
        name: SetWeaponTriggerModeImage
        nameWithType: WeaponDisplay.SetWeaponTriggerModeImage
        qualifiedName: WeaponDisplay.SetWeaponTriggerModeImage
    isDefinition: true
    commentId: Overload:Global.WeaponDisplay.SetWeaponTriggerModeImage
  Global.WeaponDisplay:
    name:
      CSharp:
      - id: Global.WeaponDisplay
        name: WeaponDisplay
        nameWithType: WeaponDisplay
        qualifiedName: WeaponDisplay
      VB:
      - id: Global.WeaponDisplay
        name: WeaponDisplay
        nameWithType: WeaponDisplay
        qualifiedName: WeaponDisplay
    isDefinition: true
    commentId: T:Global.WeaponDisplay
  Global.MainMenuPanel.Awake*:
    name:
      CSharp:
      - id: Global.MainMenuPanel.Awake*
        name: Awake
        nameWithType: MainMenuPanel.Awake
        qualifiedName: MainMenuPanel.Awake
      VB:
      - id: Global.MainMenuPanel.Awake*
        name: Awake
        nameWithType: MainMenuPanel.Awake
        qualifiedName: MainMenuPanel.Awake
    isDefinition: true
    commentId: Overload:Global.MainMenuPanel.Awake
  Global.MainMenuPanel.OnEnable*:
    name:
      CSharp:
      - id: Global.MainMenuPanel.OnEnable*
        name: OnEnable
        nameWithType: MainMenuPanel.OnEnable
        qualifiedName: MainMenuPanel.OnEnable
      VB:
      - id: Global.MainMenuPanel.OnEnable*
        name: OnEnable
        nameWithType: MainMenuPanel.OnEnable
        qualifiedName: MainMenuPanel.OnEnable
    isDefinition: true
    commentId: Overload:Global.MainMenuPanel.OnEnable
  Global.MainMenuPanel.Initialization*:
    name:
      CSharp:
      - id: Global.MainMenuPanel.Initialization*
        name: Initialization
        nameWithType: MainMenuPanel.Initialization
        qualifiedName: MainMenuPanel.Initialization
      VB:
      - id: Global.MainMenuPanel.Initialization*
        name: Initialization
        nameWithType: MainMenuPanel.Initialization
        qualifiedName: MainMenuPanel.Initialization
    isDefinition: true
    commentId: Overload:Global.MainMenuPanel.Initialization
  Global.MainMenuPanel.UpdateHealthBar*:
    name:
      CSharp:
      - id: Global.MainMenuPanel.UpdateHealthBar*
        name: UpdateHealthBar
        nameWithType: MainMenuPanel.UpdateHealthBar
        qualifiedName: MainMenuPanel.UpdateHealthBar
      VB:
      - id: Global.MainMenuPanel.UpdateHealthBar*
        name: UpdateHealthBar
        nameWithType: MainMenuPanel.UpdateHealthBar
        qualifiedName: MainMenuPanel.UpdateHealthBar
    isDefinition: true
    commentId: Overload:Global.MainMenuPanel.UpdateHealthBar
  Global.MainMenuPanel:
    name:
      CSharp:
      - id: Global.MainMenuPanel
        name: MainMenuPanel
        nameWithType: MainMenuPanel
        qualifiedName: MainMenuPanel
      VB:
      - id: Global.MainMenuPanel
        name: MainMenuPanel
        nameWithType: MainMenuPanel
        qualifiedName: MainMenuPanel
    isDefinition: true
    commentId: T:Global.MainMenuPanel
  Global.StateOverviewPanel.UpdateHealthBar*:
    name:
      CSharp:
      - id: Global.StateOverviewPanel.UpdateHealthBar*
        name: UpdateHealthBar
        nameWithType: StateOverviewPanel.UpdateHealthBar
        qualifiedName: StateOverviewPanel.UpdateHealthBar
      VB:
      - id: Global.StateOverviewPanel.UpdateHealthBar*
        name: UpdateHealthBar
        nameWithType: StateOverviewPanel.UpdateHealthBar
        qualifiedName: StateOverviewPanel.UpdateHealthBar
    isDefinition: true
    commentId: Overload:Global.StateOverviewPanel.UpdateHealthBar
  Global.StateOverviewPanel:
    name:
      CSharp:
      - id: Global.StateOverviewPanel
        name: StateOverviewPanel
        nameWithType: StateOverviewPanel
        qualifiedName: StateOverviewPanel
      VB:
      - id: Global.StateOverviewPanel
        name: StateOverviewPanel
        nameWithType: StateOverviewPanel
        qualifiedName: StateOverviewPanel
    isDefinition: true
    commentId: T:Global.StateOverviewPanel
  Global.TMP_InputField:
    name:
      CSharp:
      - id: Global.TMP_InputField
        name: TMP_InputField
        nameWithType: TMP_InputField
        qualifiedName: TMP_InputField
        isExternal: true
      VB:
      - id: Global.TMP_InputField
        name: TMP_InputField
        nameWithType: TMP_InputField
        qualifiedName: TMP_InputField
        isExternal: true
    isDefinition: true
    commentId: '!:Global.TMP_InputField'
  Global.TMP_Text:
    name:
      CSharp:
      - id: Global.TMP_Text
        name: TMP_Text
        nameWithType: TMP_Text
        qualifiedName: TMP_Text
        isExternal: true
      VB:
      - id: Global.TMP_Text
        name: TMP_Text
        nameWithType: TMP_Text
        qualifiedName: TMP_Text
        isExternal: true
    isDefinition: true
    commentId: '!:Global.TMP_Text'
  Global.Scrollbar:
    name:
      CSharp:
      - id: Global.Scrollbar
        name: Scrollbar
        nameWithType: Scrollbar
        qualifiedName: Scrollbar
        isExternal: true
      VB:
      - id: Global.Scrollbar
        name: Scrollbar
        nameWithType: Scrollbar
        qualifiedName: Scrollbar
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Scrollbar'
  Global.ChatController:
    name:
      CSharp:
      - id: Global.ChatController
        name: ChatController
        nameWithType: ChatController
        qualifiedName: ChatController
      VB:
      - id: Global.ChatController
        name: ChatController
        nameWithType: ChatController
        qualifiedName: ChatController
    isDefinition: true
    commentId: T:Global.ChatController
  Global.DropdownSample.OnButtonClick*:
    name:
      CSharp:
      - id: Global.DropdownSample.OnButtonClick*
        name: OnButtonClick
        nameWithType: DropdownSample.OnButtonClick
        qualifiedName: DropdownSample.OnButtonClick
      VB:
      - id: Global.DropdownSample.OnButtonClick*
        name: OnButtonClick
        nameWithType: DropdownSample.OnButtonClick
        qualifiedName: DropdownSample.OnButtonClick
    isDefinition: true
    commentId: Overload:Global.DropdownSample.OnButtonClick
  Global.DropdownSample:
    name:
      CSharp:
      - id: Global.DropdownSample
        name: DropdownSample
        nameWithType: DropdownSample
        qualifiedName: DropdownSample
      VB:
      - id: Global.DropdownSample
        name: DropdownSample
        nameWithType: DropdownSample
        qualifiedName: DropdownSample
    isDefinition: true
    commentId: T:Global.DropdownSample
  Global.EnvMapAnimator:
    name:
      CSharp:
      - id: Global.EnvMapAnimator
        name: EnvMapAnimator
        nameWithType: EnvMapAnimator
        qualifiedName: EnvMapAnimator
      VB:
      - id: Global.EnvMapAnimator
        name: EnvMapAnimator
        nameWithType: EnvMapAnimator
        qualifiedName: EnvMapAnimator
    isDefinition: true
    commentId: T:Global.EnvMapAnimator
  Global:
    name:
      CSharp:
      - name: Global
        nameWithType: Global
        qualifiedName: Global
      VB:
      - name: ''
        nameWithType: ''
        qualifiedName: ''
    isDefinition: true
